[
	{
		"displayText": "AbleICR(resource, mask)",
		"snippet": "AbleICR(${1:struct Library *resource}, ${2:LONG mask})${3:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Enable/disable ICR interrupts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C8.html"
	},
	{
		"displayText": "AbortAslRequest(requester)",
		"snippet": "AbortAslRequest(${1:APTR requester})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attempt to abort an asl requester. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0057.html"
	},
	{
		"displayText": "AbortIO(ioRequest)",
		"snippet": "AbortIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Abort a device command.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0574.html"
	},
	{
		"displayText": "AbortPkt(port, pkt)",
		"snippet": "AbortPkt(${1:struct MsgPort *port}, ${2:struct DosPacket *pkt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Aborts an asynchronous packet, if possible. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0139.html"
	},
	{
		"displayText": "ACrypt(buffer, password, username)",
		"snippet": "ACrypt(${1:STRPTR buffer}, ${2:CONST_STRPTR password}, ${3:CONST_STRPTR username})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Encrypt a password.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001B.html"
	},
	{
		"displayText": "ActivateAslRequest(requester)",
		"snippet": "ActivateAslRequest(${1:APTR requester})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attempt to activate an asl requester. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0058.html"
	},
	{
		"displayText": "ActivateCxObj(cxObject, switch)",
		"snippet": "ActivateCxObj(${1:CxObj *co}, ${2:LONG switch})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the activation state of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E0.html"
	},
	{
		"displayText": "ActivateGadget(gadget, window, requester)",
		"snippet": "ActivateGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Activate a (string or custom) gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node038F.html"
	},
	{
		"displayText": "ActivateLayoutGadget(gadget, window, requester, object)",
		"snippet": "ActivateLayoutGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG obj})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Activate a gadget within a layout window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0439.html"
	},
	{
		"displayText": "ActivateWindow(window)",
		"snippet": "ActivateWindow(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Activate an Intuition window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0390.html"
	},
	{
		"displayText": "AddAmigaGuideHost(hook, name, tag1, ...)",
		"snippet": "AddAmigaGuideHost(${1:struct Hook *hook}, ${2:STRPTR name}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Add a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0007.html"
	},
	{
		"displayText": "AddAmigaGuideHostA(hook, name, attributes)",
		"snippet": "AddAmigaGuideHostA(${1:struct Hook *hook}, ${2:STRPTR name}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Add a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0007.html"
	},
	{
		"displayText": "AddAnimOb(animOb, animKey, rastPort)",
		"snippet": "AddAnimOb(${1:struct AnimOb *anOb}, ${2:struct AnimOb **anKey}, ${3:struct RastPort *rp})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add an AnimOb to the linked list of AnimObs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029C.html"
	},
	{
		"displayText": "AddAppIcon(id, userdata, text, msgport, lock, diskobj, tag1, ...)",
		"snippet": "AddAppIcon(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:BPTR lock}, ${6:struct DiskObject *diskobj}, ${7:Tag tag1}, ${8:...})${9:}",
		"type": "function",
		"leftLabel": "struct AppIcon*",
		"description": "Add an icon to Workbench's list of AppIcons. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BA.html"
	},
	{
		"displayText": "AddAppIconA(id, userdata, text, msgport, lock, diskobj, tagList)",
		"snippet": "AddAppIconA(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:BPTR lock}, ${6:struct DiskObject *diskobj}, ${7:struct TagItem *tagList})${8:}",
		"type": "function",
		"leftLabel": "struct AppIcon*",
		"description": "Add an icon to Workbench's list of AppIcons. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BA.html"
	},
	{
		"displayText": "AddAppMenuItem(id, userdata, text, msgport, tag1, ...)",
		"snippet": "AddAppMenuItem(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:Tag tag1}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "struct AppMenuItem*",
		"description": "Add a menu item to Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BB.html"
	},
	{
		"displayText": "AddAppMenuItemA(id, userdata, text, msgport, tagList)",
		"snippet": "AddAppMenuItemA(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:struct TagItem *tagList})${6:}",
		"type": "function",
		"leftLabel": "struct AppMenuItem*",
		"description": "Add a menu item to Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BB.html"
	},
	{
		"displayText": "AddAppWindow(id, userdata, window, msgport, tag1, ...)",
		"snippet": "AddAppWindow(${1:ULONG id}, ${2:ULONG userdata}, ${3:struct Window *win}, ${4:struct MsgPort *msgport}, ${5:Tag tag1}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "struct AppWindow*",
		"description": "Add a window to Workbench's list of AppWindows. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BC.html"
	},
	{
		"displayText": "AddAppWindowA(id, userdata, window, msgport, tagList)",
		"snippet": "AddAppWindowA(${1:ULONG id}, ${2:ULONG userdata}, ${3:struct Window *win}, ${4:struct MsgPort *msgport}, ${5:struct TagItem *tagList})${6:}",
		"type": "function",
		"leftLabel": "struct AppWindow*",
		"description": "Add a window to Workbench's list of AppWindows. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BC.html"
	},
	{
		"displayText": "AddAppWindowDropZone(window, id, userdata, ...)",
		"snippet": "AddAppWindowDropZone(${1:struct AppWindow *win}, ${2:ULONG id}, ${3:ULONG userdata}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "struct AppWindowDropZone*",
		"description": "Designate an AppWindow area. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BD.html"
	},
	{
		"displayText": "AddAppWindowDropZoneA(window, id, userdata, tags)",
		"snippet": "AddAppWindowDropZoneA(${1:struct AppWindow *win}, ${2:ULONG id}, ${3:ULONG userdata}, ${4:struct TagItem *tags})${5:}",
		"type": "function",
		"leftLabel": "struct AppWindowDropZone*",
		"description": "Designate an AppWindow area. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BD.html"
	},
	{
		"displayText": "AddBob(bob, rastPort)",
		"snippet": "AddBob(${1:struct Bob *bob}, ${2:struct RastPort *rp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Adds a Bob to current gel list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029D.html"
	},
	{
		"displayText": "AddBootNode(bootPri, flags, deviceNode, configDev)",
		"snippet": "AddBootNode(${1:LONG bootPri}, ${2:ULONG flags}, ${3:struct DeviceNode *deviceNode}, ${4:struct ConfigDev *configDev})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Add a BOOTNODE to the system. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025C.html"
	},
	{
		"displayText": "AddBuffers(name, number)",
		"snippet": "AddBuffers(${1:CONST_STRPTR name}, ${2:LONG number})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Changes the number of buffers for a filesystem. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013A.html"
	},
	{
		"displayText": "AddClass(class)",
		"snippet": "AddClass(${1:struct IClass *cl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a public class available. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0391.html"
	},
	{
		"displayText": "AddConfigDev(configDev)",
		"snippet": "AddConfigDev(${1:struct ConfigDev *configDev})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a new ConfigDev structure to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025D.html"
	},
	{
		"displayText": "AddDevice(device)",
		"snippet": "AddDevice(${1:struct Device *device})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a device to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D8.html"
	},
	{
		"displayText": "AddDosEntry(dlist)",
		"snippet": "AddDosEntry(${1:struct DosList *dlist})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add a Dos List entry to the lists. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013B.html"
	},
	{
		"displayText": "AddDosNode(bootPri, flags, deviceNode)",
		"snippet": "AddDosNode(${1:LONG bootPri}, ${2:ULONG flags}, ${3:struct DeviceNode *deviceNode})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Mount a disk to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025E.html"
	},
	{
		"displayText": "AddDTObject(window, requester, object, position)",
		"snippet": "AddDTObject(${1:struct Window *win}, ${2:struct Requester *req}, ${3:Object *obj}, ${4:LONG pos})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an object to a window or requester. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0108.html"
	},
	{
		"displayText": "AddFont(textFont)",
		"snippet": "AddFont(${1:struct TextFont *textFont})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a font to the system list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029E.html"
	},
	{
		"displayText": "AddFreeList(freelist, memory, size)",
		"snippet": "AddFreeList(${1:struct FreeList *freelist}, ${2:CONST APTR mem}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Add memory to a free list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0343.html"
	},
	{
		"displayText": "AddGadget(window, gadget, position)",
		"snippet": "AddGadget(${1:struct Window *win}, ${2:struct Gadget *gad}, ${3:ULONG position})${4:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Add a gadget to the gadget list of a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0392.html"
	},
	{
		"displayText": "AddGList(window, gadget, position, numGad, requester)",
		"snippet": "AddGList(${1:struct Window *win}, ${2:struct Gadget *gad}, ${3:ULONG position}, ${4:LONG numGad}, ${5:struct Requester *req})${6:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Add a linked list of gadgets to a window or requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0393.html"
	},
	{
		"displayText": "AddHead(list, node)",
		"snippet": "AddHead(${1:struct List *list}, ${2:struct Node *node})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert node at the head of a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D9.html"
	},
	{
		"displayText": "AddICRVector(resource, iCRBit, interrupt)",
		"snippet": "AddICRVector(${1:struct Library *resource}, ${2:LONG iCRBit}, ${3:struct Interrupt *interrupt})${4:}",
		"type": "function",
		"leftLabel": "struct Interrupt*",
		"description": "Attach an interrupt handler to a CIA bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C9.html"
	},
	{
		"displayText": "AddIEvents(events)",
		"snippet": "AddIEvents(${1:struct InputEvent *events})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add input events to commodities' input stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E1.html"
	},
	{
		"displayText": "AddIntServer(intNumber, interrupt)",
		"snippet": "AddIntServer(${1:LONG intNumber}, ${2:struct Interrupt *interrupt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add an interrupt server to a system server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DA.html"
	},
	{
		"displayText": "AddKBInt(intRoutine, intData)",
		"snippet": "AddKBInt(${1:CONST APTR intRoutine}, ${2:CONST APTR intData})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Adds a routine to the keyboard interrupt. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0461.html"
	},
	{
		"displayText": "AddLibrary(library)",
		"snippet": "AddLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a library to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DB.html"
	},
	{
		"displayText": "AddMemHandler(memhand)",
		"snippet": "AddMemHandler(${1:struct Interrupt *memhand})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a low memory handler to exec. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DC.html"
	},
	{
		"displayText": "AddMemList(size, attributes, priority, base, name)",
		"snippet": "AddMemList(${1:ULONG size}, ${2:ULONG attrs}, ${3:LONG pri}, ${4:APTR base}, ${5:CONST_STRPTR name})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add memory to the system free pool.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DD.html"
	},
	{
		"displayText": "AddNamedObject(nameSpace, object)",
		"snippet": "AddNamedObject(${1:struct NamedObject *nameSpace}, ${2:struct NamedObject *obj})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Add a named object to the given namespace. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0593.html"
	},
	{
		"displayText": "AddPart(dirname, filename, size)",
		"snippet": "AddPart(${1:STRPTR dirname}, ${2:CONST_STRPTR filename}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Appends a file/dir to the end of a path. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013C.html"
	},
	{
		"displayText": "AddPort(port)",
		"snippet": "AddPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a public message port to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DE.html"
	},
	{
		"displayText": "AddResource(resource)",
		"snippet": "AddResource(${1:APTR resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a resource to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DF.html"
	},
	{
		"displayText": "AddSegment(name, seg, system)",
		"snippet": "AddSegment(${1:CONST_STRPTR name}, ${2:BPTR seg}, ${3:LONG system})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Adds a resident segment to the resident list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013D.html"
	},
	{
		"displayText": "AddSemaphore(sigSem)",
		"snippet": "AddSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize then add a signal semaphore to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E0.html"
	},
	{
		"displayText": "AddTail(list, node)",
		"snippet": "AddTail(${1:struct List *list}, ${2:struct Node *node})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Append node to tail of a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E1.html"
	},
	{
		"displayText": "AddTask(task, initPC, finalPC)",
		"snippet": "AddTask(${1:struct Task *task}, ${2:CONST APTR initPC}, ${3:CONST APTR finalPC})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Add a task to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E2.html"
	},
	{
		"displayText": "AddTime(dest, src)",
		"snippet": "AddTime(${1:struct timeval *dest}, ${2:CONST struct timeval *src})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add one time request to another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0575.html"
	},
	{
		"displayText": "AddTimerInt(intRoutine, intData)",
		"snippet": "AddTimerInt(${1:CONST APTR intRoutine}, ${2:CONST APTR intData})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Adds an interrupt that is executed at regular intervals. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0462.html"
	},
	{
		"displayText": "AddTOF(i, p, a)",
		"snippet": "AddTOF(${1:struct Isrvstr *i}, ${2:APTR p}, ${3:APTR a})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a task to the VBlank interrupt server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001C.html"
	},
	{
		"displayText": "AddVBlankInt(intRoutine, intData)",
		"snippet": "AddVBlankInt(${1:CONST APTR intRoutine}, ${2:CONST APTR intData})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Adds a routine executed every vertical blank. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0463.html"
	},
	{
		"displayText": "AddVSprite(vSprite, rastPort)",
		"snippet": "AddVSprite(${1:struct VSprite *vSprite}, ${2:struct RastPort *rp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a VSprite to the current gel list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029F.html"
	},
	{
		"displayText": "afp(string)",
		"snippet": "afp(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert ASCII string variable into fast floating point.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001D.html"
	},
	{
		"displayText": "Alert(alertNum)",
		"snippet": "Alert(${1:ULONG alertNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Alert the user of an error.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E3.html"
	},
	{
		"displayText": "AllocAbs(byteSize, location)",
		"snippet": "AllocAbs(${1:ULONG byteSize}, ${2:APTR location})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate at a given location.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E4.html"
	},
	{
		"displayText": "AllocAslRequest(reqType, tagList)",
		"snippet": "AllocAslRequest(${1:ULONG reqType}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate an ASL requester. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0059.html"
	},
	{
		"displayText": "Allocate(freeList, byteSize)",
		"snippet": "Allocate(${1:struct MemHeader *freeList}, ${2:ULONG byteSize})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate a block of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E5.html"
	},
	{
		"displayText": "AllocateTagItems(numTags)",
		"snippet": "AllocateTagItems(${1:ULONG numTags})${2:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Allocate a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0594.html"
	},
	{
		"displayText": "AllocBitMap(sizex, sizey, depth, flags, friend)",
		"snippet": "AllocBitMap(${1:ULONG sizex}, ${2:ULONG sizey}, ${3:ULONG depth}, ${4:ULONG flags}, ${5:CONST struct BitMap *friend})${6:}",
		"type": "function",
		"leftLabel": "struct BitMap*",
		"description": "Allocate a bitmap and attach bitplanes to it. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A0.html"
	},
	{
		"displayText": "AllocChooserNode(tag1, ...)",
		"snippet": "AllocChooserNode(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C3.html"
	},
	{
		"displayText": "AllocChooserNodeA(tags)",
		"snippet": "AllocChooserNodeA(${1:struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C3.html"
	},
	{
		"displayText": "AllocClickTabNode(tag1, ...)",
		"snippet": "AllocClickTabNode(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CF.html"
	},
	{
		"displayText": "AllocClickTabNodeA(tags)",
		"snippet": "AllocClickTabNodeA(${1:struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CF.html"
	},
	{
		"displayText": "AllocConfigDev()",
		"snippet": "AllocConfigDev()",
		"type": "function",
		"leftLabel": "struct ConfigDev*",
		"description": "Allocate a ConfigDev structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025F.html"
	},
	{
		"displayText": "AllocDBufInfo(viewPort)",
		"snippet": "AllocDBufInfo(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "struct DBufInfo*",
		"description": "Allocate structure for multi-buffered animation. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A1.html"
	},
	{
		"displayText": "AllocDosObject(type, tags)",
		"snippet": "AllocDosObject(${1:ULONG type}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Creates a dos object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013E.html"
	},
	{
		"displayText": "AllocEntry(entry)",
		"snippet": "AllocEntry(${1:struct MemList *entry})${2:}",
		"type": "function",
		"leftLabel": "struct MemList*",
		"description": "Allocate many regions of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E6.html"
	},
	{
		"displayText": "AllocExpansionMem(numSlots, slotAlign)",
		"snippet": "AllocExpansionMem(${1:ULONG numSlots}, ${2:ULONG slotAlign})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate expansion memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0260.html"
	},
	{
		"displayText": "AllocFileRequest()",
		"snippet": "AllocFileRequest()",
		"type": "function",
		"leftLabel": "struct FileRequester*",
		"description": "Allocates an ASL FileRequester structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005A.html"
	},
	{
		"displayText": "AllocIFF()",
		"snippet": "AllocIFF()",
		"type": "function",
		"leftLabel": "struct IFFHandle*",
		"description": "Create a new IFFHandle structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0359.html"
	},
	{
		"displayText": "AllocListBrowserNode(columns, ...)",
		"snippet": "AllocListBrowserNode(${1:ULONG columns}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0444.html"
	},
	{
		"displayText": "AllocListBrowserNodeA(columns, tags)",
		"snippet": "AllocListBrowserNodeA(${1:ULONG columns}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0444.html"
	},
	{
		"displayText": "AllocLocalItem(type, id, ident, dataSize)",
		"snippet": "AllocLocalItem(${1:LONG type}, ${2:LONG id}, ${3:LONG ident}, ${4:LONG dataSize})${5:}",
		"type": "function",
		"leftLabel": "struct LocalContextItem*",
		"description": "Create a local context item structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035A.html"
	},
	{
		"displayText": "AllocMem(byteSize, requirements)",
		"snippet": "AllocMem(${1:ULONG byteSize}, ${2:ULONG requirements})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory given certain requirements.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E7.html"
	},
	{
		"displayText": "AllocMiscResource(unitNum, name)",
		"snippet": "AllocMiscResource(${1:ULONG unitNum}, ${2:CONST_STRPTR name})${3:}",
		"type": "function",
		"leftLabel": "UBYTE*",
		"description": "Allocate one of the miscelaneous resources.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CE.html"
	},
	{
		"displayText": "AllocNamedObject(name, tag1, ...)",
		"snippet": "AllocNamedObject(${1:CONST_STRPTR name}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct NamedObject*",
		"description": "Allocate a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0595.html"
	},
	{
		"displayText": "AllocNamedObjectA(name, tagList)",
		"snippet": "AllocNamedObjectA(${1:CONST_STRPTR name}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct NamedObject*",
		"description": "Allocate a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0595.html"
	},
	{
		"displayText": "AllocPooled(poolHeader, memSize)",
		"snippet": "AllocPooled(${1:APTR poolHeader}, ${2:ULONG memSize})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory with the pool manager. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E8.html"
	},
	{
		"displayText": "AllocPotBits(bits)",
		"snippet": "AllocPotBits(${1:ULONG bits})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Allocate bits in the potgo register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04FF.html"
	},
	{
		"displayText": "AllocRadioButtonNode(columns, tag1, ...)",
		"snippet": "AllocRadioButtonNode(${1:ULONG columns}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051D.html"
	},
	{
		"displayText": "AllocRadioButtonNodeA(columns, tags)",
		"snippet": "AllocRadioButtonNodeA(${1:ULONG columns}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051D.html"
	},
	{
		"displayText": "AllocRaster(width, height)",
		"snippet": "AllocRaster(${1:ULONG width}, ${2:ULONG height})${3:}",
		"type": "function",
		"leftLabel": "PLANEPTR",
		"description": "Allocate space for a bitplane.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A2.html"
	},
	{
		"displayText": "AllocRemember(rememberKey, size, flags)",
		"snippet": "AllocRemember(${1:struct Remember **rememberKey}, ${2:ULONG size}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "AllocMem() with tracking to make freeing easy.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0394.html"
	},
	{
		"displayText": "AllocScreenBuffer(sc, bm, flags)",
		"snippet": "AllocScreenBuffer(${1:struct Screen *sc}, ${2:struct BitMap *bm}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "struct ScreenBuffer*",
		"description": "Get a ScreenBuffer for double-buffering. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0395.html"
	},
	{
		"displayText": "AllocSignal(signalNum)",
		"snippet": "AllocSignal(${1:LONG signalNum})${2:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Allocate a signal bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E9.html"
	},
	{
		"displayText": "AllocSpeedButtonNode(number, tag1, ...)",
		"snippet": "AllocSpeedButtonNode(${1:ULONG number}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0569.html"
	},
	{
		"displayText": "AllocSpeedButtonNodeA(number, tags)",
		"snippet": "AllocSpeedButtonNodeA(${1:ULONG number}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0569.html"
	},
	{
		"displayText": "AllocSpriteData(bitMap, tag1, ...)",
		"snippet": "AllocSpriteData(${1:CONST struct BitMap *bm}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct ExtSprite*",
		"description": "Allocate sprite data and convert from a bitmap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A3.html"
	},
	{
		"displayText": "AllocSpriteDataA(bitMap, tags)",
		"snippet": "AllocSpriteDataA(${1:CONST struct BitMap *bm}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct ExtSprite*",
		"description": "Allocate sprite data and convert from a bitmap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A3.html"
	},
	{
		"displayText": "AllocTrap(trapNum)",
		"snippet": "AllocTrap(${1:LONG trapNum})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Allocate a processor trap vector.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EA.html"
	},
	{
		"displayText": "AllocUnit(unitNum)",
		"snippet": "AllocUnit(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Allocate a unit of the disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012C.html"
	},
	{
		"displayText": "AllocVec(byteSize, requirements)",
		"snippet": "AllocVec(${1:ULONG byteSize}, ${2:ULONG requirements})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory and keep track of the size. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EB.html"
	},
	{
		"displayText": "Amiga2Date(seconds, result)",
		"snippet": "Amiga2Date(${1:ULONG seconds}, ${2:struct ClockData *result})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Fill in a ClockData structure based on a system time stamp (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0596.html"
	},
	{
		"displayText": "AmigaGuideSignal(handle)",
		"snippet": "AmigaGuideSignal(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain aysnc AmigaGuide signal. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0008.html"
	},
	{
		"displayText": "AndRectRegion(region, rectangle)",
		"snippet": "AndRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Perform 2d AND operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A4.html"
	},
	{
		"displayText": "AndRegionRegion(srcRegion, destRegion)",
		"snippet": "AndRegionRegion(${1:CONST struct Region *src}, ${2:struct Region *dest})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d AND operation of two regions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A5.html"
	},
	{
		"displayText": "Animate(anKey, rastPort)",
		"snippet": "Animate(${1:struct AnimOb **anKey}, ${2:struct RastPort *rp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Processes every AnimOb in the current animation list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A6.html"
	},
	{
		"displayText": "ApplyTagChanges(list, changeList)",
		"snippet": "ApplyTagChanges(${1:struct TagItem *list}, ${2:CONST struct TagItem *changeList})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change a tag list based on a second tag list. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0597.html"
	},
	{
		"displayText": "AreaCircle(rastPort, xCenter, yCenter, radius)",
		"snippet": "AreaCircle(${1:struct RastPort *rp}, ${2:WORD xCenter}, ${3:WORD yCenter}, ${4:WORD radius})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Add a circle to areainfo list for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A7.html"
	},
	{
		"displayText": "AreaDraw(rastPort, x, y)",
		"snippet": "AreaDraw(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add a point to a list of end points for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A8.html"
	},
	{
		"displayText": "AreaEllipse(rastPort, xCenter, yCenter, a, b)",
		"snippet": "AreaEllipse(${1:struct RastPort *rp}, ${2:LONG xCenter}, ${3:LONG yCenter}, ${4:LONG a}, ${5:LONG b})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an ellipse to areainfo list for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A9.html"
	},
	{
		"displayText": "AreaEnd(rastPort)",
		"snippet": "AreaEnd(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Process table of vectors and ellipses and produce areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AA.html"
	},
	{
		"displayText": "AreaMove(rastPort, x, y)",
		"snippet": "AreaMove(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Define a new starting point for a new shape in the vector list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AB.html"
	},
	{
		"displayText": "ArgArrayDone()",
		"snippet": "ArgArrayDone()",
		"type": "function",
		"leftLabel": "void",
		"description": "Release the memory allocated by a previous call to ArgArrayInit(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001E.html"
	},
	{
		"displayText": "ArgArrayInit(argc, argv)",
		"snippet": "ArgArrayInit(${1:LONG argc}, ${2:CONST_STRPTR *argv})${3:}",
		"type": "function",
		"leftLabel": "STRPTR*",
		"description": "Allocate and initialize a tooltype array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001F.html"
	},
	{
		"displayText": "ArgInt(tt, entry, defaultval)",
		"snippet": "ArgInt(${1:CONST_STRPTR *tt}, ${2:CONST_STRPTR entry}, ${3:LONG defaultval})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return an integer value from a ToolTypes array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0020.html"
	},
	{
		"displayText": "ArgString(toolTypes, entry, defaultstring)",
		"snippet": "ArgString(${1:CONST_STRPTR *toolTypes}, ${2:CONST_STRPTR entry}, ${3:CONST_STRPTR defStr})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Return a string pointer from a ToolTypes array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0021.html"
	},
	{
		"displayText": "arnd(place, exp, string)",
		"snippet": "arnd(${1:LONG place}, ${2:LONG exp}, ${3:STRPTR str})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "ASCII round of the provided floating point string.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0022.html"
	},
	{
		"displayText": "AskFont(rastPort, textAttr)",
		"snippet": "AskFont(${1:struct RastPort *rp}, ${2:struct TextAttr *attr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the text attributes of the current font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AC.html"
	},
	{
		"displayText": "AskKeyMapDefault()",
		"snippet": "AskKeyMapDefault()",
		"type": "function",
		"leftLabel": "struct KeyMap*",
		"description": "Ask for a pointer to the current default keymap. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0410.html"
	},
	{
		"displayText": "AskSoftStyle(rastPort)",
		"snippet": "AskSoftStyle(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the soft style bits of the current font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AD.html"
	},
	{
		"displayText": "AslRequest(requester, tagList)",
		"snippet": "AslRequest(${1:APTR requester}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Get input from user using an ASL requester. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005B.html"
	},
	{
		"displayText": "AssignAdd(name, lock)",
		"snippet": "AssignAdd(${1:CONST_STRPTR name}, ${2:BPTR lock})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Adds a lock to an assign for multi-directory assigns. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013F.html"
	},
	{
		"displayText": "AssignLate(name, path)",
		"snippet": "AssignLate(${1:CONST_STRPTR name}, ${2:CONST_STRPTR path})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Creates an assignment to a specified path later. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0140.html"
	},
	{
		"displayText": "AssignLock(name, lock)",
		"snippet": "AssignLock(${1:CONST_STRPTR name}, ${2:BPTR lock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Creates an assignment to a locked object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0141.html"
	},
	{
		"displayText": "AssignPath(name, path)",
		"snippet": "AssignPath(${1:CONST_STRPTR name}, ${2:CONST_STRPTR path})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Creates an assignment to a specified path. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0142.html"
	},
	{
		"displayText": "AttachCxObj(headObj, cxObj)",
		"snippet": "AttachCxObj(${1:CxObj *headObj}, ${2:CxObj *co})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attach a commodity object to the end of an existing list of objects. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E2.html"
	},
	{
		"displayText": "AttachPalExtra(colorMap, viewPort)",
		"snippet": "AttachPalExtra(${1:struct ColorMap *cm}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Allocate and attach a palette sharing structure to a colormap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AE.html"
	},
	{
		"displayText": "AttemptLockDosList(flags)",
		"snippet": "AttemptLockDosList(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Attempt to lock the Dos Lists for use. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0143.html"
	},
	{
		"displayText": "AttemptLockLayerRom(layer)",
		"snippet": "AttemptLockLayerRom(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Attempt to Lock Layer structure by ROM(gfx lib) code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AF.html"
	},
	{
		"displayText": "AttemptRemNamedObject(object)",
		"snippet": "AttemptRemNamedObject(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Attempt to remove a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0598.html"
	},
	{
		"displayText": "AttemptSemaphore(sigSem)",
		"snippet": "AttemptSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Try to obtain without blocking.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EC.html"
	},
	{
		"displayText": "AttemptSemaphoreShared(sigSem)",
		"snippet": "AttemptSemaphoreShared(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Try to obtain without blocking. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01ED.html"
	},
	{
		"displayText": "AutoRequest(window, body, posText, negText, pFlag, nFlag, width, height)",
		"snippet": "AutoRequest(${1:struct Window *win}, ${2:CONST struct IntuiText *body}, ${3:CONST struct IntuiText *posText}, ${4:CONST struct IntuiText *negText}, ${5:ULONG pFlag}, ${6:ULONG nFlag}, ${7:ULONG width}, ${8:ULONG height})${9:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Automatically build and get response from a requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0396.html"
	},
	{
		"displayText": "AvailFonts(buffer, bufBytes, flags)",
		"snippet": "AvailFonts(${1:STRPTR buffer}, ${2:LONG bufBytes}, ${3:LONG flags})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Inquire available memory & disk fonts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0133.html"
	},
	{
		"displayText": "AvailMem(requirements)",
		"snippet": "AvailMem(${1:ULONG requirements})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Memory available given certain requirements.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EE.html"
	},
	{
		"displayText": "BeginCardAccess(handle)",
		"snippet": "BeginCardAccess(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Called before you begin credit-card memory access.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008F.html"
	},
	{
		"displayText": "BeginIO(ioRequest)",
		"snippet": "BeginIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initiate asynchronous device I/O.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0557.html"
	},
	{
		"displayText": "BeginRefresh(window)",
		"snippet": "BeginRefresh(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sets up a window for optimized refreshing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0397.html"
	},
	{
		"displayText": "BeginUpdate(layer)",
		"snippet": "BeginUpdate(${1:struct Layer *l})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Prepare to repair damaged layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0418.html"
	},
	{
		"displayText": "BehindLayer(dummy, layer)",
		"snippet": "BehindLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Put layer behind other layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0419.html"
	},
	{
		"displayText": "BestModeID(tag1, ...)",
		"snippet": "BestModeID(${1:ULONG tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate the best ModeID with given parameters. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B0.html"
	},
	{
		"displayText": "BestModeIDA(tags)",
		"snippet": "BestModeIDA(${1:CONST struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate the best ModeID with given parameters. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B0.html"
	},
	{
		"displayText": "BEVEL_GetClass()",
		"snippet": "BEVEL_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the bevel class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0080.html"
	},
	{
		"displayText": "BITMAP_GetClass()",
		"snippet": "BITMAP_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the bitmap class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0083.html"
	},
	{
		"displayText": "BitMapScale(bitScaleArgs)",
		"snippet": "BitMapScale(${1:struct BitScaleArgs *bitScaleArgs})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Perform raster scaling on a bit map. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B1.html"
	},
	{
		"displayText": "BltBitMap(srcBitMap, xSrc, ySrc, destBitMap, xDest, yDest, xSize, ySize, minterm, mask, tempA)",
		"snippet": "BltBitMap(${1:CONST struct BitMap *src}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct BitMap *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm}, ${10:ULONG mask}, ${11:PLANEPTR tempA})${12:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Move a rectangular region of bits in a BitMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B2.html"
	},
	{
		"displayText": "BltBitMapRastPort(srcBitMap, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm)",
		"snippet": "BltBitMapRastPort(${1:CONST struct BitMap src}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm})${10:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Blit from source bitmap to destination rastport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B3.html"
	},
	{
		"displayText": "BltClear(memBlock, byteCount, flags)",
		"snippet": "BltClear(${1:PLANEPTR memBlock}, ${2:ULONG byteCount}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear a block of memory words to zero.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B4.html"
	},
	{
		"displayText": "BltMaskBitMapRastPort(srcBitMap, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm, bltMask)",
		"snippet": "BltMaskBitMapRastPort(${1:CONST struct BitMap src}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm}, ${10:CONST PLANEPTR bltMask})${11:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Blit from source bitmap to destination rastport with masking.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B5.html"
	},
	{
		"displayText": "BltPattern(rastPort, mask, xMin, yMin, xMax, yMax, maskBPR)",
		"snippet": "BltPattern(${1:struct RastPort *rp}, ${2:CONST PLANEPTR mask}, ${3:LONG xMin}, ${4:LONG yMin}, ${5:LONG xMax}, ${6:LONG yMax}, ${7:ULONG maskBPR})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Blit through a mask using standard drawing rules for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B6.html"
	},
	{
		"displayText": "BltTemplate(source, xSrc, srcMod, destRP, xDest, yDest, xSize, ySize)",
		"snippet": "BltTemplate(${1:CONST PLANEPTR source}, ${2:LONG xSrc}, ${3:LONG srcMod}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize})${9:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Cookie cut a shape in a rectangle to the RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B7.html"
	},
	{
		"displayText": "BrowserNodes(label1, ...)",
		"snippet": "BrowserNodes(${1:STRPTR label1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of listbrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0523.html"
	},
	{
		"displayText": "BrowserNodesA(labels)",
		"snippet": "BrowserNodesA(${1:STRPTR *labels})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of listbrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0523.html"
	},
	{
		"displayText": "BuildEasyRequestArgs(window, easyStruct, idcmp, args)",
		"snippet": "BuildEasyRequestArgs(${1:struct Window *win}, ${2:CONST struct EasyStruct *easyStruct}, ${3:ULONG idcmp}, ${4:CONST APTR args})${5:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Simple creation of system request. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0398.html"
	},
	{
		"displayText": "BuildSysRequest(window, body, posText, negText, flags, width, height)",
		"snippet": "BuildSysRequest(${1:struct Window *win}, ${2:CONST struct IntuiText *body}, ${3:CONST struct IntuiText *posText}, ${4:CONST struct IntuiText *negText}, ${5:ULONG flags}, ${6:ULONG width}, ${7:ULONG height})${8:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Build and display a system requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0399.html"
	},
	{
		"displayText": "BumpRevision(newname, oldname)",
		"snippet": "BumpRevision(${1:STRPTR newname}, ${2:CONST STRPTR oldname})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Reformat a name for a second copy.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0344.html"
	},
	{
		"displayText": "BUTTON_GetClass()",
		"snippet": "BUTTON_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the button class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008D.html"
	},
	{
		"displayText": "CacheClearE(address, length, caches)",
		"snippet": "CacheClearE(${1:APTR address}, ${2:ULONG length}, ${3:ULONG caches})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Cache clearing with extended control. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EF.html"
	},
	{
		"displayText": "CacheClearU()",
		"snippet": "CacheClearU()",
		"type": "function",
		"leftLabel": "void",
		"description": "User callable simple cache clearing. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F0.html"
	},
	{
		"displayText": "CacheControl(cacheBits, cacheMask)",
		"snippet": "CacheControl(${1:ULONG cacheBits}, ${2:ULONG cacheMask})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Instruction & data cache control.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F1.html"
	},
	{
		"displayText": "CachePostDMA(address, length, flags)",
		"snippet": "CachePostDMA(${1:CONST APTR address}, ${2:ULONG *length}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Take actions after to hardware DMA. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F2.html"
	},
	{
		"displayText": "CachePreDMA(address, length, flags)",
		"snippet": "CachePreDMA(${1:CONST APTR address}, ${2:ULONG *length}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Take actions prior to hardware DMA. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F3.html"
	},
	{
		"displayText": "CalcIVG(view, viewPort)",
		"snippet": "CalcIVG(${1:struct View *v}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Calculate the number of blank lines above a ViewPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B8.html"
	},
	{
		"displayText": "CallHook(hook, object, ...)",
		"snippet": "CallHook(${1:struct Hook *hook}, ${2:Object *obj}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke a hook given a message on the stack.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0024.html"
	},
	{
		"displayText": "CallHookA(hook, object, message)",
		"snippet": "CallHookA(${1:struct Hook *hook}, ${2:Object *obj}, ${3:APTR msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke a hook given a pointer to a message.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0025.html"
	},
	{
		"displayText": "CallHookPkt(hook, object, paramPacket)",
		"snippet": "CallHookPkt(${1:struct Hook *hook}, ${2:APTR object}, ${3:APTR paramPacket})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke a Hook function callback. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0599.html"
	},
	{
		"displayText": "CardAccessSpeed(handle, nanoseconds)",
		"snippet": "CardAccessSpeed(${1:struct CardHandle *handle}, ${2:ULONG nanoseconds})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Select best possible memory access speed.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0090.html"
	},
	{
		"displayText": "CardChangeCount()",
		"snippet": "CardChangeCount()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain card change count.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0091.html"
	},
	{
		"displayText": "CardForceChange()",
		"snippet": "CardForceChange()",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Force a card change.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0092.html"
	},
	{
		"displayText": "CardInterface()",
		"snippet": "CardInterface()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Determine the type of card interface.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0093.html"
	},
	{
		"displayText": "CardMiscControl(handle, control_bits)",
		"snippet": "CardMiscControl(${1:struct CardHandle *handle}, ${2:ULONG control_bits})${3:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Set/Clear miscellaneous control bits.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0094.html"
	},
	{
		"displayText": "CardProgramVoltage(handle, voltage)",
		"snippet": "CardProgramVoltage(${1:struct CardHandle *handle}, ${2:ULONG voltage})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set programming voltage.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0095.html"
	},
	{
		"displayText": "CardResetCard(handle)",
		"snippet": "CardResetCard(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Reset credit-card.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0096.html"
	},
	{
		"displayText": "CardResetRemove(handle, flag)",
		"snippet": "CardResetRemove(${1:struct CardHandle *handle}, ${2:ULONG flag})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set/Clear reset on card removal.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0097.html"
	},
	{
		"displayText": "Cause(interrupt)",
		"snippet": "Cause(${1:struct Interrupt *interrupt})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Cause a software interrupt.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F4.html"
	},
	{
		"displayText": "CBump(copList)",
		"snippet": "CBump(${1:struct UCopList *copList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Increment user copper list pointer (bump to next position in list).",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B9.html"
	},
	{
		"displayText": "CDInputHandler(events, consoleDevice)",
		"snippet": "CDInputHandler(${1:CONST struct InputEvent *events}, ${2:struct Library *consoleDevice})${3:}",
		"type": "function",
		"leftLabel": "struct InputEvent*",
		"description": "Handle an input event for the console device.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00FF.html"
	},
	{
		"displayText": "ChangeExtSprite(viewPort, oldSprite, newSprite, tag1, ...)",
		"snippet": "ChangeExtSprite(${1:struct ViewPort *vp}, ${2:struct ExtSprite *oldsprite}, ${3:struct ExtSprite *newsprite}, ${4:ULONG tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the sprite image pointer. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BB.html"
	},
	{
		"displayText": "ChangeExtSpriteA(viewPort, oldSprite, newSprite, tags)",
		"snippet": "ChangeExtSpriteA(${1:struct ViewPort *vp}, ${2:struct ExtSprite *oldsprite}, ${3:struct ExtSprite *newsprite}, ${4:CONST struct TagItem *tags})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the sprite image pointer. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BB.html"
	},
	{
		"displayText": "ChangeMode(type, fh, newmode)",
		"snippet": "ChangeMode(${1:LONG type}, ${2:BPTR fh}, ${3:LONG newmode})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the current mode of a lock or filehandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0144.html"
	},
	{
		"displayText": "ChangeScreenBuffer(sc, sb)",
		"snippet": "ChangeScreenBuffer(${1:struct Screen *sc}, ${2:struct ScreenBuffer *sb})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Swap the screen's BitMap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039A.html"
	},
	{
		"displayText": "ChangeSprite(viewPort, sprite, newData)",
		"snippet": "ChangeSprite(${1:struct ViewPort *vp}, ${2:struct SimpleSprite *sprite}, ${3:UWORD *newData})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the sprite image pointer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BC.html"
	},
	{
		"displayText": "ChangeToSelectedIconColor(cr)",
		"snippet": "ChangeToSelectedIconColor(${1:struct ColorRegister *cr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Modify a RGB color value for use in a selected icon image (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0345.html"
	},
	{
		"displayText": "ChangeVPBitMap(viewPort, bitMap, dbInfo)",
		"snippet": "ChangeVPBitMap(${1:struct ViewPort *vp}, ${2:struct BitMap *bm}, ${3:struct DBufInfo *db})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change display memory address for multi-buffered animation. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BD.html"
	},
	{
		"displayText": "ChangeWindowBox(window, left, top, width, height)",
		"snippet": "ChangeWindowBox(${1:struct Window *win}, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change window position and dimensions. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039B.html"
	},
	{
		"displayText": "ChangeWorkbenchSelection(name, hook, ...)",
		"snippet": "ChangeWorkbenchSelection(${1:STRPTR name}, ${2:struct Hook *hook}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the selection states of icons. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BE.html"
	},
	{
		"displayText": "ChangeWorkbenchSelectionA(name, hook, tags)",
		"snippet": "ChangeWorkbenchSelectionA(${1:STRPTR name}, ${2:struct Hook *hook}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the selection states of icons. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BE.html"
	},
	{
		"displayText": "CHECKBOX_GetClass()",
		"snippet": "CHECKBOX_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the checkbox class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00BE.html"
	},
	{
		"displayText": "CheckDate(date)",
		"snippet": "CheckDate(${1:CONST struct ClockData *date})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Checks a ClockData structure for legal date. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059A.html"
	},
	{
		"displayText": "CheckIO(ioRequest)",
		"snippet": "CheckIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "struct IORequest*",
		"description": "Get the status of an IORequest.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F5.html"
	},
	{
		"displayText": "CheckRexxMsg(rexxmsg)",
		"snippet": "CheckRexxMsg(${1:CONST struct RexxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Check if a RexxMsg is from ARexx.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0026.html"
	},
	{
		"displayText": "CheckSignal(mask)",
		"snippet": "CheckSignal(${1:LONG mask})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Checks for break signals. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0145.html"
	},
	{
		"displayText": "CHOOSER_GetClass()",
		"snippet": "CHOOSER_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the chooser class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C2.html"
	},
	{
		"displayText": "ChooserLabels(STRPTR, ...)",
		"snippet": "ChooserLabels(${1:STRPTR}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of chooser labels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0524.html"
	},
	{
		"displayText": "ChooserLabelsA(*)",
		"snippet": "ChooserLabelsA(${1:STRPTR *})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of chooser labels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0524.html"
	},
	{
		"displayText": "ClearCxObjError(co)",
		"snippet": "ClearCxObjError(${1:CxObj *co})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear the accumulated error value of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E3.html"
	},
	{
		"displayText": "ClearDMRequest(window)",
		"snippet": "ClearDMRequest(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Clear (detaches) the DMRequest of the window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039C.html"
	},
	{
		"displayText": "ClearEOL(rastPort)",
		"snippet": "ClearEOL(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear from current position to end of line.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BF.html"
	},
	{
		"displayText": "ClearMenuStrip(window)",
		"snippet": "ClearMenuStrip(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear (detach) the menu strip from the window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039D.html"
	},
	{
		"displayText": "ClearPointer(window)",
		"snippet": "ClearPointer(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear the mouse pointer definition from a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039E.html"
	},
	{
		"displayText": "ClearRectRegion(region, rectangle)",
		"snippet": "ClearRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d CLEAR operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C0.html"
	},
	{
		"displayText": "ClearRegion(region)",
		"snippet": "ClearRegion(${1:struct Region *region})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove all rectangles from region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C1.html"
	},
	{
		"displayText": "ClearRexxMsg(msgptr, count)",
		"snippet": "ClearRexxMsg(${1:struct RexxMsg *msgptr}, ${2:ULONG count})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases and clears the argument array in a RexxMsg.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0548.html"
	},
	{
		"displayText": "ClearScreen(rastPort)",
		"snippet": "ClearScreen(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear from current position to end of RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C2.html"
	},
	{
		"displayText": "CLICKTAB_GetClass()",
		"snippet": "CLICKTAB_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the clicktab class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CE.html"
	},
	{
		"displayText": "Cli()",
		"snippet": "Cli()",
		"type": "function",
		"leftLabel": "struct CommandLineInterface*",
		"description": "Returns a pointer to the CLI structure of the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0146.html"
	},
	{
		"displayText": "ClickTabs(STRPTR, ...)",
		"snippet": "ClickTabs(${1:STRPTR}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of clicktab nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0525.html"
	},
	{
		"displayText": "ClickTabsA(*)",
		"snippet": "ClickTabsA(${1:STRPTR *})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of clicktab nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0525.html"
	},
	{
		"displayText": "CliInitNewcli(dp)",
		"snippet": "CliInitNewcli(${1:struct DosPacket *dp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set up a process to be a shell from initial packet.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0147.html"
	},
	{
		"displayText": "CliInitRun(dp)",
		"snippet": "CliInitRun(${1:struct DosPacket *dp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set up a process to be a shell from initial packet.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0148.html"
	},
	{
		"displayText": "ClipBlit(srcRP, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm)",
		"snippet": "ClipBlit(${1:struct RastPort *srcRP}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm})${10:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Calls BltBitMap() after accounting for windows.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C3.html"
	},
	{
		"displayText": "CloneTagItems(tagList)",
		"snippet": "CloneTagItems(${1:CONST struct TagItem *tagList})${2:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Copy a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059B.html"
	},
	{
		"displayText": "Close(file)",
		"snippet": "Close(${1:BPTR file})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Close an open file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0149.html"
	},
	{
		"displayText": "CloseAmigaGuide(handle)",
		"snippet": "CloseAmigaGuide(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close an AmigaGuide client. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0009.html"
	},
	{
		"displayText": "CloseCatalog(catalog)",
		"snippet": "CloseCatalog(${1:struct Catalog *catalog})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close a message catalog. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0452.html"
	},
	{
		"displayText": "CloseClipboard(clipHandle)",
		"snippet": "CloseClipboard(${1:struct ClipboardHandle *clipHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close and free an open ClipboardHandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035B.html"
	},
	{
		"displayText": "CloseDevice(ioRequest)",
		"snippet": "CloseDevice(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Terminate access to the audio device.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0558.html"
	},
	{
		"displayText": "CloseEngine(glyphEngine)",
		"snippet": "CloseEngine(${1:struct GlyphEngine *glyphEngine})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release an engine handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0086.html"
	},
	{
		"displayText": "CloseFont(textFont)",
		"snippet": "CloseFont(${1:struct TextFont *textFont})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a pointer to a system font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C4.html"
	},
	{
		"displayText": "CloseIFF(iffHandle)",
		"snippet": "CloseIFF(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close an IFF context. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035C.html"
	},
	{
		"displayText": "CloseLibrary(library)",
		"snippet": "CloseLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Conclude access to a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F7.html"
	},
	{
		"displayText": "CloseLocale(locale)",
		"snippet": "CloseLocale(${1:struct Locale *locale})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close a locale. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0453.html"
	},
	{
		"displayText": "CloseMonitor(monitorSpec)",
		"snippet": "CloseMonitor(${1:struct MonitorSpec *spec})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close a MonitorSpec. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C5.html"
	},
	{
		"displayText": "CloseScreen(screen)",
		"snippet": "CloseScreen(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close an Intuition screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039F.html"
	},
	{
		"displayText": "CloseWindow(window)",
		"snippet": "CloseWindow(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close an Intuition window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A0.html"
	},
	{
		"displayText": "CloseWorkBench()",
		"snippet": "CloseWorkBench()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Closes the Workbench screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A1.html"
	},
	{
		"displayText": "CloseWorkbenchObject(name, ...)",
		"snippet": "CloseWorkbenchObject(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close a drawer window. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BF.html"
	},
	{
		"displayText": "CloseWorkbenchObjectA(name, tags)",
		"snippet": "CloseWorkbenchObjectA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close a drawer window. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BF.html"
	},
	{
		"displayText": "CmpTime(dest, src)",
		"snippet": "CmpTime(${1:CONST struct timeval *dest}, ${2:CONST struct timeval *src})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two timeval structures.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0576.html"
	},
	{
		"displayText": "CoerceMethod(class, object, methodID, ...)",
		"snippet": "CoerceMethod(${1:struct IClass *cl}, ${2:Object *obj}, ${3:ULONG methodID}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on coerced object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0027.html"
	},
	{
		"displayText": "CoerceMethodA(class, object, message)",
		"snippet": "CoerceMethodA(${1:struct IClass *cl}, ${2:Object *obj}, ${3:Msg msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on coerced object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0028.html"
	},
	{
		"displayText": "CoerceMode(viewPort, monitorID, flags)",
		"snippet": "CoerceMode(${1:struct ViewPort *vp}, ${2:ULONG monitorid}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate ViewPort mode coercion. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C7.html"
	},
	{
		"displayText": "ColdReboot()",
		"snippet": "ColdReboot()",
		"type": "function",
		"leftLabel": "void",
		"description": "Reboot the Amiga. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F8.html"
	},
	{
		"displayText": "CollectionChunk(iffHandle, type, id)",
		"snippet": "CollectionChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare a chunk type for collection. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035D.html"
	},
	{
		"displayText": "CollectionChunks(iffHandle, propArray, numPairs)",
		"snippet": "CollectionChunks(${1:struct IFFHandle *iff}, ${2:CONST LONG *propArray}, ${3:LONG numPairs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare many collection chunks at once. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035E.html"
	},
	{
		"displayText": "CompareDates(date1, date2)",
		"snippet": "CompareDates(${1:CONST struct DateStamp *date1}, ${2:CONST struct DateStamp *date2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compares two datestamps. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014A.html"
	},
	{
		"displayText": "ConfigBoard(board, configDev)",
		"snippet": "ConfigBoard(${1:APTR board}, ${2:struct ConfigDev *configDev})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Configure a board.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0261.html"
	},
	{
		"displayText": "ConvertHSBToRGB(hsb, rgb)",
		"snippet": "ConvertHSBToRGB(${1:struct ColorWheelHSB *hsb}, ${2:struct ColorWheelRGB *rgb})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert from an HSB color space to an RGB color space. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00DD.html"
	},
	{
		"displayText": "ConvertRGBToHSB(rgb, hsb)",
		"snippet": "ConvertRGBToHSB(${1:struct ColorWheelRGB *rgb}, ${2:struct ColorWheelHSB *hsb})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert from an RGB color space to an HSB color space. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00DE.html"
	},
	{
		"displayText": "ConvToLower(locale, character)",
		"snippet": "ConvToLower(${1:struct Locale *locale}, ${2:ULONG ch})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Convert a character to lower case. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0454.html"
	},
	{
		"displayText": "ConvToUpper(locale, character)",
		"snippet": "ConvToUpper(${1:struct Locale *locale}, ${2:ULONG ch})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Convert a character to upper case. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0455.html"
	},
	{
		"displayText": "CopyMem(source, dest, size)",
		"snippet": "CopyMem(${1:CONST APTR source}, ${2:APTR dest}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "General purpose memory copy function.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F9.html"
	},
	{
		"displayText": "CopyMemQuick(source, dest, size)",
		"snippet": "CopyMemQuick(${1:CONST APTR source}, ${2:APTR dest}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Optimized memory copy function.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FA.html"
	},
	{
		"displayText": "CopySBitMap(layer)",
		"snippet": "CopySBitMap(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Syncronize Layer window with contents of Super BitMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C8.html"
	},
	{
		"displayText": "CopyTuple(handle, buffer, tuplecode, size)",
		"snippet": "CopyTuple(${1:CONST struct CardHandle *handle}, ${2:UBYTE *buffer}, ${3:ULONG tuplecode}, ${4:ULONG size})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Find/copy a credit card tuple.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0098.html"
	},
	{
		"displayText": "CreateArgstring(string, length)",
		"snippet": "CreateArgstring(${1:CONST_STRPTR str}, ${2:ULONG length})${3:}",
		"type": "function",
		"leftLabel": "UBYTE*",
		"description": "Create an argument string structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0549.html"
	},
	{
		"displayText": "CreateBehindHookLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, hook, bitMap2)",
		"snippet": "CreateBehindHookLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct Hook *hook}, ${9:struct BitMap *bm2})${10:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a layer behind all layers using callback hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041A.html"
	},
	{
		"displayText": "CreateBehindLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, bitMap2)",
		"snippet": "CreateBehindLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct BitMap *bm2})${9:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a new layer behind all existing layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041B.html"
	},
	{
		"displayText": "CreateContext(glistpointer)",
		"snippet": "CreateContext(${1:struct Gadget **glistptr})${2:}",
		"type": "function",
		"leftLabel": "struct Gadget*",
		"description": "Create a place for GadTools context data. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0274.html"
	},
	{
		"displayText": "CreateCxObj(type, arg1, arg2)",
		"snippet": "CreateCxObj(${1:ULONG type}, ${2:LONG arg1}, ${3:LONG arg2})${4:}",
		"type": "function",
		"leftLabel": "CxObj*",
		"description": "Create a new commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E4.html"
	},
	{
		"displayText": "CreateDir(name)",
		"snippet": "CreateDir(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Create a new directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014B.html"
	},
	{
		"displayText": "CreateExtIO(port, ioSize)",
		"snippet": "CreateExtIO(${1:CONST struct MsgPort *port}, ${2:LONG ioSize})${3:}",
		"type": "function",
		"leftLabel": "struct IORequest*",
		"description": "Create an IORequest structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0029.html"
	},
	{
		"displayText": "CreateGadget(kind, gadget, newGadget, tag1, ...)",
		"snippet": "CreateGadget(${1:ULONG kind}, ${2:struct Gadget *gad}, ${3:CONST struct NewGadget *ng}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "struct Gadget*",
		"description": "Allocate and initialize a gadtools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0275.html"
	},
	{
		"displayText": "CreateGadgetA(kind, gadget, newGadget, tagList)",
		"snippet": "CreateGadgetA(${1:ULONG kind}, ${2:struct Gadget *gad}, ${3:CONST struct NewGadget *ng}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "struct Gadget*",
		"description": "Allocate and initialize a gadtools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0275.html"
	},
	{
		"displayText": "CreateIORequest(port, size)",
		"snippet": "CreateIORequest(${1:CONST struct MsgPort *port}, ${2:ULONG size})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Create an IORequest structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FB.html"
	},
	{
		"displayText": "CreateMenus(newMenu, tag1, ...)",
		"snippet": "CreateMenus(${1:CONST struct NewMenu *menu}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct Menu*",
		"description": "Allocate and fill out a menu structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0276.html"
	},
	{
		"displayText": "CreateMenusA(newMenu, tagList)",
		"snippet": "CreateMenusA(${1:CONST struct NewMenu *menu}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct Menu*",
		"description": "Allocate and fill out a menu structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0276.html"
	},
	{
		"displayText": "CreateMsgPort()",
		"snippet": "CreateMsgPort()",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Allocate and initialize a new message port. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FC.html"
	},
	{
		"displayText": "CreateNewProc(tags)",
		"snippet": "CreateNewProc(${1:CONST struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "struct Process*",
		"description": "Create a new process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014C.html"
	},
	{
		"displayText": "CreatePlayer(tag1, ...)",
		"snippet": "CreatePlayer(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Player*",
		"description": "Create a player and link it to a conductor. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0533.html"
	},
	{
		"displayText": "CreatePool(requirements, puddleSize, threshSize)",
		"snippet": "CreatePool(${1:ULONG requirements}, ${2:ULONG puddleSize}, ${3:ULONG threshSize})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Generate a private memory pool header. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FD.html"
	},
	{
		"displayText": "CreatePort(name, priority)",
		"snippet": "CreatePort(${1:CONST_STRPTR name}, ${2:LONG pri})${3:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Allocate and initialize a new message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node002A.html"
	},
	{
		"displayText": "CreateProc(name, priority, segList, stackSize)",
		"snippet": "CreateProc(${1:CONST_STRPTR name}, ${2:LONG pri}, ${3:BPTR segList}, ${4:LONG stackSize})${5:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Create a new process.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014D.html"
	},
	{
		"displayText": "CreateRexxMsg(port, extension, host)",
		"snippet": "CreateRexxMsg(${1:CONST struct MsgPort *port}, ${2:CONST_STRPTR extension}, ${3:CONST_STRPTR host})${4:}",
		"type": "function",
		"leftLabel": "struct RexxMsg*",
		"description": "Create an ARexx message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054A.html"
	},
	{
		"displayText": "CreateStdIO(port)",
		"snippet": "CreateStdIO(${1:CONST struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "struct IOStdReq*",
		"description": "Create an IOStdReq structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node002B.html"
	},
	{
		"displayText": "CreateTask(name, priority, initPC, stackSize)",
		"snippet": "CreateTask(${1:CONST_STRPTR name}, ${2:LONG pri}, ${3:CONST APTR initPC}, ${4:ULONG stackSize})${5:}",
		"type": "function",
		"leftLabel": "struct Task*",
		"description": "Create task with given name, priority, stacksize.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node002C.html"
	},
	{
		"displayText": "CreateUpfrontHookLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, hook, bitMap2)",
		"snippet": "CreateUpfrontHookLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct Hook *hook}, ${9:struct BitMap *bm2})${10:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a layer on top of all layers using callback hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041C.html"
	},
	{
		"displayText": "CreateUpfrontLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, bitMap2)",
		"snippet": "CreateUpfrontLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct BitMap *bm2})${9:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a new layer on top of existing layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041D.html"
	},
	{
		"displayText": "CurrentChunk(iffHandle)",
		"snippet": "CurrentChunk(${1:CONST struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "struct ContextNode*",
		"description": "Get context node for current chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035F.html"
	},
	{
		"displayText": "CurrentDir(lock)",
		"snippet": "CurrentDir(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Make a directory lock the current directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014E.html"
	},
	{
		"displayText": "CurrentTime(seconds, micros)",
		"snippet": "CurrentTime(${1:ULONG *seconds}, ${2:ULONG *micros})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the current time values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A2.html"
	},
	{
		"displayText": "CxBroker(newBroker, error)",
		"snippet": "CxBroker(${1:CONST struct NewBroker *nb}, ${2:LONG *error})${3:}",
		"type": "function",
		"leftLabel": "CxObj*",
		"description": "Create a commodity broker. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E5.html"
	},
	{
		"displayText": "CxMsgData(cxMessage)",
		"snippet": "CxMsgData(${1:CONST CxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Obtain a pointer to a commodity message's data area. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E6.html"
	},
	{
		"displayText": "CxMsgID(cxMessage)",
		"snippet": "CxMsgID(${1:CONST CxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Obtain the ID of a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E7.html"
	},
	{
		"displayText": "CxMsgType(cxMessage)",
		"snippet": "CxMsgType(${1:CONST CxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain the type of a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E8.html"
	},
	{
		"displayText": "CxObjError(cxObject)",
		"snippet": "CxObjError(${1:CONST CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Obtain a commodity object's accumulated error. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E9.html"
	},
	{
		"displayText": "CxObjType(cxObject)",
		"snippet": "CxObjType(${1:CONST CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain the type of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EA.html"
	},
	{
		"displayText": "Date2Amiga(date)",
		"snippet": "Date2Amiga(${1:CONST struct ClockData *date})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate seconds from 01-Jan-1978. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059C.html"
	},
	{
		"displayText": "DateStamp(date)",
		"snippet": "DateStamp(${1:struct DateStamp *date})${2:}",
		"type": "function",
		"leftLabel": "struct DateStamp*",
		"description": "Obtain the date and time in internal format.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014F.html"
	},
	{
		"displayText": "DateToStr(datetime)",
		"snippet": "DateToStr(${1:struct DateTime *datetime})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Converts a DateStamp to a string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0150.html"
	},
	{
		"displayText": "dbf(exp, mant)",
		"snippet": "dbf(${1:ULONG exp}, ${2:ULONG mant})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert FFP dual-binary number to FFP format.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0033.html"
	},
	{
		"displayText": "DDoFmt(formatString, dataStream, putChProc, putChData)",
		"snippet": "DDoFmt(${1:CONST_STRPTR fmt}, ${2:CONST APTR dataStream}, ${3:CONST APTR putChProc}, ${4:APTR putChData})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Format data into a character stream.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011B.html"
	},
	{
		"displayText": "Deallocate(freeList, memoryBlock, byteSize)",
		"snippet": "Deallocate(${1:struct MemHeader *freeList}, ${2:APTR memoryBlock}, ${3:ULONG byteSize})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate a block of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FE.html"
	},
	{
		"displayText": "Debug(flags)",
		"snippet": "Debug(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Run the system debugger.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FF.html"
	},
	{
		"displayText": "Delay(timeout)",
		"snippet": "Delay(${1:LONG timeout})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delay a process for a specified time.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0151.html"
	},
	{
		"displayText": "DeleteArgstring(argstring)",
		"snippet": "DeleteArgstring(${1:STRPTR argstring})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases an Argstring created by CreateArgstring()",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054B.html"
	},
	{
		"displayText": "DeleteCxObj(cxObject)",
		"snippet": "DeleteCxObj(${1:CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a commmodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EB.html"
	},
	{
		"displayText": "DeleteCxObjAll(cxObj)",
		"snippet": "DeleteCxObjAll(${1:CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Recursively delete a tree of commodity objects. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EC.html"
	},
	{
		"displayText": "DeleteDiskObject(name)",
		"snippet": "DeleteDiskObject(${1:CONST STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Delete a Workbench disk object from disk. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0346.html"
	},
	{
		"displayText": "DeleteExtIO(ioReq)",
		"snippet": "DeleteExtIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return memory allocated for extended IO request.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0034.html"
	},
	{
		"displayText": "DeleteFile(name)",
		"snippet": "DeleteFile(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Delete a file or directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0152.html"
	},
	{
		"displayText": "DeleteIORequest(iorequest)",
		"snippet": "DeleteIORequest(${1:APTR ioreq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a request made by CreateIORequest(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0200.html"
	},
	{
		"displayText": "DeleteLayer(dummy, layer)",
		"snippet": "DeleteLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Delete layer from layer list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041E.html"
	},
	{
		"displayText": "DeleteMsgPort(port)",
		"snippet": "DeleteMsgPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a message port created by CreateMsgPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0201.html"
	},
	{
		"displayText": "DeleteNV(appName, itemName, killRequesters)",
		"snippet": "DeleteNV(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:LONG killReqs})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove an entry from nonvoltatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DC.html"
	},
	{
		"displayText": "DeletePlayer(player)",
		"snippet": "DeletePlayer(${1:struct Player *player})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0534.html"
	},
	{
		"displayText": "DeletePool(poolHeader)",
		"snippet": "DeletePool(${1:APTR poolHeader})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Drain an entire memory pool. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0202.html"
	},
	{
		"displayText": "DeletePort(ioReq)",
		"snippet": "DeletePort(${1:struct MsgPort *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a message port created by CreatePort().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0035.html"
	},
	{
		"displayText": "DeleteRexxMsg(packet)",
		"snippet": "DeleteRexxMsg(${1:struct RexxMsg *packet})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases a RexxMsg structure created by CreateRexxMsg()",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054C.html"
	},
	{
		"displayText": "DeleteStdIO(ioReq)",
		"snippet": "DeleteStdIO(${1:struct IOStdReq *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return memory allocated for IOStdReq.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0036.html"
	},
	{
		"displayText": "DeleteTask(task)",
		"snippet": "DeleteTask(${1:struct Task *task})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a task created with CreateTask().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0037.html"
	},
	{
		"displayText": "DeleteVar(name, flags)",
		"snippet": "DeleteVar(${1:CONST_STRPTR name}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Deletes a local or environment variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0153.html"
	},
	{
		"displayText": "DeviceProc(name)",
		"snippet": "DeviceProc(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Return the process MsgPort of specific I/O handler.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0154.html"
	},
	{
		"displayText": "DeviceTuple(tuple_data, storage)",
		"snippet": "DeviceTuple(${1:CONST UBYTE *tuple_data}, ${2:struct DeviceTData *storage})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Decode a device tuple.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0099.html"
	},
	{
		"displayText": "DGetChar()",
		"snippet": "DGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011C.html"
	},
	{
		"displayText": "DGetChar()",
		"snippet": "DGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011C.html"
	},
	{
		"displayText": "DGetNum()",
		"snippet": "DGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011D.html"
	},
	{
		"displayText": "DGetNum()",
		"snippet": "DGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011D.html"
	},
	{
		"displayText": "Disable()",
		"snippet": "Disable()",
		"type": "function",
		"leftLabel": "void",
		"description": "Disable interrupt processing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0203.html"
	},
	{
		"displayText": "DisownBlitter()",
		"snippet": "DisownBlitter()",
		"type": "function",
		"leftLabel": "void",
		"description": "Return blitter to free state.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CA.html"
	},
	{
		"displayText": "DisplayAlert(alertNumber, string, height)",
		"snippet": "DisplayAlert(${1:ULONG alertNumber}, ${2:CONST_STRPTR str}, ${3:ULONG height})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Create the display of an alert message.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A3.html"
	},
	{
		"displayText": "DisplayBeep(screen)",
		"snippet": "DisplayBeep(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Flash the video display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A4.html"
	},
	{
		"displayText": "DisposeCxMsg(cxMessage)",
		"snippet": "DisposeCxMsg(${1:CxMsg *cxm})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00ED.html"
	},
	{
		"displayText": "DisposeDTObject(object)",
		"snippet": "DisposeDTObject(${1:Object *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a data type object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0109.html"
	},
	{
		"displayText": "DisposeFontContents(fontContentsHeader)",
		"snippet": "DisposeFontContents(${1:struct FontContentsHeader *fch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free the result from NewFontContents. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0134.html"
	},
	{
		"displayText": "DisposeLayerInfo(layerInfo)",
		"snippet": "DisposeLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return all memory for LayerInfo to memory pool.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041F.html"
	},
	{
		"displayText": "DisposeObject(object)",
		"snippet": "DisposeObject(${1:APTR obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deletes a 'boopsi' object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A5.html"
	},
	{
		"displayText": "DisposeRegion(region)",
		"snippet": "DisposeRegion(${1:struct Region *region})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return all space for this region to free.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CB.html"
	},
	{
		"displayText": "DivertCxMsg(cxm, headObj, returnObj)",
		"snippet": "DivertCxMsg(${1:CxMsg *cxm}, ${2:CxObj *headObj}, ${3:CxObj *returnObj})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Send a commodity message down an object list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EE.html"
	},
	{
		"displayText": "DMayGetChar()",
		"snippet": "DMayGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return a char iff present, but don't block.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011E.html"
	},
	{
		"displayText": "DoAsyncLayout(object, gpLayout)",
		"snippet": "DoAsyncLayout(${1:Object *obj}, ${2:struct gpLayout *gpl})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Call the DTM_ASYNCLAYOUT method on a separate process. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010A.html"
	},
	{
		"displayText": "DoCollision(rastPort)",
		"snippet": "DoCollision(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Test every gel in gel list for collisions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CC.html"
	},
	{
		"displayText": "DoDTMethod(object, window, requester, data, ...)",
		"snippet": "DoDTMethod(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG data}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Do a datatypes method. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010B.html"
	},
	{
		"displayText": "DoDTMethodA(object, window, requester, message)",
		"snippet": "DoDTMethodA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Msg msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Do a datatypes method. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010B.html"
	},
	{
		"displayText": "DoGadgetMethod(gadget, window, requester, methodID, ...)",
		"snippet": "DoGadgetMethod(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG methodID}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke method on a boopsi gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A6.html"
	},
	{
		"displayText": "DoGadgetMethodA(gadget, window, requester, message)",
		"snippet": "DoGadgetMethodA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Msg msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke method on a boopsi gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A6.html"
	},
	{
		"displayText": "DoHookClipRects(hook, rport, rect)",
		"snippet": "DoHookClipRects(${1:struct Hook *hook}, ${2:struct RastPort *rport}, ${3:CONST struct Rectangle *rect})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Do the given hook for each of the ClipRects. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0420.html"
	},
	{
		"displayText": "DoIO(ioRequest)",
		"snippet": "DoIO(${1:struct IORequest *ior})${2:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Perform an I/O command and wait for completion.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0204.html"
	},
	{
		"displayText": "DoMethod(object, methodID, ...)",
		"snippet": "DoMethod(${1:Object *obj}, ${2:ULONG methodID}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0038.html"
	},
	{
		"displayText": "DoMethodA(object, message)",
		"snippet": "DoMethodA(${1:Object *obj}, ${2:Msg msg})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0039.html"
	},
	{
		"displayText": "DoPkt(port, action, arg1, arg2, arg3, arg4, arg5)",
		"snippet": "DoPkt(${1:struct MsgPort *port}, ${2:LONG action}, ${3:LONG arg1}, ${4:LONG arg2}, ${5:LONG arg3}, ${6:LONG arg4}, ${7:LONG arg5})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Send a dos packet and wait for reply. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0155.html"
	},
	{
		"displayText": "DoSuperMethod(class, object, methodID, ...)",
		"snippet": "DoSuperMethod(${1:struct IClass *cl}, ${2:Object *obj}, ${3:ULONG methodID}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object coerced to superclass.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003A.html"
	},
	{
		"displayText": "DoSuperMethodA(class, object, message)",
		"snippet": "DoSuperMethodA(${1:struct IClass *cl}, ${2:Object *obj}, ${3:Msg msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object coerced to superclass.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003B.html"
	},
	{
		"displayText": "DoubleClick(sSeconds, sMicros, cSeconds, cMicros)",
		"snippet": "DoubleClick(${1:ULONG sSeconds}, ${2:ULONG sMicros}, ${3:ULONG cSeconds}, ${4:ULONG cMicros})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Test two time values for double-click timing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A7.html"
	},
	{
		"displayText": "DPutChar(character)",
		"snippet": "DPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011F.html"
	},
	{
		"displayText": "DPutChar(character)",
		"snippet": "DPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011F.html"
	},
	{
		"displayText": "DPutFmt(formatString, values)",
		"snippet": "DPutFmt(${1:CONST_STRPTR formatString}, ${2:CONST APTR values})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print formatted data to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0120.html"
	},
	{
		"displayText": "DPutStr(string)",
		"snippet": "DPutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a string to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0121.html"
	},
	{
		"displayText": "DPutStr(string)",
		"snippet": "DPutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a string to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0121.html"
	},
	{
		"displayText": "Draw(rastPort, x, y)",
		"snippet": "Draw(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw a line from the current pen position to x,y.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CD.html"
	},
	{
		"displayText": "DrawBevelBox(rastPort, left, top, width, height, tag1, ...)",
		"snippet": "DrawBevelBox(${1:struct RastPort *rp}, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height}, ${6:Tag tag1}, ${7:...})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw a bevelled box. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0277.html"
	},
	{
		"displayText": "DrawBevelBoxA(rastPort, left, top, width, height, tagList)",
		"snippet": "DrawBevelBoxA(${1:struct RastPort *rp}, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height}, ${6:CONST struct TagItem *tagList})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw a bevelled box. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0277.html"
	},
	{
		"displayText": "DrawBorder(rastPort, border, leftOffset, topOffset)",
		"snippet": "DrawBorder(${1:struct RastPort *rp}, ${2:CONST struct Border *border}, ${3:LONG leftOffset}, ${4:LONG topOffset})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw the specified Border structure into a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A8.html"
	},
	{
		"displayText": "DrawDTObject(rastPort, object, x, y, w, h, th, tv, tag1, ...)",
		"snippet": "DrawDTObject(${1:struct RastPort *rp}, ${2:Object *obj}, ${3:LONG x}, ${4:LONG y}, ${5:LONG w}, ${6:LONG h}, ${7:LONG th}, ${8:LONG tv}, ${9:Tag tag1}, ${10:...})${11:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Draw a DataTypes object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010C.html"
	},
	{
		"displayText": "DrawDTObjectA(rastPort, object, x, y, w, h, th, tv, attributes)",
		"snippet": "DrawDTObjectA(${1:struct RastPort *rp}, ${2:Object *obj}, ${3:LONG x}, ${4:LONG y}, ${5:LONG w}, ${6:LONG h}, ${7:LONG th}, ${8:LONG tv}, ${9:struct TagItem *attrs})${10:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Draw a DataTypes object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010C.html"
	},
	{
		"displayText": "DrawEllipse(rastPort, xCenter, yCenter, a, b)",
		"snippet": "DrawEllipse(${1:struct RastPort *rp}, ${2:LONG xCenter}, ${3:LONG yCenter}, ${4:LONG a}, ${5:LONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an ellipse.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CE.html"
	},
	{
		"displayText": "DrawGList(rastPort, viewPort)",
		"snippet": "DrawGList(${1:struct RastPort *rp}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Process the gel list, queueing VSprites, drawing Bobs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CF.html"
	},
	{
		"displayText": "DrawIconState(rastPort, icon, label, leftOffset, topOffset, state, ...)",
		"snippet": "DrawIconState(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:LONG leftOffset}, ${5:LONG topOffset}, ${6:ULONG state}, ${7:...})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an icon as if it were an image. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0347.html"
	},
	{
		"displayText": "DrawIconStateA(rastPort, icon, label, leftOffset, topOffset, state, tags)",
		"snippet": "DrawIconStateA(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:LONG leftOffset}, ${5:LONG topOffset}, ${6:ULONG state}, ${7:CONST struct TagItem *tags})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an icon as if it were an image. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0347.html"
	},
	{
		"displayText": "DrawImage(rastPort, image, leftOffset, topOffset)",
		"snippet": "DrawImage(${1:struct RastPort *rp}, ${2:struct Image *img}, ${3:LONG leftOffset}, ${4:LONG topOffset})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw the specified Image structure into a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A9.html"
	},
	{
		"displayText": "DrawImageState(rastPort, image, leftOffset, topOffset, state, drawInfo)",
		"snippet": "DrawImageState(${1:struct RastPort *rp}, ${2:struct Image *img}, ${3:LONG leftOffset}, ${4:LONG topOffset}, ${5:ULONG state}, ${6:CONST struct DrawInfo *drawInfo})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an Intuition Image with special visual state. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AA.html"
	},
	{
		"displayText": "DRAWLIST_GetClass()",
		"snippet": "DRAWLIST_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the drawlist class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D5.html"
	},
	{
		"displayText": "DupDiskObject(diskObject, ...)",
		"snippet": "DupDiskObject(${1:CONST struct DiskObject *dObj}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Duplicate an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0348.html"
	},
	{
		"displayText": "DupDiskObjectA(diskObject, tags)",
		"snippet": "DupDiskObjectA(${1:CONST struct DiskObject *dObj}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Duplicate an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0348.html"
	},
	{
		"displayText": "DupLock(lock)",
		"snippet": "DupLock(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Duplicate a lock.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0156.html"
	},
	{
		"displayText": "DupLockFromFH(fileHandle)",
		"snippet": "DupLockFromFH(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Gets a lock on an open file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0157.html"
	},
	{
		"displayText": "EasyRequestArgs(window, easyStruct, idcmp, args)",
		"snippet": "EasyRequestArgs(${1:struct Window *win}, ${2:CONST struct EasyStruct *easyStruct}, ${3:ULONG *idcmp}, ${4:CONST APTR args})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Easy alternative to AutoRequest(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AB.html"
	},
	{
		"displayText": "ElapsedTime(context)",
		"snippet": "ElapsedTime(${1:struct EClockVal *context})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the time elapsed since it was last called. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0464.html"
	},
	{
		"displayText": "Enable()",
		"snippet": "Enable()",
		"type": "function",
		"leftLabel": "void",
		"description": "Permit system interrupts to resume.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0205.html"
	},
	{
		"displayText": "EndCardAccess(handle)",
		"snippet": "EndCardAccess(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Called at the end of credit-card memory access.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009A.html"
	},
	{
		"displayText": "EndNotify(notify)",
		"snippet": "EndNotify(${1:struct NotifyRequest *notify})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ends a notification request. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0158.html"
	},
	{
		"displayText": "EndRefresh(window, complete)",
		"snippet": "EndRefresh(${1:struct Window *win}, ${2:LONG complete})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "End the optimized refresh state of the window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AC.html"
	},
	{
		"displayText": "EndRequest(requester, window)",
		"snippet": "EndRequest(${1:struct Requester *req}, ${2:struct Window *win})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a currently active requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AD.html"
	},
	{
		"displayText": "EndUpdate(layer, flag)",
		"snippet": "EndUpdate(${1:struct Layer *layer}, ${2:UWORD flag})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove damage list and restore state of layer to normal.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0421.html"
	},
	{
		"displayText": "Enqueue(list, node)",
		"snippet": "Enqueue(${1:struct List *list}, ${2:struct Node *node})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert or append node to a system queue.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0206.html"
	},
	{
		"displayText": "EnqueueCxObj(headObj, co)",
		"snippet": "EnqueueCxObj(${1:CxObj *headObj}, ${2:CxObj *co})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert a commodity object within a list of objects based on object priority. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EF.html"
	},
	{
		"displayText": "EntryHandler(iffHandle, type, id, position, handler, object)",
		"snippet": "EntryHandler(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG position}, ${5:struct Hook *handler}, ${6:APTR object})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an entry handler to the IFFHandle context. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0360.html"
	},
	{
		"displayText": "EraseImage(rastPort, image, leftOffset, topOffset)",
		"snippet": "EraseImage(${1:struct RastPort *rp}, ${2:struct Image *img}, ${3:LONG leftOffset}, ${4:LONG topOffset})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Erases an Image. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AE.html"
	},
	{
		"displayText": "EraseRect(rastPort, xMin, yMin, xMax, yMax)",
		"snippet": "EraseRect(${1:struct RastPort *rp}, ${2:LONG xMin}, ${3:LONG yMin}, ${4:LONG xMax}, ${5:LONG yMax})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Fill a defined rectangular area using the current BackFill hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D0.html"
	},
	{
		"displayText": "ErrorReport(code, type, arg1, device)",
		"snippet": "ErrorReport(${1:LONG code}, ${2:LONG type}, ${3:ULONG arg1}, ${4:struct MsgPort *device})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Displays a Retry/Cancel requester for an error. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0159.html"
	},
	{
		"displayText": "ExAll(lock, buffer, size, data, control)",
		"snippet": "ExAll(${1:BPTR lock}, ${2:struct ExAllData *buffer}, ${3:LONG size}, ${4:LONG data}, ${5:struct ExAllControl *control})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Examine an entire directory. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015A.html"
	},
	{
		"displayText": "ExAllEnd(lock, buffer, size, data, control)",
		"snippet": "ExAllEnd(${1:BPTR lock}, ${2:struct ExAllData *buffer}, ${3:LONG size}, ${4:LONG data}, ${5:struct ExAllControl *control})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Stop an ExAll(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015B.html"
	},
	{
		"displayText": "Examine(lock, fileInfoBlock)",
		"snippet": "Examine(${1:BPTR lock}, ${2:struct FileInfoBlock *fib})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Examine a directory or file associated with a lock.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015C.html"
	},
	{
		"displayText": "ExamineFH(fileHandle, fileInfoBlock)",
		"snippet": "ExamineFH(${1:BPTR fh}, ${2:struct FileInfoBlock *fib})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Gets information on an open file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015D.html"
	},
	{
		"displayText": "Execute(string, file, file2)",
		"snippet": "Execute(${1:CONST_STRPTR str}, ${2:BPTR file}, ${3:BPTR file2})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Execute a CLI command.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015E.html"
	},
	{
		"displayText": "Exit(returnCode)",
		"snippet": "Exit(${1:LONG returnCode})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Exit from a program.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015F.html"
	},
	{
		"displayText": "ExitHandler(iffHandle, type, id, position, handler, object)",
		"snippet": "ExitHandler(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG position}, ${5:struct Hook *handler}, ${6:APTR object})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an exit handler to the IFFHandle context. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0361.html"
	},
	{
		"displayText": "ExNext(lock, fileInfoBlock)",
		"snippet": "ExNext(${1:BPTR lock}, ${2:struct FileInfoBlock *fileInfoBlock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Examine the next entry in a directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0160.html"
	},
	{
		"displayText": "ExtendFont(font, fontTags)",
		"snippet": "ExtendFont(${1:struct TextFont *font}, ${2:CONST struct TagItem *fontTags})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Bnsure tf_Extension has been built for a font. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D1.html"
	},
	{
		"displayText": "ExternalSync(player, minTime, maxTime)",
		"snippet": "ExternalSync(${1:struct Player *player}, ${2:LONG minTime}, ${3:LONG maxTime})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Provide external source clock for a player's conductor. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0535.html"
	},
	{
		"displayText": "FastRand(seed)",
		"snippet": "FastRand(${1:ULONG seed})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Quickly generate a somewhat random integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003C.html"
	},
	{
		"displayText": "FattenLayerInfo(layerInfo)",
		"snippet": "FattenLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert 1.0 LayerInfo to 1.1 LayerInfo.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0422.html"
	},
	{
		"displayText": "Fault(code, header, buffer, len)",
		"snippet": "Fault(${1:LONG code}, ${2:STRPTR header}, ${3:STRPTR buffer}, ${4:LONG len})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the text associated with a DOS error code. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0161.html"
	},
	{
		"displayText": "FGetC(fileHandle)",
		"snippet": "FGetC(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read a character from the specified input  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0162.html"
	},
	{
		"displayText": "FGets(fileHandle, buffer, buflen)",
		"snippet": "FGets(${1:BPTR fh}, ${2:STRPTR buf}, ${3:ULONG buflen})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Reads a line from the specified input  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0163.html"
	},
	{
		"displayText": "FilePart(path)",
		"snippet": "FilePart(${1:CONST_STRPTR path})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Returns the last component of a path. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0164.html"
	},
	{
		"displayText": "FillRexxMsg(msgptr, count, mask)",
		"snippet": "FillRexxMsg(${1:struct RexxMsg *msgptr}, ${2:ULONG count}, ${3:ULONG mask})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Fill the argument strings as needed.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054D.html"
	},
	{
		"displayText": "FilterTagChanges(changeList, originalList, apply)",
		"snippet": "FilterTagChanges(${1:struct TagItem *changeList}, ${2:struct TagItem *originalList}, ${3:ULONG apply})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Eliminate tags which specify no change. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059D.html"
	},
	{
		"displayText": "FilterTagItems(tagList, filterArray, logic)",
		"snippet": "FilterTagItems(${1:struct TagItem *tagList}, ${2:CONST Tag *filterArray}, ${3:ULONG logic})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Remove selected items from a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059E.html"
	},
	{
		"displayText": "FindArg(keyword, arg_template)",
		"snippet": "FindArg(${1:CONST_STRPTR keyword}, ${2:CONST_STRPTR arg_template})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Find a keyword in a template. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0165.html"
	},
	{
		"displayText": "FindCliProc(num)",
		"snippet": "FindCliProc(${1:ULONG num})${2:}",
		"type": "function",
		"leftLabel": "struct Process*",
		"description": "Returns a pointer to the requested CLI process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0166.html"
	},
	{
		"displayText": "FindCollection(iffHandle, type, id)",
		"snippet": "FindCollection(${1:CONST struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "struct CollectionItem*",
		"description": "Get a pointer to the current list of collection items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0362.html"
	},
	{
		"displayText": "FindColor(colorMap, r, g, b, maxColor)",
		"snippet": "FindColor(${1:struct ColorMap *cm}, ${2:ULONG r}, ${3:ULONG g}, ${4:ULONG b}, ${5:LONG maxColor})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Find the closest matching color in a colormap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D2.html"
	},
	{
		"displayText": "FindConductor(name)",
		"snippet": "FindConductor(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Conductor*",
		"description": "Find a conductor by name. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0536.html"
	},
	{
		"displayText": "FindConfigDev(oldConfigDev, manufacturer, product)",
		"snippet": "FindConfigDev(${1:CONST struct ConfigDev *oldCD}, ${2:LONG manufacturer}, ${3:LONG product})${4:}",
		"type": "function",
		"leftLabel": "struct ConfigDev*",
		"description": "Find a matching ConfigDev entry.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0262.html"
	},
	{
		"displayText": "FindDisplayInfo(displayID)",
		"snippet": "FindDisplayInfo(${1:ULONG displayID})${2:}",
		"type": "function",
		"leftLabel": "DisplayInfoHandle",
		"description": "Search for a record identified by a specific key. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D3.html"
	},
	{
		"displayText": "FindDosEntry(dlist, name, flags)",
		"snippet": "FindDosEntry(${1:CONST struct DosList *dlist}, ${2:CONST_STRPTR name}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Finds a specific Dos List entry. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0167.html"
	},
	{
		"displayText": "FindLocalItem(iffHandle, type, id, ident)",
		"snippet": "FindLocalItem(${1:CONST struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG ident})${5:}",
		"type": "function",
		"leftLabel": "struct LocalContextItem*",
		"description": "Return a local context item from the context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0363.html"
	},
	{
		"displayText": "FindName(list, name)",
		"snippet": "FindName(${1:struct List *list}, ${2:CONST_STRPTR name})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Find a system list node with a given name.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0207.html"
	},
	{
		"displayText": "FindNamedObject(nameSpace, name, lastObject)",
		"snippet": "FindNamedObject(${1:struct NamedObject *nameSpace}, ${2:CONST_STRPTR name}, ${3:struct NamedObject *lastObject})${4:}",
		"type": "function",
		"leftLabel": "struct NamedObject*",
		"description": "Find the next object of a given name. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059F.html"
	},
	{
		"displayText": "FindPort(name)",
		"snippet": "FindPort(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Find a given system message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0208.html"
	},
	{
		"displayText": "FindProp(iffHandle, type, id)",
		"snippet": "FindProp(${1:CONST struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "struct StoredProperty*",
		"description": "Search for a stored property chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0364.html"
	},
	{
		"displayText": "FindPropContext(iffHandle)",
		"snippet": "FindPropContext(${1:CONST struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "struct ContextNode*",
		"description": "Get the property context for the current state. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0365.html"
	},
	{
		"displayText": "FindResident(name)",
		"snippet": "FindResident(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Resident*",
		"description": "Find a resident module by name.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0209.html"
	},
	{
		"displayText": "FindSegment(name, seg, system)",
		"snippet": "FindSegment(${1:CONST_STRPTR name}, ${2:CONST struct Segment *seg}, ${3:LONG system})${4:}",
		"type": "function",
		"leftLabel": "struct Segment*",
		"description": "Finds a segment on the resident list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0168.html"
	},
	{
		"displayText": "FindSemaphore(name)",
		"snippet": "FindSemaphore(${1:STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct SignalSemaphore*",
		"description": "Find a given system signal semaphore.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020A.html"
	},
	{
		"displayText": "FindTagItem(tagVal, tagList)",
		"snippet": "FindTagItem(${1:Tag tagVal}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Scan a tag list for a specific tag. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A0.html"
	},
	{
		"displayText": "FindTask(name)",
		"snippet": "FindTask(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Task*",
		"description": "Find a task with the given name or find oneself.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020B.html"
	},
	{
		"displayText": "FindToolType(toolTypeArray, typeName)",
		"snippet": "FindToolType(${1:CONST STRPTR *toolTypeArray}, ${2:CONST STRPTR typeName})${3:}",
		"type": "function",
		"leftLabel": "UBYTE*",
		"description": "Find the value of a ToolType variable.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0349.html"
	},
	{
		"displayText": "FindVar(name, type)",
		"snippet": "FindVar(${1:CONST_STRPTR name}, ${2:ULONG type})${3:}",
		"type": "function",
		"leftLabel": "struct LocalVar*",
		"description": "Finds a local variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0169.html"
	},
	{
		"displayText": "Flood(rastPort, mode, x, y)",
		"snippet": "Flood(${1:struct RastPort *rp}, ${2:ULONG mode}, ${3:LONG x}, ${4:LONG y})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Flood rastport like areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D4.html"
	},
	{
		"displayText": "Flush(fileHandle)",
		"snippet": "Flush(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Flushes buffers for a buffered filehandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016A.html"
	},
	{
		"displayText": "FlushLayoutDomainCache(gadget)",
		"snippet": "FlushLayoutDomainCache(${1:struct Gadget *gad})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Flush layout domain cache below a level.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043A.html"
	},
	{
		"displayText": "FontExtent(font, fontExtent)",
		"snippet": "FontExtent(${1:CONST struct TextFont *font}, ${2:struct TextExtent *fontExtent})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the font attributes of the current font. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D5.html"
	},
	{
		"displayText": "Forbid()",
		"snippet": "Forbid()",
		"type": "function",
		"leftLabel": "void",
		"description": "Forbid task rescheduling.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020C.html"
	},
	{
		"displayText": "Format(filesystem, volumename, dostype)",
		"snippet": "Format(${1:CONST_STRPTR filesystem}, ${2:CONST_STRPTR volumename}, ${3:ULONG dostype})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Causes a filesystem to initialize itself. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016B.html"
	},
	{
		"displayText": "FormatDate(locale, fmtTemplate, date, putCharFunc)",
		"snippet": "FormatDate(${1:struct Locale *l}, ${2:STRPTR fmtTemplate}, ${3:struct DateStamp *date}, ${4:struct Hook *putCharFunc})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Generate a date string based on a date formatting template. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0456.html"
	},
	{
		"displayText": "FormatString(locale, fmtTemplate, dataStream, putCharFunc)",
		"snippet": "FormatString(${1:struct Locale *locale}, ${2:STRPTR fmtTemplate}, ${3:APTR dataStream}, ${4:struct Hook *putCharFunc})${5:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Format data into a character stream. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0457.html"
	},
	{
		"displayText": "fpa(fnum, string)",
		"snippet": "fpa(${1:FLOAT fnum}, ${2:BYTE *string})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert fast floating point into ASCII string equivalent.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003D.html"
	},
	{
		"displayText": "FPutC(fileHandle, character)",
		"snippet": "FPutC(${1:BPTR fh}, ${2:LONG ch})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write a character to the specified output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016C.html"
	},
	{
		"displayText": "FPuts(fileHandle, string)",
		"snippet": "FPuts(${1:BPTR fh}, ${2:CONST_STRPTR str})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes a string the the specified output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016D.html"
	},
	{
		"displayText": "FRead(fh, block, blocklen, number)",
		"snippet": "FRead(${1:BPTR fh}, ${2:APTR block}, ${3:ULONG blocklen}, ${4:ULONG number})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reads a number of blocks from an input  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016E.html"
	},
	{
		"displayText": "FreeArgs(args)",
		"snippet": "FreeArgs(${1:struct RDArgs *args})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free allocated memory after ReadArgs(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016F.html"
	},
	{
		"displayText": "FreeAslRequest(requester)",
		"snippet": "FreeAslRequest(${1:APTR req})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees resources allocated by AllocAslRequest(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005C.html"
	},
	{
		"displayText": "FreeBitMap(bitMap)",
		"snippet": "FreeBitMap(${1:struct BitMap *bm})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a bitmap created by AllocBitMap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D6.html"
	},
	{
		"displayText": "FreeBrowserNodes(nodes)",
		"snippet": "FreeBrowserNodes(${1:struct List *nodes})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of listbrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0526.html"
	},
	{
		"displayText": "FreeChooserLabels(labels)",
		"snippet": "FreeChooserLabels(${1:struct List *labels})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of chooser labels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0527.html"
	},
	{
		"displayText": "FreeChooserNode(node)",
		"snippet": "FreeChooserNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C4.html"
	},
	{
		"displayText": "FreeClass(class)",
		"snippet": "FreeClass(${1:struct IClass *cl})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Frees a boopsi class created by MakeClass(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AF.html"
	},
	{
		"displayText": "FreeClickTabNode(node)",
		"snippet": "FreeClickTabNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D0.html"
	},
	{
		"displayText": "FreeClickTabs(clicktabs)",
		"snippet": "FreeClickTabs(${1:struct List *clicktabs})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of clicktab nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0528.html"
	},
	{
		"displayText": "FreeColorMap(colorMap)",
		"snippet": "FreeColorMap(${1:struct ColorMap *cm})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free the ColorMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D7.html"
	},
	{
		"displayText": "FreeConfigDev(configDev)",
		"snippet": "FreeConfigDev(${1:struct ConfigDev *cd})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ConfigDev structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0263.html"
	},
	{
		"displayText": "FreeCopList(copList)",
		"snippet": "FreeCopList(${1:struct CopList *copList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate intermediate copper list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D8.html"
	},
	{
		"displayText": "FreeCprList(cprList)",
		"snippet": "FreeCprList(${1:struct cprlist *cprList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate hardware copper list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D9.html"
	},
	{
		"displayText": "FreeDBufInfo(dBufInfo)",
		"snippet": "FreeDBufInfo(${1:struct DBufInfo *dbi})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free information for multi-buffered animation. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DA.html"
	},
	{
		"displayText": "FreeDeviceProc(devProc)",
		"snippet": "FreeDeviceProc(${1:struct DevProc *dp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases port returned by GetDeviceProc(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0170.html"
	},
	{
		"displayText": "FreeDiskObject(diskobj)",
		"snippet": "FreeDiskObject(${1:struct DiskObject *diskobj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free all memory in a Workbench disk object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034A.html"
	},
	{
		"displayText": "FreeDosEntry(doslist)",
		"snippet": "FreeDosEntry(${1:struct DosList *dl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees an entry created by MakeDosEntry. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0171.html"
	},
	{
		"displayText": "FreeDosObject(type, ptr)",
		"snippet": "FreeDosObject(${1:ULONG type}, ${2:APTR ptr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees an object allocated by AllocDosObject(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0172.html"
	},
	{
		"displayText": "FreeEntry(entry)",
		"snippet": "FreeEntry(${1:struct MemList *entry})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free many regions of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020D.html"
	},
	{
		"displayText": "FreeExpansionMem(startSlot, numSlots)",
		"snippet": "FreeExpansionMem(${1:ULONG startSlot}, ${2:ULONG numSlots})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Allocate standard device expansion memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0264.html"
	},
	{
		"displayText": "FreeFileRequest(fileReq)",
		"snippet": "FreeFileRequest(${1:struct FileRequester *fr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free file requester structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005D.html"
	},
	{
		"displayText": "FreeFreeList(freelist)",
		"snippet": "FreeFreeList(${1:struct FreeList *fl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free all memory in a free list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034B.html"
	},
	{
		"displayText": "FreeGadgets(gad)",
		"snippet": "FreeGadgets(${1:struct Gadget *gad})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of gadgets. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0278.html"
	},
	{
		"displayText": "FreeGBuffers(animOb, rastPort, doubleBuffer)",
		"snippet": "FreeGBuffers(${1:struct AnimOb *anOb}, ${2:struct RastPort *rp}, ${3:BOOL db})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate memory obtained by GetGBufers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DB.html"
	},
	{
		"displayText": "FreeIEvents(events)",
		"snippet": "FreeIEvents(${1:struct InputEvent *events})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a chain of input events allocated by InvertString(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003E.html"
	},
	{
		"displayText": "FreeIFF(iffHandle)",
		"snippet": "FreeIFF(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate an IFFHandle structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0366.html"
	},
	{
		"displayText": "FreeListBrowserList(list)",
		"snippet": "FreeListBrowserList(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a list of ListBrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0445.html"
	},
	{
		"displayText": "FreeListBrowserNode(node)",
		"snippet": "FreeListBrowserNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0446.html"
	},
	{
		"displayText": "FreeLocalItem(localItem)",
		"snippet": "FreeLocalItem(${1:struct LocalContextItem *localItem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate a local context item structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0367.html"
	},
	{
		"displayText": "FreeMem(memoryBlock, byteSize)",
		"snippet": "FreeMem(${1:APTR memoryBlock}, ${2:ULONG byteSize})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate with knowledge.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020E.html"
	},
	{
		"displayText": "FreeMenus(menu)",
		"snippet": "FreeMenus(${1:struct Menu *menu})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees memory allocated by CreateMenusA(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0279.html"
	},
	{
		"displayText": "FreeMiscResource(unitNum)",
		"snippet": "FreeMiscResource(${1:ULONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a resource available for reallocation.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CF.html"
	},
	{
		"displayText": "FreeNamedObject(object)",
		"snippet": "FreeNamedObject(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees a name object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A1.html"
	},
	{
		"displayText": "FreeNVData(data)",
		"snippet": "FreeNVData(${1:APTR data})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release the memory allocated by a function of this library. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DD.html"
	},
	{
		"displayText": "FreePooled(poolHeader, memory, memSize)",
		"snippet": "FreePooled(${1:APTR poolHeader}, ${2:APTR memory}, ${3:ULONG memSize})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free pooled memory. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020F.html"
	},
	{
		"displayText": "FreePotBits(bits)",
		"snippet": "FreePotBits(${1:ULONG bits})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free allocated bits in the potgo register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0500.html"
	},
	{
		"displayText": "FreeRadioButtonNode(node)",
		"snippet": "FreeRadioButtonNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051E.html"
	},
	{
		"displayText": "FreeRadioButtons(buttons)",
		"snippet": "FreeRadioButtons(${1:struct List *buttons})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of radiobuttons.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0529.html"
	},
	{
		"displayText": "FreeRaster(plane, width, height)",
		"snippet": "FreeRaster(${1:PLANEPTR plane}, ${2:ULONG width}, ${3:ULONG height})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release an allocated area to the system free memory pool.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DC.html"
	},
	{
		"displayText": "FreeRemember(rememberKey, reallyForget)",
		"snippet": "FreeRemember(${1:struct Remember **rememberKey}, ${2:LONG reallyForget})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free memory allocated by calls to AllocRemember().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B0.html"
	},
	{
		"displayText": "FreeScreenBuffer(screen, scrBuffer)",
		"snippet": "FreeScreenBuffer(${1:struct Screen *sc}, ${2:struct ScreenBuffer *sb})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ScreenBuffer structure. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B1.html"
	},
	{
		"displayText": "FreeScreenDrawInfo(screen, drawInfo)",
		"snippet": "FreeScreenDrawInfo(${1:struct Screen *scr}, ${2:struct DrawInfo *drawInfo})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Finish using a DrawInfo structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B2.html"
	},
	{
		"displayText": "FreeSignal(signalNum)",
		"snippet": "FreeSignal(${1:LONG signalNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a signal bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0210.html"
	},
	{
		"displayText": "FreeSpeedButtonNode(node)",
		"snippet": "FreeSpeedButtonNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056A.html"
	},
	{
		"displayText": "FreeSprite(num)",
		"snippet": "FreeSprite(${1:LONG num})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return sprite for use by others and virtual sprite machine.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DD.html"
	},
	{
		"displayText": "FreeSpriteData(sprite)",
		"snippet": "FreeSpriteData(${1:struct ExtSprite *sp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free sprite data allocated by AllocSpriteData(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DE.html"
	},
	{
		"displayText": "FreeSysRequest(window)",
		"snippet": "FreeSysRequest(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free resources gotten by a call to BuildSysRequest().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B3.html"
	},
	{
		"displayText": "FreeTagItems(tagList)",
		"snippet": "FreeTagItems(${1:struct TagItem *tagList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free an allocated tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A2.html"
	},
	{
		"displayText": "FreeTrap(trapNum)",
		"snippet": "FreeTrap(${1:LONG trapNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a processor trap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0211.html"
	},
	{
		"displayText": "FreeUnit(unitNum)",
		"snippet": "FreeUnit(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate the disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012D.html"
	},
	{
		"displayText": "FreeVec(memoryBlock)",
		"snippet": "FreeVec(${1:APTR memoryBlock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return AllocVec() memory to the system. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0212.html"
	},
	{
		"displayText": "FreeVisualInfo(visualInfo)",
		"snippet": "FreeVisualInfo(${1:APTR vi})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return any resources taken by GetVisualInfo. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027A.html"
	},
	{
		"displayText": "FreeVPortCopLists(viewPort)",
		"snippet": "FreeVPortCopLists(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate all intermediate copper lists and their headers from a viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DF.html"
	},
	{
		"displayText": "FUELGAUGE_GetClass()",
		"snippet": "FUELGAUGE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the fuelgauge class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0272.html"
	},
	{
		"displayText": "FWrite(fileHandle, block, blockLen, number)",
		"snippet": "FWrite(${1:BPTR fh}, ${2:CONST APTR block}, ${3:ULONG blocklen}, ${4:ULONG number})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes a number of blocks to an output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0173.html"
	},
	{
		"displayText": "GadgetMouse(gadget, gadInfo, mousePoint)",
		"snippet": "GadgetMouse(${1:struct Gadget *gad}, ${2:struct GadgetInfo *gInfo}, ${3:WORD *mousePoint})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Calculate gadget-relative mouse position. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B4.html"
	},
	{
		"displayText": "GetAmigaGuideAttr(tag, handle, storage)",
		"snippet": "GetAmigaGuideAttr(${1:Tag tag}, ${2:APTR handle}, ${3:ULONG *storage})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get an AmigaGuide attribute. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000A.html"
	},
	{
		"displayText": "GetAmigaGuideMsg(handle)",
		"snippet": "GetAmigaGuideMsg(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "struct AmigaGuideMsg*",
		"description": "Receive async AmigaGuide message. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000B.html"
	},
	{
		"displayText": "GetAmigaGuideString(id)",
		"snippet": "GetAmigaGuideString(${1:LONG id})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Get an AmigaGuide string. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000C.html"
	},
	{
		"displayText": "GetAPen(rastPort)",
		"snippet": "GetAPen(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the A Pen value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E0.html"
	},
	{
		"displayText": "GetArgStr()",
		"snippet": "GetArgStr()",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Returns the arguments for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0174.html"
	},
	{
		"displayText": "GetAttr(attrID, object, storage)",
		"snippet": "GetAttr(${1:ULONG attrID}, ${2:APTR object}, ${3:ULONG *storage})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire the value of some attribute of an object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B5.html"
	},
	{
		"displayText": "GetAttrs(object, tag1, ...)",
		"snippet": "GetAttrs(${1:Object *obj}, ${2:Tag t}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get multiple object attributes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052A.html"
	},
	{
		"displayText": "GetBitMapAttr(bitMap, attrNum)",
		"snippet": "GetBitMapAttr(${1:CONST struct BitMap *bm}, ${2:ULONG attrNum})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns information about a bitmap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E1.html"
	},
	{
		"displayText": "GetBPen(rastPort)",
		"snippet": "GetBPen(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the B Pen value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E2.html"
	},
	{
		"displayText": "GetCardMap()",
		"snippet": "GetCardMap()",
		"type": "function",
		"leftLabel": "struct CardMemoryMap*",
		"description": "Obtain pointer to CardMemoryMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009B.html"
	},
	{
		"displayText": "GetCatalogStr(catalog, stringNum, defaultString)",
		"snippet": "GetCatalogStr(${1:struct Catalog *catalog}, ${2:LONG stringNum}, ${3:STRPTR defaultString})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Get a string from a message catalog. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0458.html"
	},
	{
		"displayText": "GetCC()",
		"snippet": "GetCC()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get condition codes in a 68010 compatible way.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0213.html"
	},
	{
		"displayText": "GetChooserNodeAttrs(node, ...)",
		"snippet": "GetChooserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C5.html"
	},
	{
		"displayText": "GetChooserNodeAttrsA(node, tags)",
		"snippet": "GetChooserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C5.html"
	},
	{
		"displayText": "GetClickTabNodeAttrs(node, ...)",
		"snippet": "GetClickTabNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D1.html"
	},
	{
		"displayText": "GetClickTabNodeAttrsA(node, tags)",
		"snippet": "GetClickTabNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D1.html"
	},
	{
		"displayText": "GetCode(intuiMsg)",
		"snippet": "GetCode(${1:struct IntuiMessage *msg})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Return the true IDCMP message code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052B.html"
	},
	{
		"displayText": "GetColorMap(entries)",
		"snippet": "GetColorMap(${1:LONG entries})${2:}",
		"type": "function",
		"leftLabel": "struct ColorMap*",
		"description": "Allocate and initialize Colormap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E3.html"
	},
	{
		"displayText": "GetConsoleTask()",
		"snippet": "GetConsoleTask()",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Returns the default console for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0175.html"
	},
	{
		"displayText": "GetCopyNV(appName, itemName, killRequesters)",
		"snippet": "GetCopyNV(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:LONG killRequesters})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Return a copy of an item stored in nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DE.html"
	},
	{
		"displayText": "GetCurrentBinding(currentBinding, bindingSize)",
		"snippet": "GetCurrentBinding(${1:CONST struct CurrentBinding *cb}, ${2:ULONG bindingSize})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Gets static board configuration area.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0265.html"
	},
	{
		"displayText": "GetCurrentDirName(buf, len)",
		"snippet": "GetCurrentDirName(${1:STRPTR buf}, ${2:LONG len})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the current directory name. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0176.html"
	},
	{
		"displayText": "GetDefaultPubScreen(nameBuffer)",
		"snippet": "GetDefaultPubScreen(${1:STRPTR nameBuffer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get name of default public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B6.html"
	},
	{
		"displayText": "GetDefDiskObject(type)",
		"snippet": "GetDefDiskObject(${1:LONG type})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Read default wb disk object from disk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034C.html"
	},
	{
		"displayText": "GetDefPrefs(prefs, size)",
		"snippet": "GetDefPrefs(${1:struct Preferences *p}, ${2:LONG size})${3:}",
		"type": "function",
		"leftLabel": "struct Preferences*",
		"description": "Get a copy of the the Intuition default Preferences.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B7.html"
	},
	{
		"displayText": "GetDeviceProc(name, devProc)",
		"snippet": "GetDeviceProc(${1:CONST_STRPTR name}, ${2:struct DevProc *dp})${3:}",
		"type": "function",
		"leftLabel": "struct DevProc*",
		"description": "Finds a handler to send a message to. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0177.html"
	},
	{
		"displayText": "GetDiskObject(name)",
		"snippet": "GetDiskObject(${1:CONST STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Read in a Workbench disk object from disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034D.html"
	},
	{
		"displayText": "GetDiskObjectNew(name)",
		"snippet": "GetDiskObjectNew(${1:CONST STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Read in a Workbench disk object from disk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034E.html"
	},
	{
		"displayText": "GetDisplayInfoData(handle, buf, size, tagID, displayID)",
		"snippet": "GetDisplayInfoData(${1:CONST DisplayInfoHandle handle}, ${2:APTR buf}, ${3:ULONG size}, ${4:ULONG tagID}, ${5:ULONG displayID})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Query DisplayInfo Record parameters. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E4.html"
	},
	{
		"displayText": "GetDrMd(rastPort)",
		"snippet": "GetDrMd(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the draw mode value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E5.html"
	},
	{
		"displayText": "GetDTAttrs(object, tag1, ...)",
		"snippet": "GetDTAttrs(${1:Object *obj}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010D.html"
	},
	{
		"displayText": "GetDTAttrsA(object, attributes)",
		"snippet": "GetDTAttrsA(${1:Object *obj}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010D.html"
	},
	{
		"displayText": "GetDTMethods(object)",
		"snippet": "GetDTMethods(${1:Object *obj})${2:}",
		"type": "function",
		"leftLabel": "ULONG*",
		"description": "Obtain methods an object supports. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010E.html"
	},
	{
		"displayText": "GetDTString(id)",
		"snippet": "GetDTString(${1:ULONG id})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Obtain a DataTypes string. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010F.html"
	},
	{
		"displayText": "GetDTTriggerMethods(obj)",
		"snippet": "GetDTTriggerMethods(${1:Object *obj})${2:}",
		"type": "function",
		"leftLabel": "struct DTMethods*",
		"description": "Obtain trigger methods supported by an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0110.html"
	},
	{
		"displayText": "GetExtSprite(sprite, tag1, ...)",
		"snippet": "GetExtSprite(${1:struct ExtSprite *s}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Attempt to get a sprite for the extended sprite manager. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E6.html"
	},
	{
		"displayText": "GetExtSpriteA(sprite, tags)",
		"snippet": "GetExtSpriteA(${1:struct ExtSprite *s}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Attempt to get a sprite for the extended sprite manager. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E6.html"
	},
	{
		"displayText": "GETFILE_GetClass()",
		"snippet": "GETFILE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the file requester class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node028F.html"
	},
	{
		"displayText": "GetFileSysTask()",
		"snippet": "GetFileSysTask()",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Returns the default filesystem for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0178.html"
	},
	{
		"displayText": "GETFONT_GetClass()",
		"snippet": "GETFONT_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the font requester class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0292.html"
	},
	{
		"displayText": "GetGBuffers(anOb, rastPort, doubleBuffer)",
		"snippet": "GetGBuffers(${1:struct AnimOb *anOb}, ${2:struct RastPort *rp}, ${3:BOOL db})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Attempt to allocate ALL buffers of an entire AnimOb.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E7.html"
	},
	{
		"displayText": "GetIconRectangle(rastPort, icon, label, rect, ...)",
		"snippet": "GetIconRectangle(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:struct Rectangle *rect}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query the size of the area an icon renders into. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034F.html"
	},
	{
		"displayText": "GetIconRectangleA(rastPort, icon, label, rect, tags)",
		"snippet": "GetIconRectangleA(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:struct Rectangle *rect}, ${5:CONST struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query the size of the area an icon renders into. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034F.html"
	},
	{
		"displayText": "GetIconTagList(name, tags)",
		"snippet": "GetIconTagList(${1:CONST STRPTR name}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Retrieve an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0350.html"
	},
	{
		"displayText": "GetKey()",
		"snippet": "GetKey()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the currently pressed rawkey code and qualifiers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0465.html"
	},
	{
		"displayText": "GetLanguageSelection()",
		"snippet": "GetLanguageSelection()",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Returns the current language selection. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0466.html"
	},
	{
		"displayText": "GetListBrowserNodeAttrs(node, ...)",
		"snippet": "GetListBrowserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0447.html"
	},
	{
		"displayText": "GetListBrowserNodeAttrsA(node, tags)",
		"snippet": "GetListBrowserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0447.html"
	},
	{
		"displayText": "GetLocaleStr(locale, stringNum)",
		"snippet": "GetLocaleStr(${1:struct Locale *loc}, ${2:ULONG stringNum})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Get a standard string from a locale. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0459.html"
	},
	{
		"displayText": "GetMsg(port)",
		"snippet": "GetMsg(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "struct Message*",
		"description": "Get next message from a message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0214.html"
	},
	{
		"displayText": "GetNVInfo(killRequesters)",
		"snippet": "GetNVInfo(${1:LONG killRequesters})${2:}",
		"type": "function",
		"leftLabel": "struct NVInfo*",
		"description": "Report information on the current nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DF.html"
	},
	{
		"displayText": "GetNVList(appName, killRequesters)",
		"snippet": "GetNVList(${1:CONST_STRPTR appName}, ${2:LONG killRequesters})${3:}",
		"type": "function",
		"leftLabel": "struct MinList*",
		"description": "Return a list of the items stored in nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E0.html"
	},
	{
		"displayText": "GetPlayerAttrs(player, tag1, ...)",
		"snippet": "GetPlayerAttrs(${1:CONST struct Player *pl}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the attributes of a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0537.html"
	},
	{
		"displayText": "GetPlayerAttrsA(player, tagList)",
		"snippet": "GetPlayerAttrsA(${1:CONST struct Player *pl}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the attributes of a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0537.html"
	},
	{
		"displayText": "GetPrefs(prefs, size)",
		"snippet": "GetPrefs(${1:struct Preferences *prefs}, ${2:LONG size})${3:}",
		"type": "function",
		"leftLabel": "struct Preferences*",
		"description": "Get the current Intuition Preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B8.html"
	},
	{
		"displayText": "GetProgramDir()",
		"snippet": "GetProgramDir()",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Returns a lock on the directory the program was loaded from. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0179.html"
	},
	{
		"displayText": "GetProgramName(buf, len)",
		"snippet": "GetProgramName(${1:STRPTR buf}, ${2:LONG len})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the current program name. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017A.html"
	},
	{
		"displayText": "GetPrompt(buf, len)",
		"snippet": "GetPrompt(${1:STRPTR buf}, ${2:LONG len})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the prompt for the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017B.html"
	},
	{
		"displayText": "GetRadioButtonNodeAttrs(node, ...)",
		"snippet": "GetRadioButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051F.html"
	},
	{
		"displayText": "GetRadioButtonNodeAttrsA(node, tags)",
		"snippet": "GetRadioButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051F.html"
	},
	{
		"displayText": "GetRexxVar(rexxmsg, name, result)",
		"snippet": "GetRexxVar(${1:CONST struct RexxMsg *msg}, ${2:CONST_STRPTR name}, ${3:STRPTR *result})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Gets the value of a variable from a running ARexx program.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003F.html"
	},
	{
		"displayText": "GetRGB32(colorMap, firstcolor, ncolors, table)",
		"snippet": "GetRGB32(${1:CONST struct ColorMap *cm}, ${2:ULONG firstcolor}, ${3:ULONG ncolors}, ${4:ULONG *table})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set a series of color registers for this Viewport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E9.html"
	},
	{
		"displayText": "GetRGB4(colorMap, entry)",
		"snippet": "GetRGB4(${1:struct ColorMap *cm}, ${2:LONG entry})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire value of entry in ColorMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EA.html"
	},
	{
		"displayText": "GetScreenData(buffer, size, type, screen)",
		"snippet": "GetScreenData(${1:APTR buffer}, ${2:ULONG size}, ${3:ULONG type}, ${4:CONST struct Screen *scr})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get copy of a screen data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B9.html"
	},
	{
		"displayText": "GetScreenDrawInfo(screen)",
		"snippet": "GetScreenDrawInfo(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "struct DrawInfo*",
		"description": "Get pointer to rendering information. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BA.html"
	},
	{
		"displayText": "GETSCREENMODE_GetClass()",
		"snippet": "GETSCREENMODE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the screenmode requester class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0295.html"
	},
	{
		"displayText": "GetSpeedButtonNodeAttrs(node, ...)",
		"snippet": "GetSpeedButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056B.html"
	},
	{
		"displayText": "GetSpeedButtonNodeAttrsA(node, tags)",
		"snippet": "GetSpeedButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056B.html"
	},
	{
		"displayText": "GetSprite(sprite, num)",
		"snippet": "GetSprite(${1:struct SimpleSprite *sprite}, ${2:LONG num})${3:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Attempt to get a sprite for the simple sprite manager.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EC.html"
	},
	{
		"displayText": "GetSysTime(dest)",
		"snippet": "GetSysTime(${1:struct timeval *dest})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the system time. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0577.html"
	},
	{
		"displayText": "GetTagData(tagValue, defaultVal, tagList)",
		"snippet": "GetTagData(${1:Tag tagValue}, ${2:ULONG defaultVal}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain the data corresponding to a tag. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A3.html"
	},
	{
		"displayText": "GetUniqueID()",
		"snippet": "GetUniqueID()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Return a relatively unique number. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A4.html"
	},
	{
		"displayText": "GetUnit(unit)",
		"snippet": "GetUnit(${1:struct DiscResourceUnit *unit})${2:}",
		"type": "function",
		"leftLabel": "struct DiscResourceUnit*",
		"description": "Allocate the disk for a driver.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012E.html"
	},
	{
		"displayText": "GetUnitID(unitNum)",
		"snippet": "GetUnitID(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Find out what type of disk is out there.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012F.html"
	},
	{
		"displayText": "GetVar(name, buffer, size, flags)",
		"snippet": "GetVar(${1:CONST_STRPTR name}, ${2:STRPTR buffer}, ${3:LONG size}, ${4:LONG flags})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns the value of a local or global variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017C.html"
	},
	{
		"displayText": "GetVisualInfo(screen, tag1, ...)",
		"snippet": "GetVisualInfo(${1:struct Screen *scr}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Get information GadTools needs for visuals. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027B.html"
	},
	{
		"displayText": "GetVisualInfoA(screen, tagList)",
		"snippet": "GetVisualInfoA(${1:struct Screen *scr}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Get information GadTools needs for visuals. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027B.html"
	},
	{
		"displayText": "GetVPModeID(viewPort)",
		"snippet": "GetVPModeID(${1:CONST struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get the 32 bit DisplayID from a ViewPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02ED.html"
	},
	{
		"displayText": "GfxAssociate(associateNode, gfxNode)",
		"snippet": "GfxAssociate(${1:CONST APTR associateNode}, ${2:APTR gfxNode})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Associate a graphics extended node with a given pointer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EE.html"
	},
	{
		"displayText": "GfxFree(gfxNode)",
		"snippet": "GfxFree(${1:APTR gfxNode})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a graphics extended data structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EF.html"
	},
	{
		"displayText": "GfxLookUP(associateNode)",
		"snippet": "GfxLookUP(${1:CONST APTR associateNode})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F0.html"
	},
	{
		"displayText": "GfxNew(gfxNodeType)",
		"snippet": "GfxNew(${1:ULONG gfxNodeType})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate a graphics extended data structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F1.html"
	},
	{
		"displayText": "GiveUnit()",
		"snippet": "GiveUnit()",
		"type": "function",
		"leftLabel": "void",
		"description": "Free the disk back up.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0130.html"
	},
	{
		"displayText": "GLYPH_GetClass()",
		"snippet": "GLYPH_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the glyph class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0298.html"
	},
	{
		"displayText": "GoodID(id)",
		"snippet": "GoodID(${1:LONG id})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Test if an identifier follows the IFF 85 specification. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0368.html"
	},
	{
		"displayText": "GoodType(type)",
		"snippet": "GoodType(${1:LONG type})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Test if a type follows the IFF 85 specification. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0369.html"
	},
	{
		"displayText": "GT_BeginRefresh(win)",
		"snippet": "GT_BeginRefresh(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Begin refreshing friendly to GadTools. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027C.html"
	},
	{
		"displayText": "GT_EndRefresh(window, complete)",
		"snippet": "GT_EndRefresh(${1:struct Window *win}, ${2:LONG complete})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Bnd refreshing friendly to GadTools. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027D.html"
	},
	{
		"displayText": "GT_FilterIMsg(imsg)",
		"snippet": "GT_FilterIMsg(${1:CONST struct IntuiMessage *imsg})${2:}",
		"type": "function",
		"leftLabel": "struct IntuiMessage*",
		"description": "Filter an IntuiMessage through GadTools. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027E.html"
	},
	{
		"displayText": "GT_GetGadgetAttrs(gadget, window, requester, tag1, ...)",
		"snippet": "GT_GetGadgetAttrs(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Request the attributes of a GadTools gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027F.html"
	},
	{
		"displayText": "GT_GetGadgetAttrsA(gadget, window, requester, tagList)",
		"snippet": "GT_GetGadgetAttrsA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Request the attributes of a GadTools gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027F.html"
	},
	{
		"displayText": "GT_GetIMsg(iport)",
		"snippet": "GT_GetIMsg(${1:struct MsgPort *iport})${2:}",
		"type": "function",
		"leftLabel": "struct IntuiMessage*",
		"description": "Get an IntuiMessage, with GadTools processing. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0280.html"
	},
	{
		"displayText": "GT_PostFilterIMsg(imsg)",
		"snippet": "GT_PostFilterIMsg(${1:struct IntuiMessage *imsg})${2:}",
		"type": "function",
		"leftLabel": "struct IntuiMessage*",
		"description": "Return the unfiltered message after GT_FilterIMsg() was called. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0281.html"
	},
	{
		"displayText": "GT_RefreshWindow(window, req)",
		"snippet": "GT_RefreshWindow(${1:struct Window *win}, ${2:struct Requester *req})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh all GadTools gadgets in a window. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0282.html"
	},
	{
		"displayText": "GT_ReplyIMsg(imsg)",
		"snippet": "GT_ReplyIMsg(${1:struct IntuiMessage *imsg})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Reply a message obtained with GT_GetIMsg(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0283.html"
	},
	{
		"displayText": "GT_SetGadgetAttrs(gadget, window, requester, tag1, ...)",
		"snippet": "GT_SetGadgetAttrs(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the attributes of a GadTools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0284.html"
	},
	{
		"displayText": "GT_SetGadgetAttrsA(gadget, window, requester, tagList)",
		"snippet": "GT_SetGadgetAttrsA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the attributes of a GadTools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0284.html"
	},
	{
		"displayText": "HelpControl(window, flags)",
		"snippet": "HelpControl(${1:struct Window *win}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Enable/disable Gadget-Help feature. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BB.html"
	},
	{
		"displayText": "HideAllListBrowserChildren(list)",
		"snippet": "HideAllListBrowserChildren(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Hide all children in a ListBrowser.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0449.html"
	},
	{
		"displayText": "HideListBrowserNodeChildren(node)",
		"snippet": "HideListBrowserNodeChildren(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Hide a ListBrowser node's children.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044A.html"
	},
	{
		"displayText": "HookEntry(hook, object, message)",
		"snippet": "HookEntry(${1:struct Hook *hook}, ${2:Object *obj}, ${3:APTR msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Assembler to HLL conversion stub for hook entry.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0040.html"
	},
	{
		"displayText": "HotKey(description, port, id)",
		"snippet": "HotKey(${1:CONST_STRPTR description}, ${2:struct MsgPort *port}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "CxObj*",
		"description": "Create a commodity triad. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0041.html"
	},
	{
		"displayText": "IconControl(icon, ...)",
		"snippet": "IconControl(${1:struct DiskObject *icon}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set and get icon and icon.library options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0351.html"
	},
	{
		"displayText": "IconControlA(icon, tags)",
		"snippet": "IconControlA(${1:struct DiskObject *icon}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set and get icon and icon.library options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0351.html"
	},
	{
		"displayText": "IDtoStr(id, buf)",
		"snippet": "IDtoStr(${1:LONG id}, ${2:STRPTR buf})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Convert a longword identifier to a null-terminated string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036A.html"
	},
	{
		"displayText": "IEEEDPAbs(parm)",
		"snippet": "IEEEDPAbs(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute absolute value of IEEE double precision argument.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047E.html"
	},
	{
		"displayText": "IEEEDPAcos(parm)",
		"snippet": "IEEEDPAcos(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arc cosine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048B.html"
	},
	{
		"displayText": "IEEEDPAdd(leftParm, rightParm)",
		"snippet": "IEEEDPAdd(${1:DOUBLE leftParm}, ${2:DOUBLE rightParm})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Add one double precision IEEE number to another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047F.html"
	},
	{
		"displayText": "IEEEDPAsin(parm)",
		"snippet": "IEEEDPAsin(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arcsine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048C.html"
	},
	{
		"displayText": "IEEEDPAtan(parm)",
		"snippet": "IEEEDPAtan(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arctangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048D.html"
	},
	{
		"displayText": "IEEEDPCeil(parm)",
		"snippet": "IEEEDPCeil(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute Ceil function of IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0480.html"
	},
	{
		"displayText": "IEEEDPCmp(leftParm, rightParm)",
		"snippet": "IEEEDPCmp(${1:DOUBLE leftParm}, ${2:DOUBLE rightParm})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two double precision floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0481.html"
	},
	{
		"displayText": "IEEEDPCos(parm)",
		"snippet": "IEEEDPCos(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048E.html"
	},
	{
		"displayText": "IEEEDPCosh(parm)",
		"snippet": "IEEEDPCosh(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the hyperbolic cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048F.html"
	},
	{
		"displayText": "IEEEDPDiv(dividend, divisor)",
		"snippet": "IEEEDPDiv(${1:DOUBLE dividend}, ${2:DOUBLE divisor})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Divide one double precision IEEE by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0482.html"
	},
	{
		"displayText": "IEEEDPExp(parm)",
		"snippet": "IEEEDPExp(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the exponential of e.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0490.html"
	},
	{
		"displayText": "IEEEDPFieee(single)",
		"snippet": "IEEEDPFieee(${1:FLOAT single})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Convert IEEE single to IEEE double.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0491.html"
	},
	{
		"displayText": "IEEEDPFix(parm)",
		"snippet": "IEEEDPFix(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert IEEE double float to integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0483.html"
	},
	{
		"displayText": "IEEEDPFloor(parm)",
		"snippet": "IEEEDPFloor(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute Floor function of IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0484.html"
	},
	{
		"displayText": "IEEEDPFlt(integer)",
		"snippet": "IEEEDPFlt(${1:LONG integer})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Convert integer to IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0485.html"
	},
	{
		"displayText": "IEEEDPLog(parm)",
		"snippet": "IEEEDPLog(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the natural logarithm of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0492.html"
	},
	{
		"displayText": "IEEEDPLog10(parm)",
		"snippet": "IEEEDPLog10(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute logarithm base 10 of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0493.html"
	},
	{
		"displayText": "IEEEDPMul(factor1, factor2)",
		"snippet": "IEEEDPMul(${1:DOUBLE factor1}, ${2:DOUBLE factor2})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Multiply one double precision IEEE number by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0486.html"
	},
	{
		"displayText": "IEEEDPNeg(parm)",
		"snippet": "IEEEDPNeg(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute negative value of IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0487.html"
	},
	{
		"displayText": "IEEEDPPow(exp, arg)",
		"snippet": "IEEEDPPow(${1:DOUBLE exp}, ${2:DOUBLE arg})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Raise a number to another number power.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0494.html"
	},
	{
		"displayText": "IEEEDPSin(parm)",
		"snippet": "IEEEDPSin(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0495.html"
	},
	{
		"displayText": "IEEEDPSincos(pf2, parm)",
		"snippet": "IEEEDPSincos(${1:DOUBLE *pf2}, ${2:DOUBLE parm})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arc tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0496.html"
	},
	{
		"displayText": "IEEEDPSinh(parm)",
		"snippet": "IEEEDPSinh(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the hyperbolic sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0497.html"
	},
	{
		"displayText": "IEEEDPSqrt(parm)",
		"snippet": "IEEEDPSqrt(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the square root of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0498.html"
	},
	{
		"displayText": "IEEEDPSub(leftParm, rightParm)",
		"snippet": "IEEEDPSub(${1:DOUBLE leftParm}, ${2:DOUBLE rightParm})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Subtract one double precision IEEE number from another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0488.html"
	},
	{
		"displayText": "IEEEDPTan(parm)",
		"snippet": "IEEEDPTan(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0499.html"
	},
	{
		"displayText": "IEEEDPTanh(parm)",
		"snippet": "IEEEDPTanh(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the hyperbolic tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049A.html"
	},
	{
		"displayText": "IEEEDPTieee(parm)",
		"snippet": "IEEEDPTieee(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert IEEE double to IEEE single.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049B.html"
	},
	{
		"displayText": "IEEEDPTst(parm)",
		"snippet": "IEEEDPTst(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare IEEE double precision value to 0.0.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0489.html"
	},
	{
		"displayText": "IEEESPAbs(parm)",
		"snippet": "IEEESPAbs(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute absolute value of IEEE single precision argument.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049D.html"
	},
	{
		"displayText": "IEEESPAcos(parm)",
		"snippet": "IEEESPAcos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arc cosine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AA.html"
	},
	{
		"displayText": "IEEESPAdd(leftParm, rightParm)",
		"snippet": "IEEESPAdd(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Add one single precision IEEE number to another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049E.html"
	},
	{
		"displayText": "IEEESPAsin(parm)",
		"snippet": "IEEESPAsin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arcsine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AB.html"
	},
	{
		"displayText": "IEEESPAtan(parm)",
		"snippet": "IEEESPAtan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arc tangent of number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AC.html"
	},
	{
		"displayText": "IEEESPCeil(parm)",
		"snippet": "IEEESPCeil(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Ceil function of IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049F.html"
	},
	{
		"displayText": "IEEESPCmp(leftParm, rightParm)",
		"snippet": "IEEESPCmp(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two single precision floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A0.html"
	},
	{
		"displayText": "IEEESPCos(parm)",
		"snippet": "IEEESPCos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AD.html"
	},
	{
		"displayText": "IEEESPCosh(parm)",
		"snippet": "IEEESPCosh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the hyperbolic cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AE.html"
	},
	{
		"displayText": "IEEESPDiv(dividend, divisor)",
		"snippet": "IEEESPDiv(${1:FLOAT dividend}, ${2:FLOAT divisor})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Divide one single precision IEEE by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A1.html"
	},
	{
		"displayText": "IEEESPExp(parm)",
		"snippet": "IEEESPExp(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the exponential of e.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AF.html"
	},
	{
		"displayText": "IEEESPFieee(parm)",
		"snippet": "IEEESPFieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert IEEE single to IEEE single.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B0.html"
	},
	{
		"displayText": "IEEESPFix(parm)",
		"snippet": "IEEESPFix(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert IEEE single float to integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A2.html"
	},
	{
		"displayText": "IEEESPFloor(parm)",
		"snippet": "IEEESPFloor(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Floor function of IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A3.html"
	},
	{
		"displayText": "IEEESPFlt(integer)",
		"snippet": "IEEESPFlt(${1:LONG integer})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert integer to IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A4.html"
	},
	{
		"displayText": "IEEESPLog(parm)",
		"snippet": "IEEESPLog(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the natural logarithm of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B1.html"
	},
	{
		"displayText": "IEEESPLog10(parm)",
		"snippet": "IEEESPLog10(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute logarithm base 10 of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B2.html"
	},
	{
		"displayText": "IEEESPMul(leftParm, rightParm)",
		"snippet": "IEEESPMul(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Multiply one double precision IEEE number by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A5.html"
	},
	{
		"displayText": "IEEESPNeg(parm)",
		"snippet": "IEEESPNeg(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute negative value of IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A6.html"
	},
	{
		"displayText": "IEEESPPow(exp, arg)",
		"snippet": "IEEESPPow(${1:FLOAT exp}, ${2:FLOAT arg})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Raise a number to another number power.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B3.html"
	},
	{
		"displayText": "IEEESPSin(parm)",
		"snippet": "IEEESPSin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B4.html"
	},
	{
		"displayText": "IEEESPSincos(cosptr, parm)",
		"snippet": "IEEESPSincos(${1:FLOAT *cosptr}, ${2:FLOAT parm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arc tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B5.html"
	},
	{
		"displayText": "IEEESPSinh(parm)",
		"snippet": "IEEESPSinh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the hyperbolic sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B6.html"
	},
	{
		"displayText": "IEEESPSqrt(parm)",
		"snippet": "IEEESPSqrt(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the square root of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B7.html"
	},
	{
		"displayText": "IEEESPSub(leftParm, rightParm)",
		"snippet": "IEEESPSub(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Subtract one single precision IEEE number from another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A7.html"
	},
	{
		"displayText": "IEEESPTan(parm)",
		"snippet": "IEEESPTan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B8.html"
	},
	{
		"displayText": "IEEESPTanh(parm)",
		"snippet": "IEEESPTanh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the hyperbolic tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B9.html"
	},
	{
		"displayText": "IEEESPTieee(parm)",
		"snippet": "IEEESPTieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert IEEE single to IEEE single.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BA.html"
	},
	{
		"displayText": "IEEESPTst(parm)",
		"snippet": "IEEESPTst(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare IEEE single precision value to 0.0.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A8.html"
	},
	{
		"displayText": "IfAmigaXIP(handle)",
		"snippet": "IfAmigaXIP(${1:CONST struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "struct Resident*",
		"description": "Check if a card is an Amiga execute-in-place card.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009C.html"
	},
	{
		"displayText": "Info(lock, parameterBlock)",
		"snippet": "Info(${1:BPTR lock}, ${2:struct InfoData *parameterBlock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns information about the disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017D.html"
	},
	{
		"displayText": "Inhibit(name, onoff)",
		"snippet": "Inhibit(${1:CONST_STRPTR name}, ${2:LONG onoff})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Inhibits access to a filesystem. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017E.html"
	},
	{
		"displayText": "InitArea(areaInfo, vectorBuffer, maxVectors)",
		"snippet": "InitArea(${1:struct AreaInfo *areaInfo}, ${2:APTR vectorBuffer}, ${3:LONG maxVectors})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize vector collection matrix.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F2.html"
	},
	{
		"displayText": "InitBitMap(bitMap, depth, width, height)",
		"snippet": "InitBitMap(${1:struct BitMap *bm}, ${2:LONG depth}, ${3:LONG width}, ${4:LONG height})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize bit map structure with input values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F3.html"
	},
	{
		"displayText": "InitCode(startClass, version)",
		"snippet": "InitCode(${1:ULONG startClass}, ${2:ULONG version})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize resident code modules (internal function)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0215.html"
	},
	{
		"displayText": "InitGels(head, tail, gelsInfo)",
		"snippet": "InitGels(${1:struct VSprite *head}, ${2:struct VSprite *tail}, ${3:struct GelsInfo *gelsInfo})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize a gel list; must be called before using gels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F4.html"
	},
	{
		"displayText": "InitGMasks(animOb)",
		"snippet": "InitGMasks(${1:struct AnimOb *anOb})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize all of the masks of an AnimOb.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F5.html"
	},
	{
		"displayText": "InitIFF(iffHandle, flags, streamHook)",
		"snippet": "InitIFF(${1:struct IFFHandle *iff}, ${2:LONG flags}, ${3:CONST struct Hook *streamHook})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize an IFFHandle structure as a user stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036B.html"
	},
	{
		"displayText": "InitIFFasClip(iffHandle)",
		"snippet": "InitIFFasClip(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize an IFFHandle as a clipboard stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036C.html"
	},
	{
		"displayText": "InitIFFasDOS(iffHandle)",
		"snippet": "InitIFFasDOS(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize an IFFHandle as a DOS stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036D.html"
	},
	{
		"displayText": "InitLayers(layerInfo)",
		"snippet": "InitLayers(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize Layer_Info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0423.html"
	},
	{
		"displayText": "InitMasks(vSprite)",
		"snippet": "InitMasks(${1:struct VSprite *vSprite})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize the BorderLine and CollMask masks of a VSprite.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F6.html"
	},
	{
		"displayText": "InitRastPort(rastPort)",
		"snippet": "InitRastPort(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize raster port structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F7.html"
	},
	{
		"displayText": "InitRequester(requester)",
		"snippet": "InitRequester(${1:struct Requester *req})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize a Requester structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BC.html"
	},
	{
		"displayText": "InitResident(resident, segList)",
		"snippet": "InitResident(${1:CONST struct Resident *res}, ${2:ULONG segList})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Initialize resident module.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0216.html"
	},
	{
		"displayText": "InitSemaphore(sigSem)",
		"snippet": "InitSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize a signal semaphore.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0217.html"
	},
	{
		"displayText": "InitStruct(initTable, memory, size)",
		"snippet": "InitStruct(${1:CONST APTR initTable}, ${2:APTR memory}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize memory from a table.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0218.html"
	},
	{
		"displayText": "InitTmpRas(tmpRas, buffer, size)",
		"snippet": "InitTmpRas(${1:struct TmpRas *tmpRas}, ${2:PLANEPTR buffer}, ${3:LONG size})${4:}",
		"type": "function",
		"leftLabel": "struct TmpRas*",
		"description": "Initialize area of local memory for usage by areafill, floodfill, text.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F8.html"
	},
	{
		"displayText": "InitView(view)",
		"snippet": "InitView(${1:struct View *v})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize View structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F9.html"
	},
	{
		"displayText": "InitVPort(viewPort)",
		"snippet": "InitVPort(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize ViewPort structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FA.html"
	},
	{
		"displayText": "Input()",
		"snippet": "Input()",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Identify the program's initial input file handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017F.html"
	},
	{
		"displayText": "Insert(list, node, pred)",
		"snippet": "Insert(${1:struct List *list}, ${2:struct Node *node}, ${3:struct Node *pred})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert a node into a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0219.html"
	},
	{
		"displayText": "InsertCxObj(headObj, cxObj, pred)",
		"snippet": "InsertCxObj(${1:CxObj *headObj}, ${2:CxObj *co}, ${3:CxObj *pred})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert a commodity object in a list after a given object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F0.html"
	},
	{
		"displayText": "InstallClipRegion(layer, region)",
		"snippet": "InstallClipRegion(${1:struct Layer *layer}, ${2:CONST struct Region *region})${3:}",
		"type": "function",
		"leftLabel": "struct Region*",
		"description": "Install clip region in layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0424.html"
	},
	{
		"displayText": "InstallLayerHook(layer, hook)",
		"snippet": "InstallLayerHook(${1:struct Layer *layer}, ${2:struct Hook *hook})${3:}",
		"type": "function",
		"leftLabel": "struct Hook*",
		"description": "Safely install a new Layer->BackFill hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0425.html"
	},
	{
		"displayText": "InstallLayerInfoHook(li, hook)",
		"snippet": "InstallLayerInfoHook(${1:struct Layer_Info *li}, ${2:CONST struct Hook *hook})${3:}",
		"type": "function",
		"leftLabel": "struct Hook*",
		"description": "Install a backfill hook for non-layer. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0426.html"
	},
	{
		"displayText": "INTEGER_GetClass()",
		"snippet": "INTEGER_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the integer class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node038D.html"
	},
	{
		"displayText": "InternalLoadSeg(fileHandle, table, funcarray, stack)",
		"snippet": "InternalLoadSeg(${1:BPTR fh}, ${2:BPTR table}, ${3:CONST LONG *funcarray}, ${4:LONG *stack})${5:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Low-level load routine. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0180.html"
	},
	{
		"displayText": "InternalUnLoadSeg(seglist, freefunc)",
		"snippet": "InternalUnLoadSeg(${1:BPTR seglist}, ${2:void (*CONST freefunc})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Unloads a seglist loaded with InternalLoadSeg(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0181.html"
	},
	{
		"displayText": "IntuiTextLength(iText)",
		"snippet": "IntuiTextLength(${1:CONST struct IntuiText *iText})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return the length (pixel-width) of an IntuiText.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BD.html"
	},
	{
		"displayText": "InvertKeyMap(ansiCode, event, keyMap)",
		"snippet": "InvertKeyMap(${1:ULONG ansiCode}, ${2:struct InputEvent *event}, ${3:CONST struct KeyMap *km})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Generate an input event from an ANSI code. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F1.html"
	},
	{
		"displayText": "InvertString(string, keyMap)",
		"snippet": "InvertString(${1:CONST_STRPTR str}, ${2:CONST struct KeyMap *km})${3:}",
		"type": "function",
		"leftLabel": "struct InputEvent*",
		"description": "Produce input events that would generate the given string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0042.html"
	},
	{
		"displayText": "IoErr()",
		"snippet": "IoErr()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return extra information from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0182.html"
	},
	{
		"displayText": "IsFileSystem(name)",
		"snippet": "IsFileSystem(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns whether a Dos handler is a filesystem. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0183.html"
	},
	{
		"displayText": "IsInteractive(file)",
		"snippet": "IsInteractive(${1:BPTR file})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Discover whether a file is \"interactive\".",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0184.html"
	},
	{
		"displayText": "IsRexxMsg(rexxmsg)",
		"snippet": "IsRexxMsg(${1:CONST struct RexxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Function to determine if a message came from ARexx.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054E.html"
	},
	{
		"displayText": "ItemAddress(menuStrip, menuNumber)",
		"snippet": "ItemAddress(${1:CONST struct Menu *menuStrip}, ${2:ULONG menuNumber})${3:}",
		"type": "function",
		"leftLabel": "struct MenuItem*",
		"description": "Returns the address of the specified MenuItem.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BE.html"
	},
	{
		"displayText": "KCmpStr(a, b)",
		"snippet": "KCmpStr(${1:CONST_STRPTR a}, ${2:CONST_STRPTR b})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two null terminated strings.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0124.html"
	},
	{
		"displayText": "KGetChar()",
		"snippet": "KGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0125.html"
	},
	{
		"displayText": "KGetChar()",
		"snippet": "KGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0125.html"
	},
	{
		"displayText": "KGetNum()",
		"snippet": "KGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0126.html"
	},
	{
		"displayText": "KGetNum()",
		"snippet": "KGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0126.html"
	},
	{
		"displayText": "KMayGetChar()",
		"snippet": "KMayGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return a character if present, but don't wait.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0127.html"
	},
	{
		"displayText": "KPrintF(formatString, ...)",
		"snippet": "KPrintF(${1:CONST_STRPTR formatString}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print formatted data to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0128.html"
	},
	{
		"displayText": "KPrintF(formatString, ...)",
		"snippet": "KPrintF(${1:CONST_STRPTR formatString}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print formatted data to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0128.html"
	},
	{
		"displayText": "KPutChar(character)",
		"snippet": "KPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0129.html"
	},
	{
		"displayText": "KPutChar(character)",
		"snippet": "KPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0129.html"
	},
	{
		"displayText": "KPutStr(string)",
		"snippet": "KPutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a string to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012A.html"
	},
	{
		"displayText": "LABEL_GetClass()",
		"snippet": "LABEL_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the label image class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0416.html"
	},
	{
		"displayText": "LAYOUT_GetClass()",
		"snippet": "LAYOUT_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the layout class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043B.html"
	},
	{
		"displayText": "LayoutIcon(icon, screen, ...)",
		"snippet": "LayoutIcon(${1:struct DiskObject *icon}, ${2:struct Screen *scr}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Adapt a palette-mapped icon for display. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0352.html"
	},
	{
		"displayText": "LayoutIconA(icon, screen, tags)",
		"snippet": "LayoutIconA(${1:struct DiskObject *icon}, ${2:struct Screen *scr}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Adapt a palette-mapped icon for display. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0352.html"
	},
	{
		"displayText": "LayoutLimits(gadget, limits, font, screen)",
		"snippet": "LayoutLimits(${1:struct Gadget *gad}, ${2:struct LayoutLimits *limits}, ${3:struct TextFont *font}, ${4:struct Screen *scr})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Basy way to find out max and min size of layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043C.html"
	},
	{
		"displayText": "LayoutMenuItems(firstItem, visualInfo, tag1, ...)",
		"snippet": "LayoutMenuItems(${1:struct MenuItem *firstitem}, ${2:APTR vinfo}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0285.html"
	},
	{
		"displayText": "LayoutMenuItemsA(firstItem, visualInfo, tagList)",
		"snippet": "LayoutMenuItemsA(${1:struct MenuItem *firstitem}, ${2:APTR vinfo}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0285.html"
	},
	{
		"displayText": "LayoutMenus(firstMenu, visualInfo, tag1, ...)",
		"snippet": "LayoutMenus(${1:struct Menu *firstmenu}, ${2:APTR vinfo}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menus and menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0286.html"
	},
	{
		"displayText": "LayoutMenusA(firstMenu, visualInfo, tagList)",
		"snippet": "LayoutMenusA(${1:struct Menu *firstmenu}, ${2:APTR vinfo}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menus and menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0286.html"
	},
	{
		"displayText": "LBAddNode(gadget, window, requester, node, tag1, ...)",
		"snippet": "LBAddNode(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:ULONG tag}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "V41 listbrowser.gadget LBM_ADDNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052C.html"
	},
	{
		"displayText": "LBAddNodeA(gadget, window, requester, node, tags)",
		"snippet": "LBAddNodeA(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "V41 listbrowser.gadget LBM_ADDNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052C.html"
	},
	{
		"displayText": "LBEditNode(gadget, window, requester, node, tag, ...)",
		"snippet": "LBEditNode(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:ULONG tag}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "V41 listbrowser.gadget LBM_EDITNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052D.html"
	},
	{
		"displayText": "LBEditNodeA(gadget, window, requester, node, tags)",
		"snippet": "LBEditNodeA(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "V41 listbrowser.gadget LBM_EDITNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052D.html"
	},
	{
		"displayText": "LBRemNode(gadget, window, requester, node)",
		"snippet": "LBRemNode(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "V41 listbrowser.gadget LBM_REMNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052E.html"
	},
	{
		"displayText": "LendMenus(fromWindow, toWindow)",
		"snippet": "LendMenus(${1:struct Window *from}, ${2:struct Window *to})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lend window's menu action to another window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BF.html"
	},
	{
		"displayText": "LengthArgstring(argstring)",
		"snippet": "LengthArgstring(${1:CONST_STRPTR argstr})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the length value stored in the argstring.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054F.html"
	},
	{
		"displayText": "LISTBROWSER_GetClass()",
		"snippet": "LISTBROWSER_GetClass()",
		"type": "function",
		"leftLabel": "struct IClass*",
		"description": "Gets the pointer to the listbrowser class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0440.html"
	},
	{
		"displayText": "LibAllocPooled(poolHeader, memSize)",
		"snippet": "LibAllocPooled(${1:APTR poolHeader}, ${2:ULONG memSize})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory with the pool manager. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0043.html"
	},
	{
		"displayText": "LibCreatePool(memFlags, puddleSize, threshSize)",
		"snippet": "LibCreatePool(${1:ULONG memFlags}, ${2:ULONG puddleSize}, ${3:ULONG threshSize})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Generate a private memory pool header. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0044.html"
	},
	{
		"displayText": "LibDeletePool(poolHeader)",
		"snippet": "LibDeletePool(${1:APTR poolHeader})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Drain an entire memory pool. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0045.html"
	},
	{
		"displayText": "LibDoGadgetMethod(gadget, window, requester, tag1, ...)",
		"snippet": "LibDoGadgetMethod(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "DoGadgetMethodA for V37 machines.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052F.html"
	},
	{
		"displayText": "LibDoGadgetMethodA(gadget, window, requester, message)",
		"snippet": "LibDoGadgetMethodA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Msg msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "DoGadgetMethodA for V37 machines.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052F.html"
	},
	{
		"displayText": "LibFreePooled(poolHeader, memory, memSize)",
		"snippet": "LibFreePooled(${1:APTR poolHeader}, ${2:APTR memory}, ${3:ULONG memSize})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free pooled memory. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0046.html"
	},
	{
		"displayText": "ListBrowserSelectAll(list)",
		"snippet": "ListBrowserSelectAll(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Select all nodes in a multiselect ListBrowser.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0448.html"
	},
	{
		"displayText": "LoadRGB32(viewPort, table)",
		"snippet": "LoadRGB32(${1:struct ViewPort *vp}, ${2:CONST ULONG *table})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set a series of color registers for this Viewport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FB.html"
	},
	{
		"displayText": "LoadRGB4(viewPort, colors, count)",
		"snippet": "LoadRGB4(${1:struct ViewPort *vp}, ${2:CONST UWORD *colors}, ${3:LONG count})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Load RGB color values from table.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FC.html"
	},
	{
		"displayText": "LoadSeg(name)",
		"snippet": "LoadSeg(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Scatterload a loadable file into memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0185.html"
	},
	{
		"displayText": "LoadView(view)",
		"snippet": "LoadView(${1:struct View *v})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Use a coprocessor instruction list to create the current display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FD.html"
	},
	{
		"displayText": "LocalItemData(localItem)",
		"snippet": "LocalItemData(${1:CONST struct LocalContextItem *li})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Get pointer to user data for local context item. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036E.html"
	},
	{
		"displayText": "Lock(name, type)",
		"snippet": "Lock(${1:CONST_STRPTR name}, ${2:LONG type})${3:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Lock a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0186.html"
	},
	{
		"displayText": "LockAmigaGuideBase(handle)",
		"snippet": "LockAmigaGuideBase(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Lock an AmigaGuide client. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000D.html"
	},
	{
		"displayText": "LockDosList(flags)",
		"snippet": "LockDosList(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Locks the specified Dos Lists for use. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0187.html"
	},
	{
		"displayText": "LockIBase(lockNum)",
		"snippet": "LockIBase(${1:ULONG lockNum})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke semaphore arbitration of IntuitionBase.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C0.html"
	},
	{
		"displayText": "LockLayer(dummy, layer)",
		"snippet": "LockLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lock layer to make changes to ClipRects.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0427.html"
	},
	{
		"displayText": "LockLayerInfo(layerInfo)",
		"snippet": "LockLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lock the LayerInfo structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0428.html"
	},
	{
		"displayText": "LockLayerRom(layer)",
		"snippet": "LockLayerRom(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lock Layer structure by ROM(gfx lib) code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FE.html"
	},
	{
		"displayText": "LockLayers(layerInfo)",
		"snippet": "LockLayers(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Loadock all layers from graphics output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0429.html"
	},
	{
		"displayText": "LockPubScreen(name)",
		"snippet": "LockPubScreen(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Screen*",
		"description": "Prevent a public screen from closing. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C1.html"
	},
	{
		"displayText": "LockPubScreenList()",
		"snippet": "LockPubScreenList()",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Prevent changes to the system list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C2.html"
	},
	{
		"displayText": "LockRealTime(lockType)",
		"snippet": "LockRealTime(${1:ULONG lockType})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Prevent other tasks from changing internal structures. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0538.html"
	},
	{
		"displayText": "LockRecord(fh, offset, length, mode, timeout)",
		"snippet": "LockRecord(${1:BPTR fh}, ${2:ULONG offset}, ${3:ULONG length}, ${4:ULONG mode}, ${5:ULONG timeout})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Locks a portion of a file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0188.html"
	},
	{
		"displayText": "LockRecords(recArray, timeout)",
		"snippet": "LockRecords(${1:struct RecordLock *recArray}, ${2:ULONG timeout})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Lock a series of records. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0189.html"
	},
	{
		"displayText": "LockRexxBase(resource)",
		"snippet": "LockRexxBase(${1:ULONG resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Obtain a semaphore lock on the RexxBase structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0550.html"
	},
	{
		"displayText": "MakeClass(classID, superClassID, superClass, instanceSize, flags)",
		"snippet": "MakeClass(${1:CONST_STRPTR classID}, ${2:CONST_STRPTR superClassID}, ${3:CONST struct IClass *superClass}, ${4:ULONG instanceSize}, ${5:ULONG flags})${6:}",
		"type": "function",
		"leftLabel": "struct IClass*",
		"description": "Create and initialize a boopsi class. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C3.html"
	},
	{
		"displayText": "MakeDosEntry(name, type)",
		"snippet": "MakeDosEntry(${1:CONST_STRPTR name}, ${2:LONG type})${3:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Creates a DosList structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018A.html"
	},
	{
		"displayText": "MakeDosNode(parmPacket)",
		"snippet": "MakeDosNode(${1:CONST APTR parmPacket})${2:}",
		"type": "function",
		"leftLabel": "struct DeviceNode*",
		"description": "Construct dos data structures that a disk needs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0266.html"
	},
	{
		"displayText": "MakeFunctions(target, functionArray, funcDispBase)",
		"snippet": "MakeFunctions(${1:APTR target}, ${2:CONST APTR functionArray}, ${3:CONST APTR funcDispBase})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Construct a function jump table.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021A.html"
	},
	{
		"displayText": "MakeLibrary(funcInit, structInit, libInit)",
		"snippet": "MakeLibrary(${1:CONST APTR funcInit}, ${2:CONST APTR structInit}, ${3:ULONG (*CONST libInit})${4:}",
		"type": "function",
		"leftLabel": "struct Library*",
		"description": "Construct a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021B.html"
	},
	{
		"displayText": "MakeLink(name, dest, soft)",
		"snippet": "MakeLink(${1:CONST_STRPTR name}, ${2:LONG dest}, ${3:LONG soft})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Creates a filesystem link. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018B.html"
	},
	{
		"displayText": "MakeScreen(screen)",
		"snippet": "MakeScreen(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Do an Intuition-integrated MakeVPort() of a screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C4.html"
	},
	{
		"displayText": "MakeVPort(view, viewPort)",
		"snippet": "MakeVPort(${1:struct View *v}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Generate display copper list for a viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FF.html"
	},
	{
		"displayText": "MakeWorkbenchObjectVisible(name, ...)",
		"snippet": "MakeWorkbenchObjectVisible(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Make a particular icon visible. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C0.html"
	},
	{
		"displayText": "MakeWorkbenchObjectVisibleA(name, tags)",
		"snippet": "MakeWorkbenchObjectVisibleA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Make a particular icon visible. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C0.html"
	},
	{
		"displayText": "MapANSI(string, count, buffer, length, keyMap)",
		"snippet": "MapANSI(${1:CONST_STRPTR str}, ${2:LONG count}, ${3:STRPTR buffer}, ${4:LONG length}, ${5:CONST struct KeyMap *km})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Encode an ANSI string into keycodes. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0411.html"
	},
	{
		"displayText": "MapRawKey(event, buffer, length, keyMap)",
		"snippet": "MapRawKey(${1:CONST struct InputEvent *event}, ${2:STRPTR buffer}, ${3:LONG length}, ${4:CONST struct KeyMap *km})${5:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Decode single raw key input event to an ANSI string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0412.html"
	},
	{
		"displayText": "MapTags(tagList, mapList, mapType)",
		"snippet": "MapTags(${1:struct TagItem *tagList}, ${2:CONST struct TagItem *mapList}, ${3:ULONG mapType})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert ti_Tag values in a list via map pairing. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A5.html"
	},
	{
		"displayText": "MatchEnd(anchor)",
		"snippet": "MatchEnd(${1:struct AnchorPath *anchor})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free storage allocated for MatchFirst()/MatchNext(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018C.html"
	},
	{
		"displayText": "MatchFirst(pattern, anchor)",
		"snippet": "MatchFirst(${1:CONST_STRPTR pattern}, ${2:struct AnchorPath *anchor})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Finds file that matches pattern. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018D.html"
	},
	{
		"displayText": "MatchIX(event, ix)",
		"snippet": "MatchIX(${1:CONST struct InputEvent *event}, ${2:CONST IX *ix})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "See if an input event matches an initialized input expression. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F2.html"
	},
	{
		"displayText": "MatchNext(anchor)",
		"snippet": "MatchNext(${1:struct AnchorPath *anchor})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Finds the next file or directory that matches pattern. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018E.html"
	},
	{
		"displayText": "MatchPattern(pattern, string)",
		"snippet": "MatchPattern(${1:CONST_STRPTR pattern}, ${2:STRPTR str})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Checks for a pattern match with a string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018F.html"
	},
	{
		"displayText": "MatchPatternNoCase(pattern, string)",
		"snippet": "MatchPatternNoCase(${1:CONST_STRPTR pattern}, ${2:STRPTR str})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Checks for a pattern match with a string. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0190.html"
	},
	{
		"displayText": "MatchToolValue(typeString, value)",
		"snippet": "MatchToolValue(${1:CONST STRPTR typeString}, ${2:CONST STRPTR value})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Check a tool type variable for a particular value.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0353.html"
	},
	{
		"displayText": "MaxCli()",
		"snippet": "MaxCli()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the highest CLI process number possibly in use. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0191.html"
	},
	{
		"displayText": "ModeNotAvailable(modeID)",
		"snippet": "ModeNotAvailable(${1:ULONG modeID})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Check to see if a DisplayID isn't available. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0300.html"
	},
	{
		"displayText": "ModifyIDCMP(window, flags)",
		"snippet": "ModifyIDCMP(${1:struct Window *win}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Modify the state of a window's IDCMPFlags.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C5.html"
	},
	{
		"displayText": "ModifyProp(gadget, window, requester, flags, horizPot, vertPot, horizBody, vertBody)",
		"snippet": "ModifyProp(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG flags}, ${5:ULONG horizPot}, ${6:ULONG vertPot}, ${7:ULONG horizBody}, ${8:ULONG vertBody})${9:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Modify the current parameters of a proportional gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C6.html"
	},
	{
		"displayText": "Move(rastPort, x, y)",
		"snippet": "Move(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move graphics pen position.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0301.html"
	},
	{
		"displayText": "MoveLayer(dummy, layer, dx, dy)",
		"snippet": "MoveLayer(0L, ${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Move layer to new position in BitMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042A.html"
	},
	{
		"displayText": "MoveLayerInFrontOf(layer_to_move, other_layer)",
		"snippet": "MoveLayerInFrontOf(${1:struct Layer *layer_to_move}, ${2:struct Layer *other_layer})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Put layer in front of another layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042B.html"
	},
	{
		"displayText": "MoveScreen(screen, dx, dy)",
		"snippet": "MoveScreen(${1:struct Screen *scr}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attempt to move the screen by the increments provided.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C7.html"
	},
	{
		"displayText": "MoveSizeLayer(layer, dx, dy, dw, dh)",
		"snippet": "MoveSizeLayer(${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG dw}, ${5:LONG dh})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Position/Size layer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042C.html"
	},
	{
		"displayText": "MoveSprite(viewPort, sprite, x, y)",
		"snippet": "MoveSprite(${1:struct ViewPort *vp}, ${2:struct SimpleSprite *sprite}, ${3:LONG x}, ${4:LONG y})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move sprite to a point relative to top of viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0302.html"
	},
	{
		"displayText": "MoveWindow(window, dx, dy)",
		"snippet": "MoveWindow(${1:struct Window *win}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to move a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C8.html"
	},
	{
		"displayText": "MoveWindowInFrontOf(window, behindWindow)",
		"snippet": "MoveWindowInFrontOf(${1:struct Window *win}, ${2:struct Window *behindWin})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Arrange the relative depth of a window. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C9.html"
	},
	{
		"displayText": "MrgCop(view)",
		"snippet": "MrgCop(${1:struct View *v})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Merge together coprocessor instructions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0303.html"
	},
	{
		"displayText": "NamedObjectName(object)",
		"snippet": "NamedObjectName(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Return the name of the object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A6.html"
	},
	{
		"displayText": "NameFromFH(fileHandle, buffer, len)",
		"snippet": "NameFromFH(${1:BPTR fh}, ${2:STRPTR buffer}, ${3:LONG len})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get the name of an open filehandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0192.html"
	},
	{
		"displayText": "NameFromLock(lock, buffer, len)",
		"snippet": "NameFromLock(${1:BPTR lock}, ${2:STRPTR buffer}, ${3:LONG len})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns the name of a locked object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0193.html"
	},
	{
		"displayText": "NewDiskObject(type)",
		"snippet": "NewDiskObject(${1:LONG type})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Create an empty icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0354.html"
	},
	{
		"displayText": "NewDTObject(name, tag1, ...)",
		"snippet": "NewDTObject(${1:APTR name}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an data type object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0111.html"
	},
	{
		"displayText": "NewDTObjectA(name, attributes)",
		"snippet": "NewDTObjectA(${1:APTR name}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an data type object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0111.html"
	},
	{
		"displayText": "NewFontContents(fontsLock, fontName)",
		"snippet": "NewFontContents(${1:BPTR fontsLock}, ${2:STRPTR fontName})${3:}",
		"type": "function",
		"leftLabel": "struct FontContentsHeader*",
		"description": "Create a FontContents image for a font. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0135.html"
	},
	{
		"displayText": "NewLayerInfo()",
		"snippet": "NewLayerInfo()",
		"type": "function",
		"leftLabel": "struct Layer_Info*",
		"description": "Allocate and Initialize full Layer_Info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042D.html"
	},
	{
		"displayText": "NewList(list)",
		"snippet": "NewList(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Prepare a list structure for use.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0047.html"
	},
	{
		"displayText": "NewLoadSeg(fileName, tags)",
		"snippet": "NewLoadSeg(${1:CONST_STRPTR fileName}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Improved version of LoadSeg for stacksizes. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0194.html"
	},
	{
		"displayText": "NewModifyProp(gadget, window, requester, flags, horizPot, vertPot, horizBody, vertBody, numGad)",
		"snippet": "NewModifyProp(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG flags}, ${5:ULONG horizPot}, ${6:ULONG vertPot}, ${7:ULONG horizBody}, ${8:ULONG vertBody}, ${9:LONG numGad})${10:}",
		"type": "function",
		"leftLabel": "void",
		"description": "ModifyProp(), but with selective refresh.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CA.html"
	},
	{
		"displayText": "NewObject(class, classID, tag1, ...)",
		"snippet": "NewObject(${1:struct IClass *cl}, ${2:CONST_STRPTR classID}, ${3:ULONG tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Create an object from a class. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CB.html"
	},
	{
		"displayText": "NewRegion()",
		"snippet": "NewRegion()",
		"type": "function",
		"leftLabel": "struct Region*",
		"description": "Get an empty region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0304.html"
	},
	{
		"displayText": "NewScaledDiskFont(sourceFont, destTextAttr)",
		"snippet": "NewScaledDiskFont(${1:struct TextFont *sourceFont}, ${2:struct TextAttr *destTextAttr})${3:}",
		"type": "function",
		"leftLabel": "struct DiskFont*",
		"description": "Create a DiskFont scaled from another. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0136.html"
	},
	{
		"displayText": "NextConductor(prevConductor)",
		"snippet": "NextConductor(${1:CONST struct Conductor *prev})${2:}",
		"type": "function",
		"leftLabel": "struct Conductor*",
		"description": "Return the next conductor on realtime.library's conductor list. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0539.html"
	},
	{
		"displayText": "NextDisplayInfo(displayID)",
		"snippet": "NextDisplayInfo(${1:ULONG displayID})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Iterate current displayinfo identifiers. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0305.html"
	},
	{
		"displayText": "NextDosEntry(dlist, flags)",
		"snippet": "NextDosEntry(${1:CONST struct DosList *dlist}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Get the next Dos List entry. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0195.html"
	},
	{
		"displayText": "NextObject(object)",
		"snippet": "NextObject(${1:APTR *obj})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Iterate through the object on an Exec list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CC.html"
	},
	{
		"displayText": "NextPubScreen(screen, namebuf)",
		"snippet": "NextPubScreen(${1:CONST struct Screen *scr}, ${2:STRPTR namebuf})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Identify next public screen in the cycle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CD.html"
	},
	{
		"displayText": "NextTagItem(tagList)",
		"snippet": "NextTagItem(${1:struct TagItem **tagList})${2:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Iterate through a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A7.html"
	},
	{
		"displayText": "ObtainBattSemaphore()",
		"snippet": "ObtainBattSemaphore()",
		"type": "function",
		"leftLabel": "void",
		"description": "Obtain access to nonvolatile ram. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0079.html"
	},
	{
		"displayText": "ObtainBestPen(colorMap, r, g, b, tag1, ...)",
		"snippet": "ObtainBestPen(${1:struct ColorMap *cm}, ${2:ULONG r}, ${3:ULONG g}, ${4:ULONG b}, ${5:ULONG tag1}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Search for the closest color match, or allocate a new one. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0306.html"
	},
	{
		"displayText": "ObtainBestPenA(colorMap, r, g, b, tags)",
		"snippet": "ObtainBestPenA(${1:struct ColorMap *cm}, ${2:ULONG r}, ${3:ULONG g}, ${4:ULONG b}, ${5:CONST struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Search for the closest color match, or allocate a new one. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0306.html"
	},
	{
		"displayText": "ObtainConfigBinding()",
		"snippet": "ObtainConfigBinding()",
		"type": "function",
		"leftLabel": "void",
		"description": "Try to get permission to bind drivers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0267.html"
	},
	{
		"displayText": "ObtainDataType(type, handle, tag1, ...)",
		"snippet": "ObtainDataType(${1:ULONG type}, ${2:APTR handle}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "struct DataType*",
		"description": "Examines a handle and return its DataType. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0112.html"
	},
	{
		"displayText": "ObtainDataTypeA(type, handle, attributes)",
		"snippet": "ObtainDataTypeA(${1:ULONG type}, ${2:APTR handle}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "struct DataType*",
		"description": "Examines a handle and return its DataType. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0112.html"
	},
	{
		"displayText": "ObtainDTDrawInfo(object, tag1, ...)",
		"snippet": "ObtainDTDrawInfo(${1:Object *obj}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Obtain a DataTypes object for drawing. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0113.html"
	},
	{
		"displayText": "ObtainDTDrawInfoA(object, attributes)",
		"snippet": "ObtainDTDrawInfoA(${1:Object *obj}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Obtain a DataTypes object for drawing. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0113.html"
	},
	{
		"displayText": "ObtainGIRPort(gInfo)",
		"snippet": "ObtainGIRPort(${1:struct GadgetInfo *gInfo})${2:}",
		"type": "function",
		"leftLabel": "struct RastPort*",
		"description": "Set up a RastPort for a custom gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CE.html"
	},
	{
		"displayText": "ObtainInfo(glyphEngine, tag1, ...)",
		"snippet": "ObtainInfo(${1:struct GlyphEngine *glyphEngine}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire tagged font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0087.html"
	},
	{
		"displayText": "ObtainInfoA(glyphEngine, tagList)",
		"snippet": "ObtainInfoA(${1:struct GlyphEngine *glyphEngine}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire tagged font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0087.html"
	},
	{
		"displayText": "ObtainPen(colorMap, index, r, g, b, flags)",
		"snippet": "ObtainPen(${1:struct ColorMap *cm}, ${2:ULONG index}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b}, ${6:LONG flags})${7:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain a free palette entry for use by your program. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0307.html"
	},
	{
		"displayText": "ObtainQuickVector(interruptCode)",
		"snippet": "ObtainQuickVector(${1:APTR interruptCode})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021C.html"
	},
	{
		"displayText": "ObtainSemaphore(sigSem)",
		"snippet": "ObtainSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Gain exclusive access to a semaphore.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021D.html"
	},
	{
		"displayText": "ObtainSemaphoreList(sigSem)",
		"snippet": "ObtainSemaphoreList(${1:struct List *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get a list of semaphores.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021E.html"
	},
	{
		"displayText": "ObtainSemaphoreShared(sigSem)",
		"snippet": "ObtainSemaphoreShared(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Gain shared access to a semaphore. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021F.html"
	},
	{
		"displayText": "OffGadget(gadget, window, requester)",
		"snippet": "OffGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Disable the specified gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CF.html"
	},
	{
		"displayText": "OffMenu(window, menuNumber)",
		"snippet": "OffMenu(${1:struct Window *win}, ${2:ULONG menuNumber})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Disable the given menu or menu item.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D0.html"
	},
	{
		"displayText": "OldOpenLibrary(libName)",
		"snippet": "OldOpenLibrary(${1:CONST_STRPTR libName})${2:}",
		"type": "function",
		"leftLabel": "struct Library*",
		"description": "Obsolete OpenLibrary.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0220.html"
	},
	{
		"displayText": "OnGadget(gadget, window, requester)",
		"snippet": "OnGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Enable the specified gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D1.html"
	},
	{
		"displayText": "OnMenu(window, menuNumber)",
		"snippet": "OnMenu(${1:struct Window *win}, ${2:ULONG menuNumber})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Enable the given menu or menu item.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D2.html"
	},
	{
		"displayText": "Open(name, accessMode)",
		"snippet": "Open(${1:CONST_STRPTR name}, ${2:LONG accessMode})${3:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Open a file for input or output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0196.html"
	},
	{
		"displayText": "OpenAmigaGuide(newAmigaGuide, tag1, ...)",
		"snippet": "OpenAmigaGuide(${1:struct NewAmigaGuide *nag}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open a synchronous AmigaGuide database.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000E.html"
	},
	{
		"displayText": "OpenAmigaGuideA(newAmigaGuide, tags)",
		"snippet": "OpenAmigaGuideA(${1:struct NewAmigaGuide *nag}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open a synchronous AmigaGuide database.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000E.html"
	},
	{
		"displayText": "OpenAmigaGuideAsync(newAmigaGuide, tag1, ...)",
		"snippet": "OpenAmigaGuideAsync(${1:struct NewAmigaGuide *nag}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open an AmigaGuide database async. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000F.html"
	},
	{
		"displayText": "OpenAmigaGuideAsyncA(newAmigaGuide, attributes)",
		"snippet": "OpenAmigaGuideAsyncA(${1:struct NewAmigaGuide *nag}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open an AmigaGuide database async. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000F.html"
	},
	{
		"displayText": "OpenCatalog(locale, name, tag1, ...)",
		"snippet": "OpenCatalog(${1:struct Locale *locale}, ${2:STRPTR name}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "struct Catalog*",
		"description": "Open a message catalog. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045B.html"
	},
	{
		"displayText": "OpenClipboard(unitNumber)",
		"snippet": "OpenClipboard(${1:LONG unitNumber})${2:}",
		"type": "function",
		"leftLabel": "struct ClipboardHandle*",
		"description": "Create a handle on a clipboard unit. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036F.html"
	},
	{
		"displayText": "OpenDevice(devName, unit, ioRequest, flags)",
		"snippet": "OpenDevice(${1:CONST_STRPTR devName}, ${2:ULONG unit}, ${3:struct IORequest *ioReq}, ${4:ULONG flags})${5:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Open the audio device.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0560.html"
	},
	{
		"displayText": "OpenDiskFont(textAttr)",
		"snippet": "OpenDiskFont(${1:struct TextAttr *attr})${2:}",
		"type": "function",
		"leftLabel": "struct TextFont*",
		"description": "Loadoad and get a pointer to a disk font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0137.html"
	},
	{
		"displayText": "OpenEngine()",
		"snippet": "OpenEngine()",
		"type": "function",
		"leftLabel": "struct GlyphEngine*",
		"description": "Acquire engine handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0088.html"
	},
	{
		"displayText": "OpenFont(textAttr)",
		"snippet": "OpenFont(${1:struct TextAttr *attr})${2:}",
		"type": "function",
		"leftLabel": "struct TextFont*",
		"description": "Get a pointer to a system font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0308.html"
	},
	{
		"displayText": "OpenFromLock(lock)",
		"snippet": "OpenFromLock(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Opens a file you have a lock on. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0197.html"
	},
	{
		"displayText": "OpenIFF(iffHandle, rwMode)",
		"snippet": "OpenIFF(${1:struct IFFHandle *iff}, ${2:LONG rwMode})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Prepare an IFFHandle to read or write a new IFF stream.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0370.html"
	},
	{
		"displayText": "OpenLayoutWindowTagList(gadget, screen, tags)",
		"snippet": "OpenLayoutWindowTagList(${1:struct Gadget *gad}, ${2:struct Screen *scr}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Open a window at a suitable size for layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0530.html"
	},
	{
		"displayText": "OpenLibrary(libName, version)",
		"snippet": "OpenLibrary(${1:CONST_STRPTR libName}, ${2:ULONG version})${3:}",
		"type": "function",
		"leftLabel": "struct Library*",
		"description": "Gain access to a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0222.html"
	},
	{
		"displayText": "OpenLocale(name)",
		"snippet": "OpenLocale(${1:STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Locale*",
		"description": "Open a locale. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045C.html"
	},
	{
		"displayText": "OpenMonitor(monitorName, displayID)",
		"snippet": "OpenMonitor(${1:CONST_STRPTR monitorName}, ${2:ULONG displayID})${3:}",
		"type": "function",
		"leftLabel": "struct MonitorSpec*",
		"description": "Open a named MonitorSpec. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0309.html"
	},
	{
		"displayText": "OpenResource(name)",
		"snippet": "OpenResource(${1:CONST_STRPTR resName})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Gain access to a resource.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0223.html"
	},
	{
		"displayText": "OpenScreen(newScreen)",
		"snippet": "OpenScreen(${1:CONST struct NewScreen *scr})${2:}",
		"type": "function",
		"leftLabel": "struct Screen*",
		"description": "Open an Intuition screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D3.html"
	},
	{
		"displayText": "OpenScreenTagList(newScreen, tagList)",
		"snippet": "OpenScreenTagList(${1:CONST struct NewScreen *scr}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct Screen*",
		"description": "OpenScreen() with TagItem extension array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D4.html"
	},
	{
		"displayText": "OpenWindow(newWindow)",
		"snippet": "OpenWindow(${1:CONST struct NewWindow *win})${2:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Open an Intuition window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D5.html"
	},
	{
		"displayText": "OpenWindowTagList(newWindow, tagList)",
		"snippet": "OpenWindowTagList(${1:CONST struct NewWindow *win}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "OpenWindow() with TagItem extension. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D6.html"
	},
	{
		"displayText": "OpenWorkBench()",
		"snippet": "OpenWorkBench()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Open the Workbench screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D7.html"
	},
	{
		"displayText": "OpenWorkbenchObject(name, ...)",
		"snippet": "OpenWorkbenchObject(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Open a drawer window or launch a program. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C1.html"
	},
	{
		"displayText": "OpenWorkbenchObjectA(name, tags)",
		"snippet": "OpenWorkbenchObjectA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Open a drawer window or launch a program. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C1.html"
	},
	{
		"displayText": "OrRectRegion(region, rectangle)",
		"snippet": "OrRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d OR operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030A.html"
	},
	{
		"displayText": "OrRegionRegion(srcRegion, destRegion)",
		"snippet": "OrRegionRegion(${1:CONST struct Region *src}, ${2:struct Region *dest})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d OR operation of two regions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030B.html"
	},
	{
		"displayText": "Output()",
		"snippet": "Output()",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Identify the programs' initial output file handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0198.html"
	},
	{
		"displayText": "OwnBlitter()",
		"snippet": "OwnBlitter()",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the blitter for private usage.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030C.html"
	},
	{
		"displayText": "OwnCard(handle)",
		"snippet": "OwnCard(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "struct CardHandle*",
		"description": "Own credit card registers, and memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009D.html"
	},
	{
		"displayText": "PackBoolTags(initialFlags, tagList, boolMap)",
		"snippet": "PackBoolTags(${1:ULONG initFlags}, ${2:CONST struct TagItem *tagList}, ${3:CONST struct TagItem *boolMap})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Builds a \"flag\" word from a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A8.html"
	},
	{
		"displayText": "PackStructureTags(pack, packTable, tagList)",
		"snippet": "PackStructureTags(${1:APTR pack}, ${2:CONST ULONG *packTable}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Pack a structure with values from taglist. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A9.html"
	},
	{
		"displayText": "PAGE_GetClass()",
		"snippet": "PAGE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the Page class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E5.html"
	},
	{
		"displayText": "PAGE_GetClass()",
		"snippet": "PAGE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the Page class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E5.html"
	},
	{
		"displayText": "PALETTE_GetClass()",
		"snippet": "PALETTE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the palette class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04EB.html"
	},
	{
		"displayText": "ParentChunk(contextNode)",
		"snippet": "ParentChunk(${1:CONST struct ContextNode *cNode})${2:}",
		"type": "function",
		"leftLabel": "struct ContextNode*",
		"description": "Get the nesting context node for the given chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0371.html"
	},
	{
		"displayText": "ParentDir(lock)",
		"snippet": "ParentDir(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Obtain the parent of a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0199.html"
	},
	{
		"displayText": "ParentOfFH(fileHandle)",
		"snippet": "ParentOfFH(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Returns a lock on the parent directory of a file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019A.html"
	},
	{
		"displayText": "ParseDate(locale, date, fmtTemplate, getCharFunc)",
		"snippet": "ParseDate(${1:struct Locale *locale}, ${2:struct DateStamp *date}, ${3:STRPTR fmtTemplate}, ${4:struct Hook *getCharFunc})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Interpret a string according to the date formatting template. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045D.html"
	},
	{
		"displayText": "ParseIFF(iffHandle, control)",
		"snippet": "ParseIFF(${1:struct IFFHandle *iff}, ${2:LONG control})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Parse an IFF file from an IFFHandle structure stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0372.html"
	},
	{
		"displayText": "ParseIX(description, ix)",
		"snippet": "ParseIX(${1:CONST_STRPTR descr}, ${2:IX *ix})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Initialize an input expression given a description string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F3.html"
	},
	{
		"displayText": "ParsePattern(pattern, buffer, buflen)",
		"snippet": "ParsePattern(${1:CONST_STRPTR pattern}, ${2:STRPTR buf}, ${3:LONG buflen})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Create a tokenized string for MatchPattern(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019B.html"
	},
	{
		"displayText": "ParsePatternNoCase(pattern, buffer, buflen)",
		"snippet": "ParsePatternNoCase(${1:CONST_STRPTR pattern}, ${2:UBYTE *buf}, ${3:LONG buflen})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Create a tokenized string for MatchPatternNoCase(). (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019C.html"
	},
	{
		"displayText": "PathPart(path)",
		"snippet": "PathPart(${1:CONST_STRPTR path})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Returns a pointer to the end of the next-to-last. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019D.html"
	},
	{
		"displayText": "PeekQualifier()",
		"snippet": "PeekQualifier()",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Get the input device's current qualifiers. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node038A.html"
	},
	{
		"displayText": "PENMAP_GetClass()",
		"snippet": "PENMAP_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the penmap class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04F9.html"
	},
	{
		"displayText": "Permit()",
		"snippet": "Permit()",
		"type": "function",
		"leftLabel": "void",
		"description": "Permit task rescheduling.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0224.html"
	},
	{
		"displayText": "PointInImage(point, image)",
		"snippet": "PointInImage(${1:ULONG point}, ${2:struct Image *img})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Tests whether an image \"contains\" a point. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D8.html"
	},
	{
		"displayText": "PolyDraw(rastPort, count, polyTable)",
		"snippet": "PolyDraw(${1:struct RastPort *rp}, ${2:LONG count}, ${3:CONST WORD *polyTable})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw lines from table of (x,y) values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030D.html"
	},
	{
		"displayText": "PopChunk(iffHandle)",
		"snippet": "PopChunk(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Pop top context node off context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0373.html"
	},
	{
		"displayText": "PrintDTObject(object, window, requester, data, ...)",
		"snippet": "PrintDTObject(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG data}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Call the DTM_PRINT method on a separate process. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0114.html"
	},
	{
		"displayText": "PrintDTObjectA(object, window, requester, message)",
		"snippet": "PrintDTObjectA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct dtPrint *msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Call the DTM_PRINT method on a separate process. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0114.html"
	},
	{
		"displayText": "printf(formatString, ...)",
		"snippet": "printf(${1:CONST_STRPTR fmt}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Print a formatted output line to the standard output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0048.html"
	},
	{
		"displayText": "PrintFault(code, header)",
		"snippet": "PrintFault(${1:LONG code}, ${2:CONST_STRPTR header})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the text associated with a DOS error code. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019E.html"
	},
	{
		"displayText": "PrintIText(rastPort, iText, left, top)",
		"snippet": "PrintIText(${1:struct RastPort *rp}, ${2:CONST struct IntuiText *iText}, ${3:LONG left}, ${4:LONG top})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print text described by the IntuiText argument.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D9.html"
	},
	{
		"displayText": "Procure(sigSem, bidMsg)",
		"snippet": "Procure(${1:struct SignalSemaphore *sigSem}, ${2:struct SemaphoreMessage *bidMsg})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Bid for a semaphore. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0225.html"
	},
	{
		"displayText": "PropChunk(iffHandle, type, id)",
		"snippet": "PropChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Specify a property chunk to store. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0374.html"
	},
	{
		"displayText": "PropChunks(iffHandle, propArray, numPairs)",
		"snippet": "PropChunks(${1:struct IFFHandle *iff}, ${2:CONST LONG *propArray}, ${3:LONG numPairs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare many property chunks at once. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0375.html"
	},
	{
		"displayText": "PubScreenStatus(screen, statusFlags)",
		"snippet": "PubScreenStatus(${1:struct Screen *scr}, ${2:ULONG statFlags})${3:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Change status flags for a public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DA.html"
	},
	{
		"displayText": "PushChunk(iffHandle, type, id, size)",
		"snippet": "PushChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG size})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Push a new context node on the context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0376.html"
	},
	{
		"displayText": "PutDefDiskObject(diskObject)",
		"snippet": "PutDefDiskObject(${1:CONST struct DiskObject *dObj})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Write disk object as the default for its type. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0355.html"
	},
	{
		"displayText": "PutDiskObject(name, diskObject)",
		"snippet": "PutDiskObject(${1:CONST STRPTR name}, ${2:CONST struct DiskObject *dObj})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Write out a DiskObject to disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0356.html"
	},
	{
		"displayText": "PutIconTagList(name, icon, tags)",
		"snippet": "PutIconTagList(${1:CONST STRPTR name}, ${2:CONST struct DiskObject *icon}, ${3:CONST struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Store an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0357.html"
	},
	{
		"displayText": "PutMsg(port, message)",
		"snippet": "PutMsg(${1:struct MsgPort *port}, ${2:struct Message *msg})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a message to a message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0226.html"
	},
	{
		"displayText": "PutStr(string)",
		"snippet": "PutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes a string the the default output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019F.html"
	},
	{
		"displayText": "QBlit(blit)",
		"snippet": "QBlit(${1:struct bltnode *blit})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Queue up a request for blitter usage.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030E.html"
	},
	{
		"displayText": "QBSBlit(blit)",
		"snippet": "QBSBlit(${1:struct bltnode *blit})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Synchronize the blitter request with the video beam.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030F.html"
	},
	{
		"displayText": "QueryKeys(queryArray, arraySize)",
		"snippet": "QueryKeys(${1:struct KeyQuery *queryArray}, ${2:ULONG arraySize})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return the states for a set of keys. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0467.html"
	},
	{
		"displayText": "QueryOverscan(displayID, rectangle, oScanType)",
		"snippet": "QueryOverscan(${1:ULONG displayID}, ${2:struct Rectangle *rect}, ${3:LONG oScanType})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Inquire about a standard overscan region. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DB.html"
	},
	{
		"displayText": "RADIOBUTTON_GetClass()",
		"snippet": "RADIOBUTTON_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the radiobutton class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051C.html"
	},
	{
		"displayText": "RadioButtons(label1, ...)",
		"snippet": "RadioButtons(${1:STRPTR label1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of radiobuttons.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0531.html"
	},
	{
		"displayText": "RadioButtonsA(labels[])",
		"snippet": "RadioButtonsA(${1:STRPTR *labels})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of radiobuttons.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0531.html"
	},
	{
		"displayText": "RangeRand(maxValue)",
		"snippet": "RangeRand(${1:ULONG maxValue})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Generate a random number within a specific integer range.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0049.html"
	},
	{
		"displayText": "RawDoFmt(formatString, dataStream, putChProc)",
		"snippet": "RawDoFmt(${1:CONST_STRPTR fmt}, ${2:CONST APTR dataStream}, ${3:void (*CONST putChProc})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Format data into a character stream.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0227.html"
	},
	{
		"displayText": "RawKeyConvert(events, buffer, length, keyMap)",
		"snippet": "RawKeyConvert(${1:CONST struct InputEvent *events}, ${2:STRPTR buffer}, ${3:LONG length}, ${4:CONST struct KeyMap *keyMap})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Decode raw input classes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0104.html"
	},
	{
		"displayText": "Read(fileHandle, buffer, length)",
		"snippet": "Read(${1:BPTR fh}, ${2:APTR buffer}, ${3:LONG length})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read bytes of data from a file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A0.html"
	},
	{
		"displayText": "ReadArgs(arg_template, array, args)",
		"snippet": "ReadArgs(${1:CONST_STRPTR arg_template}, ${2:LONG *array}, ${3:struct RDArgs *args})${4:}",
		"type": "function",
		"leftLabel": "struct RDArgs*",
		"description": "Parse the command line input. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A1.html"
	},
	{
		"displayText": "ReadBattClock()",
		"snippet": "ReadBattClock()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Read time from clock chip. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0075.html"
	},
	{
		"displayText": "ReadBattMem(buffer, offset, length)",
		"snippet": "ReadBattMem(${1:APTR buffer}, ${2:ULONG offset}, ${3:ULONG length})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Read a bitstring from nonvolatile ram. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node007A.html"
	},
	{
		"displayText": "ReadCardStatus()",
		"snippet": "ReadCardStatus()",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Read credit card status register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009E.html"
	},
	{
		"displayText": "ReadChunkBytes(iffHandle, buffer, numBytes)",
		"snippet": "ReadChunkBytes(${1:struct IFFHandle *iff}, ${2:APTR buf}, ${3:LONG numBytes})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read bytes from the current chunk into a buffer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0377.html"
	},
	{
		"displayText": "ReadChunkRecords(iffHandle, buffer, bytesPerRecord, numRecords)",
		"snippet": "ReadChunkRecords(${1:struct IFFHandle *iff}, ${2:APTR buf}, ${3:LONG bytesPerRecord}, ${4:LONG numRecords})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read record elements from the current chunk into a buffer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0378.html"
	},
	{
		"displayText": "ReadEClock(dest)",
		"snippet": "ReadEClock(${1:struct EClockVal *dest})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the current value of the E-Clock. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0578.html"
	},
	{
		"displayText": "ReadExpansionByte(board, offset)",
		"snippet": "ReadExpansionByte(${1:CONST APTR board}, ${2:ULONG offset})${3:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Read a byte nybble by nybble.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0268.html"
	},
	{
		"displayText": "ReadExpansionRom(board, configDev)",
		"snippet": "ReadExpansionRom(${1:CONST APTR board}, ${2:struct ConfigDev *configDev})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Read a boards configuration ROM space.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0269.html"
	},
	{
		"displayText": "ReadItem(name, maxchars, cSource)",
		"snippet": "ReadItem(${1:CONST_STRPTR name}, ${2:LONG maxchars}, ${3:struct CSource *cSource})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reads a single argument/name from command line. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A2.html"
	},
	{
		"displayText": "ReadJoyPort(port)",
		"snippet": "ReadJoyPort(${1:ULONG port})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Return the state of the selected joy/mouse port. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0468.html"
	},
	{
		"displayText": "ReadLink(port, lock, path, buffer, size)",
		"snippet": "ReadLink(${1:struct MsgPort *port}, ${2:BPTR lock}, ${3:CONST_STRPTR path}, ${4:STRPTR buffer}, ${5:ULONG size})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reads the path for a soft filesystem link. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A3.html"
	},
	{
		"displayText": "ReadPixel(rastPort, x, y)",
		"snippet": "ReadPixel(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Read the pen number of a pixel. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0310.html"
	},
	{
		"displayText": "ReadPixelArray8(rastPort, xStart, yStart, xStop, yStop, array, tempRP)",
		"snippet": "ReadPixelArray8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG xStop}, ${5:ULONG yStop}, ${6:UBYTE *array}, ${7:struct RastPort *tempRP})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read the pen number of a rectangular array of pixels. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0311.html"
	},
	{
		"displayText": "ReadPixelLine8(rastPort, xStart, yStart, width, array, tempRP)",
		"snippet": "ReadPixelLine8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG width}, ${5:UBYTE *array}, ${6:struct RastPort *tempRP})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read the pen number of a horizontal line of pixels. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0312.html"
	},
	{
		"displayText": "ReadUnitID(unitNum)",
		"snippet": "ReadUnitID(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reread and return the type of drive. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0131.html"
	},
	{
		"displayText": "RectFill(rastPort, xMin, yMin, xMax, yMax)",
		"snippet": "RectFill(${1:struct RastPort *rp}, ${2:LONG xMin}, ${3:LONG yMin}, ${4:LONG xMax}, ${5:LONG yMax})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Fill a rectangular region in a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0313.html"
	},
	{
		"displayText": "RefreshDTObject(object, window, requester, tag1, ...)",
		"snippet": "RefreshDTObject(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh a datatypes object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0115.html"
	},
	{
		"displayText": "RefreshDTObjectA(object, window, requester, attributes)",
		"snippet": "RefreshDTObjectA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct TagItem *attrs})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh a datatypes object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0115.html"
	},
	{
		"displayText": "RefreshGadgets(gadgets, window, requester)",
		"snippet": "RefreshGadgets(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh (redraw) the gadget display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DC.html"
	},
	{
		"displayText": "RefreshGList(gadgets, window, requester, numGad)",
		"snippet": "RefreshGList(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:LONG numGad})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh (redraw) a chosen number of gadgets.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DD.html"
	},
	{
		"displayText": "RefreshPageGadget(gadget, object, window, requester)",
		"snippet": "RefreshPageGadget(${1:struct Gadget *gad}, ${2:Object *obj}, ${3:struct Window *win}, ${4:struct Requester *req})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh gadget in a paged layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E6.html"
	},
	{
		"displayText": "RefreshTagItemClones(clone, original)",
		"snippet": "RefreshTagItemClones(${1:struct TagItem *clone}, ${2:CONST struct TagItem *orig})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Rejuvenate a clone from the original. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AA.html"
	},
	{
		"displayText": "RefreshWindowFrame(window)",
		"snippet": "RefreshWindowFrame(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to redraw your window border.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DE.html"
	},
	{
		"displayText": "Relabel(drive, newname)",
		"snippet": "Relabel(${1:CONST_STRPTR drive}, ${2:CONST_STRPTR newname})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the volume name of a volume. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A4.html"
	},
	{
		"displayText": "ReleaseBattSemaphore()",
		"snippet": "ReleaseBattSemaphore()",
		"type": "function",
		"leftLabel": "void",
		"description": "Allow nonvolatile ram to others. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node007B.html"
	},
	{
		"displayText": "ReleaseCard(handle, flags)",
		"snippet": "ReleaseCard(${1:struct CardHandle *handle}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release ownership of credit card.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009F.html"
	},
	{
		"displayText": "ReleaseConfigBinding()",
		"snippet": "ReleaseConfigBinding()",
		"type": "function",
		"leftLabel": "void",
		"description": "Allow others to bind to drivers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026A.html"
	},
	{
		"displayText": "ReleaseDataType(datatype)",
		"snippet": "ReleaseDataType(${1:struct DataType *dt})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a DataType structure. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0116.html"
	},
	{
		"displayText": "ReleaseDTDrawInfo(object, handle)",
		"snippet": "ReleaseDTDrawInfo(${1:Object *obj}, ${2:APTR handle})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a DataTypes object from drawing. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0117.html"
	},
	{
		"displayText": "ReleaseGIRPort(rastPort)",
		"snippet": "ReleaseGIRPort(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a custom gadget RastPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DF.html"
	},
	{
		"displayText": "ReleaseInfo(glyphEngine, tag1, ...)",
		"snippet": "ReleaseInfo(${1:struct GlyphEngine *glyphEngine}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Release data obtained with ObtainInfo().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0089.html"
	},
	{
		"displayText": "ReleaseInfoA(glyphEngine, tagList)",
		"snippet": "ReleaseInfoA(${1:struct GlyphEngine *ge}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Release data obtained with ObtainInfoA().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0089.html"
	},
	{
		"displayText": "ReleaseNamedObject(object)",
		"snippet": "ReleaseNamedObject(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AB.html"
	},
	{
		"displayText": "ReleasePen(colorMap, index)",
		"snippet": "ReleasePen(${1:struct ColorMap *cm}, ${2:ULONG index})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release an allocated palette entry to the free pool. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0314.html"
	},
	{
		"displayText": "ReleaseSemaphore(sigSem)",
		"snippet": "ReleaseSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make signal semaphore available to others.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0228.html"
	},
	{
		"displayText": "ReleaseSemaphoreList(sigSem)",
		"snippet": "ReleaseSemaphoreList(${1:struct List *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a list of semaphores available.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0229.html"
	},
	{
		"displayText": "RemakeDisplay()",
		"snippet": "RemakeDisplay()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remake the entire Intuition display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E0.html"
	},
	{
		"displayText": "RemAssignList(name, lock)",
		"snippet": "RemAssignList(${1:CONST_STRPTR name}, ${2:BPTR lock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove an entry from a multi-dir assign. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A5.html"
	},
	{
		"displayText": "RemConfigDev(configDev)",
		"snippet": "RemConfigDev(${1:struct ConfigDev *cDev})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a ConfigDev structure from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026B.html"
	},
	{
		"displayText": "RemDevice(device)",
		"snippet": "RemDevice(${1:struct Device *dev})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a device from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022A.html"
	},
	{
		"displayText": "RemDosEntry(dosList)",
		"snippet": "RemDosEntry(${1:struct DosList *list})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Removes a Dos List entry from it's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A6.html"
	},
	{
		"displayText": "RemFont(textFont)",
		"snippet": "RemFont(${1:struct TextFont *font})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a font from the system list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0316.html"
	},
	{
		"displayText": "RemHead(list)",
		"snippet": "RemHead(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Remove the head node from a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022B.html"
	},
	{
		"displayText": "RemIBob(bob, rastPort, viewPort)",
		"snippet": "RemIBob(${1:struct Bob *bob}, ${2:struct RastPort *rp}, ${3:struct ViewPort *vp})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Immediately remove a Bob from the gel list and the RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0317.html"
	},
	{
		"displayText": "RemICRVector(resource, iCRBit, interrupt)",
		"snippet": "RemICRVector(${1:struct Library *resource}, ${2:LONG iCRBit}, ${3:struct Interrupt *intrpt})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Detach an interrupt handler from a CIA bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CA.html"
	},
	{
		"displayText": "RemIntServer(intNumber, interrupt)",
		"snippet": "RemIntServer(${1:LONG intNumber}, ${2:struct Interrupt *intrpt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove an interrupt server from a server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022C.html"
	},
	{
		"displayText": "RemKBInt(intHandle)",
		"snippet": "RemKBInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a previously installed keyboard interrupt. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0469.html"
	},
	{
		"displayText": "RemLibrary(library)",
		"snippet": "RemLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a library from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022D.html"
	},
	{
		"displayText": "RemMemHandler(memHandler)",
		"snippet": "RemMemHandler(${1:struct Interrupt *memHandler})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove low memory handler from exec. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022E.html"
	},
	{
		"displayText": "RemNamedObject(object, message)",
		"snippet": "RemNamedObject(${1:struct NamedObject *obj}, ${2:struct Message *msg})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AC.html"
	},
	{
		"displayText": "Remove(node)",
		"snippet": "Remove(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a node from a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022F.html"
	},
	{
		"displayText": "RemoveAmigaGuideHost(key, tag1, ...)",
		"snippet": "RemoveAmigaGuideHost(${1:APTR key}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0010.html"
	},
	{
		"displayText": "RemoveAmigaGuideHostA(key, attributes)",
		"snippet": "RemoveAmigaGuideHostA(${1:APTR key}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0010.html"
	},
	{
		"displayText": "RemoveAppIcon(appIcon)",
		"snippet": "RemoveAppIcon(${1:struct AppIcon *icon})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove an icon from Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C2.html"
	},
	{
		"displayText": "RemoveAppMenuItem(appMenuItem)",
		"snippet": "RemoveAppMenuItem(${1:struct AppMenuItem *item})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove a menu item from Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C3.html"
	},
	{
		"displayText": "RemoveAppWindow(appWindow)",
		"snippet": "RemoveAppWindow(${1:struct AppWindow *win})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove a window from Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C4.html"
	},
	{
		"displayText": "RemoveAppWindowDropZone(appWindow, dropZone)",
		"snippet": "RemoveAppWindowDropZone(${1:struct AppWindow *win}, ${2:struct AppWindowDropZone *dZone})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove a drop zone from an AppWindow.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C5.html"
	},
	{
		"displayText": "RemoveClass(class)",
		"snippet": "RemoveClass(${1:struct IClass *cl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a public boopsi class unavailable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E1.html"
	},
	{
		"displayText": "RemoveCxObj(cxObject)",
		"snippet": "RemoveCxObj(${1:CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a commodity object from a list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F4.html"
	},
	{
		"displayText": "RemoveDTObject(window, object)",
		"snippet": "RemoveDTObject(${1:struct Window *win}, ${2:Object *obj})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove an object from a window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0118.html"
	},
	{
		"displayText": "RemoveGadget(window, gadget)",
		"snippet": "RemoveGadget(${1:struct Window *win}, ${2:struct Gadget *gad})${3:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Remove a gadget from a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E2.html"
	},
	{
		"displayText": "RemoveGList(window, gadget, numGad)",
		"snippet": "RemoveGList(${1:struct Window *win}, ${2:struct Gadget *gad}, ${3:LONG numGad})${4:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Remove a sublist of gadgets from a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E3.html"
	},
	{
		"displayText": "RemPort(port)",
		"snippet": "RemPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a message port from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0230.html"
	},
	{
		"displayText": "RemResource(resource)",
		"snippet": "RemResource(${1:APTR resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a resource from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0231.html"
	},
	{
		"displayText": "RemSegment(segment)",
		"snippet": "RemSegment(${1:struct Segment *seg})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Removes a resident segment from the resident list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A7.html"
	},
	{
		"displayText": "RemSemaphore(sigSem)",
		"snippet": "RemSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a signal semaphore from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0232.html"
	},
	{
		"displayText": "RemTail(list)",
		"snippet": "RemTail(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Remove the tail node from a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0233.html"
	},
	{
		"displayText": "RemTask(task)",
		"snippet": "RemTask(${1:struct Task *task})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a task from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0234.html"
	},
	{
		"displayText": "RemTimerInt(intHandle)",
		"snippet": "RemTimerInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a previously installed timer interrupt. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046A.html"
	},
	{
		"displayText": "RemTOF(isrvstr)",
		"snippet": "RemTOF(${1:struct Isrvstr *i})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a task from the VBlank interrupt server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004A.html"
	},
	{
		"displayText": "RemVBlankInt(intHandle)",
		"snippet": "RemVBlankInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a previously installed vertical blank routine.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046B.html"
	},
	{
		"displayText": "RemVSprite(vSprite)",
		"snippet": "RemVSprite(${1:struct VSprite *sprite})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a VSprite from the current gel list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0318.html"
	},
	{
		"displayText": "Rename(oldName, newName)",
		"snippet": "Rename(${1:CONST_STRPTR oldName}, ${2:CONST_STRPTR newName})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Rename a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A8.html"
	},
	{
		"displayText": "ReplyAmigaGuideMsg(amigaGuideMsg)",
		"snippet": "ReplyAmigaGuideMsg(${1:struct AmigaGuideMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Reply to an AmigaGuide message. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0011.html"
	},
	{
		"displayText": "ReplyMsg(message)",
		"snippet": "ReplyMsg(${1:struct Message *msg})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a message to its reply port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0235.html"
	},
	{
		"displayText": "ReplyPkt(dosPacket, result1, result2)",
		"snippet": "ReplyPkt(${1:struct DosPacket *packet}, ${2:LONG res1}, ${3:LONG res2})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Replies a packet to the person who sent it to you. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A9.html"
	},
	{
		"displayText": "ReportMouse(switch, window)",
		"snippet": "ReportMouse(${1:BOOL switch}, ${2:struct Window *win})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Tell Intuition whether to report mouse movement.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E4.html"
	},
	{
		"displayText": "Request(requester, window)",
		"snippet": "Request(${1:struct Requester *req}, ${2:struct Window *win})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Activate a requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E5.html"
	},
	{
		"displayText": "RequestFile(fileRequester)",
		"snippet": "RequestFile(${1:struct FileRequester *req})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Request user to select files. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005E.html"
	},
	{
		"displayText": "ResetBattClock()",
		"snippet": "ResetBattClock()",
		"type": "function",
		"leftLabel": "void",
		"description": "Reset the clock chip. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0076.html"
	},
	{
		"displayText": "ResetMenuStrip(window, menu)",
		"snippet": "ResetMenuStrip(${1:struct Window *win}, ${2:struct Menu *men})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Re-attach a menu strip to a window. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E6.html"
	},
	{
		"displayText": "RethinkDisplay()",
		"snippet": "RethinkDisplay()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Grand manipulation of the entire Intuition display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E7.html"
	},
	{
		"displayText": "RethinkLayout(gadget, window, requester, refresh)",
		"snippet": "RethinkLayout(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:LONG refresh})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Relayout and render the layout. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043D.html"
	},
	{
		"displayText": "RL_CloseResource(resourceFile)",
		"snippet": "RL_CloseResource(${1:RESOURCEFILE resfile})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close and free a resource object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053F.html"
	},
	{
		"displayText": "RL_DisposeGroup(resourceFile, object)",
		"snippet": "RL_DisposeGroup(${1:RESOURCEFILE resfile}, ${2:Object **obj})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Dispose a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0540.html"
	},
	{
		"displayText": "RL_DisposeObject(resourceFile, object)",
		"snippet": "RL_DisposeObject(${1:RESOURCEFILE resfile}, ${2:Object *obj})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Dispose an object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0541.html"
	},
	{
		"displayText": "RL_GetObjectArray(resourceFile, object, id)",
		"snippet": "RL_GetObjectArray(${1:RESOURCEFILE resfile}, ${2:Object *obj}, ${3:RESOURCEID id})${4:}",
		"type": "function",
		"leftLabel": "Object**",
		"description": "Get a pointer to a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0542.html"
	},
	{
		"displayText": "RL_NewGroup(resourceFile, id, ...)",
		"snippet": "RL_NewGroup(${1:RESOURCEFILE resfile}, ${2:RESOURCEID id}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "Object**",
		"description": "Allocate a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0543.html"
	},
	{
		"displayText": "RL_NewGroupA(resourceFile, id, tagList)",
		"snippet": "RL_NewGroupA(${1:RESOURCEFILE resfile}, ${2:RESOURCEID id}, ${3:struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "Object**",
		"description": "Allocate a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0543.html"
	},
	{
		"displayText": "RL_NewObject(resourceFile, resid, ...)",
		"snippet": "RL_NewObject(${1:RESOURCEFILE resfile}, ${2:RESOURCEID resid}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create a new object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0544.html"
	},
	{
		"displayText": "RL_NewObjectA(resourceFile, resid, tags)",
		"snippet": "RL_NewObjectA(${1:RESOURCEFILE resfile}, ${2:RESOURCEID resid}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create a new object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0544.html"
	},
	{
		"displayText": "RL_OpenResource(resourceFile, screen, catalog)",
		"snippet": "RL_OpenResource(${1:APTR resource}, ${2:struct Screen *scr}, ${3:struct Catalog *catalog})${4:}",
		"type": "function",
		"leftLabel": "RESOURCEFILE",
		"description": "Open a resource. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0545.html"
	},
	{
		"displayText": "RL_SetResourceScreen(resourceFile, screen)",
		"snippet": "RL_SetResourceScreen(${1:RESOURCEFILE resfile}, ${2:struct Screen *scr})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets or clears the screen. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0546.html"
	},
	{
		"displayText": "RouteCxMsg(cxMessage, cxObject)",
		"snippet": "RouteCxMsg(${1:CxMsg *cxm}, ${2:CxObj *co})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the next destination of a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F5.html"
	},
	{
		"displayText": "RunCommand(seg, stack, paramptr, paramlen)",
		"snippet": "RunCommand(${1:BPTR seg}, ${2:LONG stack}, ${3:CONST_STRPTR paramptr}, ${4:LONG paramlen})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Runs a program using the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AA.html"
	},
	{
		"displayText": "SameDevice(lock1, lock2)",
		"snippet": "SameDevice(${1:BPTR lock1}, ${2:BPTR lock2})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Are two locks are on partitions of the device?. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AB.html"
	},
	{
		"displayText": "SameLock(lock1, lock2)",
		"snippet": "SameLock(${1:BPTR lock1}, ${2:BPTR lock2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns whether two locks are on the same object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AC.html"
	},
	{
		"displayText": "ScalerDiv(factor, numerator, denominator)",
		"snippet": "ScalerDiv(${1:ULONG factor}, ${2:ULONG numerator}, ${3:ULONG denominator})${4:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Get the scaling result that BitMapScale would. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0319.html"
	},
	{
		"displayText": "ScreenDepth(screen, flags, reserved)",
		"snippet": "ScreenDepth(${1:struct Screen *scr}, ${2:ULONG flags}, NULL)${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Depth arrange a screen with extra control. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E8.html"
	},
	{
		"displayText": "ScreenPosition(screen, flags, x1, y1, x2, y2)",
		"snippet": "ScreenPosition(${1:struct Screen *scr}, ${2:ULONG flags}, ${3:LONG x1}, ${4:LONG y1}, ${5:LONG x2}, ${6:LONG y2})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move screens with greater control. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E9.html"
	},
	{
		"displayText": "ScreenToBack(screen)",
		"snippet": "ScreenToBack(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Send the specified screen to the back of the display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EA.html"
	},
	{
		"displayText": "ScreenToFront(screen)",
		"snippet": "ScreenToFront(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make the specified screen the frontmost.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EB.html"
	},
	{
		"displayText": "SCROLLER_GetClass()",
		"snippet": "SCROLLER_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the scroller class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0554.html"
	},
	{
		"displayText": "ScrollLayer(dummy, layer, dx, dy)",
		"snippet": "ScrollLayer(0L, ${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Scroll around in a superbitmap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042E.html"
	},
	{
		"displayText": "ScrollRaster(rastPort, dx, dy, xMin, yMin, xMax, yMax)",
		"snippet": "ScrollRaster(${1:struct RastPort *rp}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG xMin}, ${5:LONG yMin}, ${6:LONG xMax}, ${7:LONG yMax})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move bits in rectangle in raster.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031A.html"
	},
	{
		"displayText": "ScrollRasterBF(rastPort, dx, dy, xMin, yMin, xMax, yMax)",
		"snippet": "ScrollRasterBF(${1:struct RastPort *rp}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG xMin}, ${5:LONG yMin}, ${6:LONG xMax}, ${7:LONG yMax})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move bits in rectangle in raster, filling with EraseRect(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031B.html"
	},
	{
		"displayText": "ScrollVPort(viewPort)",
		"snippet": "ScrollVPort(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Reinterpret RasInfo in ViewPort to reflect the current Offset values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031C.html"
	},
	{
		"displayText": "ScrollWindowRaster(window, dx, dy, xMin, yMin, xMax, yMax)",
		"snippet": "ScrollWindowRaster(${1:struct Window *win}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG xMin}, ${5:LONG yMin}, ${6:LONG xMax}, ${7:LONG yMax})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Intuition-friendly ScrollRasterBF(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EC.html"
	},
	{
		"displayText": "SDivMod32(dividend, divisor)",
		"snippet": "SDivMod32(${1:LONG dividend}, ${2:LONG divisor})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "signed 32 by 32 bit division and modulus. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AD.html"
	},
	{
		"displayText": "Seek(fileHandle, position, offset)",
		"snippet": "Seek(${1:BPTR fh}, ${2:LONG position}, ${3:LONG offset})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the current position for reading and writing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AD.html"
	},
	{
		"displayText": "SelectInput(fileHandle)",
		"snippet": "SelectInput(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Select a filehandle as the default input channel. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AE.html"
	},
	{
		"displayText": "SelectOutput(fileHandle)",
		"snippet": "SelectOutput(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Select a filehandle as the default output channel. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AF.html"
	},
	{
		"displayText": "SendAmigaGuideCmd(handle, command, tag1, ...)",
		"snippet": "SendAmigaGuideCmd(${1:APTR handle}, ${2:STRPTR cmd}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Send a command string to AmigaGuide. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0012.html"
	},
	{
		"displayText": "SendAmigaGuideCmdA(handle, command, attributes)",
		"snippet": "SendAmigaGuideCmdA(${1:APTR handle}, ${2:STRPTR cmd}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Send a command string to AmigaGuide. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0012.html"
	},
	{
		"displayText": "SendAmigaGuideContext(handle, tag1, ...)",
		"snippet": "SendAmigaGuideContext(${1:APTR handle}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Align an AmigaGuide system on the context ID. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0013.html"
	},
	{
		"displayText": "SendAmigaGuideContextA(handle, attributes)",
		"snippet": "SendAmigaGuideContextA(${1:APTR handle}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Align an AmigaGuide system on the context ID. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0013.html"
	},
	{
		"displayText": "SendIO(ioRequest)",
		"snippet": "SendIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initiate an I/O command.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0236.html"
	},
	{
		"displayText": "SendPkt(dosPacket, port, replyPort)",
		"snippet": "SendPkt(${1:struct DosPacket *dp}, ${2:struct MsgPort *port}, ${3:struct MsgPort *replyPort})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sends a packet to a handler. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B0.html"
	},
	{
		"displayText": "SetABPenDrMd(rastPort, aPen, bPen, drawMode)",
		"snippet": "SetABPenDrMd(${1:struct RastPort *rp}, ${2:ULONG aPen}, ${3:ULONG bPen}, ${4:ULONG drawMode})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set pen colors and draw mode for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031D.html"
	},
	{
		"displayText": "SetAmigaGuideAttrs(handle, tag1, ...)",
		"snippet": "SetAmigaGuideAttrs(${1:APTR handle}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set an AmigaGuide attribute. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0014.html"
	},
	{
		"displayText": "SetAmigaGuideAttrsA(handle, attributes)",
		"snippet": "SetAmigaGuideAttrsA(${1:APTR handle}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set an AmigaGuide attribute. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0014.html"
	},
	{
		"displayText": "SetAmigaGuideContext(handle, id, tag1, ...)",
		"snippet": "SetAmigaGuideContext(${1:APTR handle}, ${2:ULONG id}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the context ID for an AmigaGuide system. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0015.html"
	},
	{
		"displayText": "SetAmigaGuideContextA(handle, id, attributes)",
		"snippet": "SetAmigaGuideContextA(${1:APTR handle}, ${2:ULONG id}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the context ID for an AmigaGuide system. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0015.html"
	},
	{
		"displayText": "SetAPen(rastPort, pen)",
		"snippet": "SetAPen(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the primary pen for a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031E.html"
	},
	{
		"displayText": "SetArgStr(string)",
		"snippet": "SetArgStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the arguments for the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B1.html"
	},
	{
		"displayText": "SetAttrs(object, tag1, ...)",
		"snippet": "SetAttrs(${1:APTR obj}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for an object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03ED.html"
	},
	{
		"displayText": "SetAttrsA(object, tagList)",
		"snippet": "SetAttrsA(${1:APTR obj}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for an object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03ED.html"
	},
	{
		"displayText": "SetBPen(rastPort, pen)",
		"snippet": "SetBPen(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set secondary pen for a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031F.html"
	},
	{
		"displayText": "SetChipRev(chipRev)",
		"snippet": "SetChipRev(${1:ULONG chipRev})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Turns on the features of a Chip Set. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0320.html"
	},
	{
		"displayText": "SetChooserNodeAttrs(node, ...)",
		"snippet": "SetChooserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C6.html"
	},
	{
		"displayText": "SetChooserNodeAttrsA(node, tags)",
		"snippet": "SetChooserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C6.html"
	},
	{
		"displayText": "SetClickTabNodeAttrs(node, ...)",
		"snippet": "SetClickTabNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D2.html"
	},
	{
		"displayText": "SetClickTabNodeAttrsA(node, tags)",
		"snippet": "SetClickTabNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D2.html"
	},
	{
		"displayText": "SetCollision(vectorNum, routine)",
		"snippet": "SetCollision(${1:ULONG vectorNum}, ${2:void (*routine})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set a pointer to a user collision routine.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0321.html"
	},
	{
		"displayText": "SetComment(name, comment)",
		"snippet": "SetComment(${1:CONST_STRPTR name}, ${2:CONST_STRPTR comment})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change a files' comment string.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B2.html"
	},
	{
		"displayText": "SetConductorState(player, state, time)",
		"snippet": "SetConductorState(${1:struct Player *player}, ${2:ULONG state}, ${3:LONG time})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the play state of a player's conductor. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053A.html"
	},
	{
		"displayText": "SetConsoleTask(task)",
		"snippet": "SetConsoleTask(${1:CONST struct MsgPort *task})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Sets the default console for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B3.html"
	},
	{
		"displayText": "SetCurrentBinding(currentBinding, bindingSize)",
		"snippet": "SetCurrentBinding(${1:struct CurrentBinding *currentBinding}, ${2:ULONG bindingSize})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sets static board configuration area.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026C.html"
	},
	{
		"displayText": "SetCurrentDirName(name)",
		"snippet": "SetCurrentDirName(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the directory name for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B4.html"
	},
	{
		"displayText": "SetCxObjPri(cxObject, priority)",
		"snippet": "SetCxObjPri(${1:CxObj *co}, ${2:LONG pri})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the priority of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F6.html"
	},
	{
		"displayText": "SetDefaultPubScreen(name)",
		"snippet": "SetDefaultPubScreen(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Choose a new default public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EE.html"
	},
	{
		"displayText": "SetDMRequest(window, requester)",
		"snippet": "SetDMRequest(${1:struct Window *win}, ${2:struct Requester *req})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the DMRequest of a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EF.html"
	},
	{
		"displayText": "SetDrMd(restPort, drawMode)",
		"snippet": "SetDrMd(${1:struct RastPort *rp}, ${2:ULONG drawMode})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set drawing mode for a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0322.html"
	},
	{
		"displayText": "SetDTAttrs(object, window, requester, tag1, ...)",
		"snippet": "SetDTAttrs(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0119.html"
	},
	{
		"displayText": "SetDTAttrsA(object, window, requester, attributes)",
		"snippet": "SetDTAttrsA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct TagItem *attrs})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0119.html"
	},
	{
		"displayText": "SetEditHook(hook)",
		"snippet": "SetEditHook(${1:struct Hook *hook})${2:}",
		"type": "function",
		"leftLabel": "struct Hook*",
		"description": "Set global processing for string gadgets. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F0.html"
	},
	{
		"displayText": "SetExcept(newSignals, signalSet)",
		"snippet": "SetExcept(${1:ULONG newSignals}, ${2:ULONG signalSet})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Define certain signals to cause exceptions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0237.html"
	},
	{
		"displayText": "SetFileDate(name, date)",
		"snippet": "SetFileDate(${1:CONST_STRPTR name}, ${2:CONST struct DateStamp *date})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the modification date for a file or dir. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B5.html"
	},
	{
		"displayText": "SetFileSize(fileHandle, pos, mode)",
		"snippet": "SetFileSize(${1:BPTR fh}, ${2:LONG pos}, ${3:LONG mode})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the size of a file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B6.html"
	},
	{
		"displayText": "SetFileSysTask(task)",
		"snippet": "SetFileSysTask(${1:CONST struct MsgPort *task})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Sets the default filesystem for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B7.html"
	},
	{
		"displayText": "SetFilter(filter, text)",
		"snippet": "SetFilter(${1:CxObj *filter}, ${2:CONST_STRPTR text})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the matching condition of a commodity filter. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F7.html"
	},
	{
		"displayText": "SetFilterIX(filter, ix)",
		"snippet": "SetFilterIX(${1:CxObj *filter}, ${2:CONST IX *ix})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the matching condition of a commodity filter. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F8.html"
	},
	{
		"displayText": "SetFont(restPort, textFont)",
		"snippet": "SetFont(${1:struct RastPort *rp}, ${2:CONST struct TextFont *font})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the text font and attributes in a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0323.html"
	},
	{
		"displayText": "SetFunction(library, funcOffset, newFunction)",
		"snippet": "SetFunction(${1:struct Library *lib}, ${2:LONG funcOffset}, ${3:APTR newFunction})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Change a function vector in a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0238.html"
	},
	{
		"displayText": "SetGadgetAttrs(gadget, window, requester, tag1, ...)",
		"snippet": "SetGadgetAttrs(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for a boopsi gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F1.html"
	},
	{
		"displayText": "SetGadgetAttrsA(gadget, window, requester, tagList)",
		"snippet": "SetGadgetAttrsA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for a boopsi gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F1.html"
	},
	{
		"displayText": "SetICR(resource, mask)",
		"snippet": "SetICR(${1:struct Library *resource}, ${2:LONG mask})${3:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Cause, clear and sample ICR interrupts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CB.html"
	},
	{
		"displayText": "SetInfo(glyphEngine, tag1, ...)",
		"snippet": "SetInfo(${1:struct GlyphEngine *ge}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008A.html"
	},
	{
		"displayText": "SetInfoA(glyphEngine, tagList)",
		"snippet": "SetInfoA(${1:struct GlyphEngine *ge}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008A.html"
	},
	{
		"displayText": "SetIntVector(intNumber, interrupt)",
		"snippet": "SetIntVector(${1:LONG intNumber}, ${2:CONST struct Interrupt *interrupt})${3:}",
		"type": "function",
		"leftLabel": "struct Interrupt*",
		"description": "Set a new handler for a system interrupt vector.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0239.html"
	},
	{
		"displayText": "SetIoErr(result)",
		"snippet": "SetIoErr(${1:LONG result})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the value returned by IoErr(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B8.html"
	},
	{
		"displayText": "SetJoyPortAttrs(portNumber, tag1, ...)",
		"snippet": "SetJoyPortAttrs(${1:ULONG portNumber}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the attributes of a port. (V40.27)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046C.html"
	},
	{
		"displayText": "SetJoyPortAttrsA(portNumber, tagList)",
		"snippet": "SetJoyPortAttrsA(${1:ULONG portNumber}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the attributes of a port. (V40.27)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046C.html"
	},
	{
		"displayText": "SetKeyMapDefault(keyMap)",
		"snippet": "SetKeyMapDefault(${1:CONST struct KeyMap *km})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the current default keymap. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0413.html"
	},
	{
		"displayText": "SetListBrowserNodeAttrs(node, ...)",
		"snippet": "SetListBrowserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044B.html"
	},
	{
		"displayText": "SetListBrowserNodeAttrsA(node, tags)",
		"snippet": "SetListBrowserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044B.html"
	},
	{
		"displayText": "SetLocalItemPurge(localItem, purgeHook)",
		"snippet": "SetLocalItemPurge(${1:struct LocalContextItem *localItem}, ${2:CONST struct Hook *purgeHook})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set purge vector for a local context item. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0379.html"
	},
	{
		"displayText": "SetMaxPen(rastPort, maxpen)",
		"snippet": "SetMaxPen(${1:struct RastPort *rp}, ${2:ULONG maxpen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set maximum pen value for a rastport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0324.html"
	},
	{
		"displayText": "SetMenuStrip(window, menu)",
		"snippet": "SetMenuStrip(${1:struct Window *win}, ${2:struct Menu *menu})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Attach a menu strip to a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F2.html"
	},
	{
		"displayText": "SetMode(fileHandle, mode)",
		"snippet": "SetMode(${1:BPTR fh}, ${2:LONG mode})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the current behavior of a handler. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B9.html"
	},
	{
		"displayText": "SetMouseQueue(window, queueLength)",
		"snippet": "SetMouseQueue(${1:struct Window *win}, ${2:ULONG queueLength})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change limit on pending mouse messages. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F3.html"
	},
	{
		"displayText": "SetNVProtection(appName, itemName, mask, killRequesters)",
		"snippet": "SetNVProtection(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:LONG mask}, ${4:LONG killRequesters})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the protection flags. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E1.html"
	},
	{
		"displayText": "SetOutlinePen(rastPort, pen)",
		"snippet": "SetOutlinePen(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set the Outline Pen value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0326.html"
	},
	{
		"displayText": "SetOwner(name, owner_info)",
		"snippet": "SetOwner(${1:CONST_STRPTR name}, ${2:LONG owner_info})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set owner information for a file or directory. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BA.html"
	},
	{
		"displayText": "SetPageGadgetAttrs(gadget, object, window, requester, ...)",
		"snippet": "SetPageGadgetAttrs(${1:struct Gadget *gad}, ${2:Object *obj}, ${3:struct Window *win}, ${4:struct Requester *req}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set gadget attributes in a paged layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E7.html"
	},
	{
		"displayText": "SetPageGadgetAttrsA(gadget, object, window, requester, tags)",
		"snippet": "SetPageGadgetAttrsA(${1:struct Gadget *gad}, ${2:Object *obj}, ${3:struct Window *win}, ${4:struct Requester *req}, ${5:struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set gadget attributes in a paged layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E7.html"
	},
	{
		"displayText": "SetPlayerAttrs(player, tag1, ...)",
		"snippet": "SetPlayerAttrs(${1:struct Player *player}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the attributes of a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053B.html"
	},
	{
		"displayText": "SetPointer(window, pointer, height, width, xOffset, yOffset)",
		"snippet": "SetPointer(${1:struct Window *win}, ${2:UWORD *pointer}, ${3:LONG height}, ${4:LONG width}, ${5:LONG xOffset}, ${6:LONG yOffset})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Specify a pointer sprite image for a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F4.html"
	},
	{
		"displayText": "SetPrefs(preferences, size, inform)",
		"snippet": "SetPrefs(${1:CONST struct Preferences *prefs}, ${2:LONG size}, ${3:LONG inform})${4:}",
		"type": "function",
		"leftLabel": "struct Preferences*",
		"description": "Set Intuition preferences data.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F5.html"
	},
	{
		"displayText": "SetProgramDir(lock)",
		"snippet": "SetProgramDir(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Sets the directory returned by GetProgramDir. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BB.html"
	},
	{
		"displayText": "SetProgramName(name)",
		"snippet": "SetProgramName(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the name of the program being run. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BC.html"
	},
	{
		"displayText": "SetPrompt(name)",
		"snippet": "SetPrompt(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the CLI/shell prompt for the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BD.html"
	},
	{
		"displayText": "SetProtection(name, protect)",
		"snippet": "SetProtection(${1:CONST_STRPTR name}, ${2:LONG protect})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set protection for a file or directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BE.html"
	},
	{
		"displayText": "SetPubScreenModes(modes)",
		"snippet": "SetPubScreenModes(${1:ULONG modes})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Establish global public screen behavior. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F6.html"
	},
	{
		"displayText": "SetRadioButtonNodeAttrs(node, ...)",
		"snippet": "SetRadioButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0520.html"
	},
	{
		"displayText": "SetRadioButtonNodeAttrsA(node, tags)",
		"snippet": "SetRadioButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0520.html"
	},
	{
		"displayText": "SetRast(rastPort, pen)",
		"snippet": "SetRast(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set an entire drawing area to a specified color.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0327.html"
	},
	{
		"displayText": "SetRexxVar(rexxmsg, name, value, length)",
		"snippet": "SetRexxVar(${1:struct RexxMsg *msg}, ${2:CONST_STRPTR name}, ${3:CONST_STRPTR value}, ${4:LONG length})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the value of a variable of a running ARexx program.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004B.html"
	},
	{
		"displayText": "SetRGB32(viewPort, colorReg, r, g, b)",
		"snippet": "SetRGB32(${1:struct ViewPort *vp}, ${2:ULONG cReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this Viewport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0328.html"
	},
	{
		"displayText": "SetRGB32CM(colorMap, colorReg, r, g, b)",
		"snippet": "SetRGB32CM(${1:struct ColorMap *cm}, ${2:ULONG cReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this ColorMap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0329.html"
	},
	{
		"displayText": "SetRGB4(viewPort, colorReg, r, g, b)",
		"snippet": "SetRGB4(${1:struct ViewPort *vp}, ${2:LONG colorReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032A.html"
	},
	{
		"displayText": "SetRGB4CM(colorMap, colorReg, r, g, b)",
		"snippet": "SetRGB4CM(${1:struct ColorMap *cm}, ${2:LONG colorReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this ColorMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032B.html"
	},
	{
		"displayText": "SetSignal(newSignals, signalSet)",
		"snippet": "SetSignal(${1:ULONG newSignals}, ${2:ULONG signalSet})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Define the state of this task's signals.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023A.html"
	},
	{
		"displayText": "SetSoftStyle(rastPort, style, enable)",
		"snippet": "SetSoftStyle(${1:struct RastPort *rp}, ${2:ULONG style}, ${3:ULONG enable})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set the soft style of the current font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032D.html"
	},
	{
		"displayText": "SetSpeedButtonNodeAttrs(node, ...)",
		"snippet": "SetSpeedButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056C.html"
	},
	{
		"displayText": "SetSpeedButtonNodeAttrsA(node, tags)",
		"snippet": "SetSpeedButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056C.html"
	},
	{
		"displayText": "SetSR(newSR, mask)",
		"snippet": "SetSR(${1:ULONG newSR}, ${2:ULONG mask})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get and/or set processor status register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023B.html"
	},
	{
		"displayText": "SetSuperAttrs(class, object, tag1, ...)",
		"snippet": "SetSuperAttrs(${1:struct IClass *cl}, ${2:Object *obj}, ${3:ULONG tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke OM_SET method on superclass with varargs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004C.html"
	},
	{
		"displayText": "SetTaskPri(task, priority)",
		"snippet": "SetTaskPri(${1:struct Task *task}, ${2:LONG priority})${3:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Get and set the priority of a task.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023C.html"
	},
	{
		"displayText": "SetTranslate(translator, events)",
		"snippet": "SetTranslate(${1:CxObj *translator}, ${2:struct InputEvent *events})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Replace a translator object's translation list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F9.html"
	},
	{
		"displayText": "SetVar(name, buffer, size, flags)",
		"snippet": "SetVar(${1:CONST_STRPTR name}, ${2:CONST_STRPTR buffer}, ${3:LONG size}, ${4:LONG flags})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets a local or environment variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BF.html"
	},
	{
		"displayText": "SetVBuf(fileHandle, buffer, type, size)",
		"snippet": "SetVBuf(${1:BPTR fh}, ${2:STRPTR buf}, ${3:LONG type}, ${4:LONG size})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set buffering modes and size. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C0.html"
	},
	{
		"displayText": "SetWindowPointer(window, tag1, ...)",
		"snippet": "SetWindowPointer(${1:struct Window *win}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Select a pointer for your window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F7.html"
	},
	{
		"displayText": "SetWindowPointerA(window, tagList)",
		"snippet": "SetWindowPointerA(${1:struct Window *win}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Select a pointer for your window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F7.html"
	},
	{
		"displayText": "SetWindowTitles(window, windowTitle, screenTitle)",
		"snippet": "SetWindowTitles(${1:struct Window *win}, ${2:CONST_STRPTR windowTitle}, ${3:CONST_STRPTR screenTitle})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the window's titles for both window and screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F8.html"
	},
	{
		"displayText": "SetWriteMask(rastPort, mask)",
		"snippet": "SetWriteMask(${1:struct RastPort *rp}, ${2:ULONG mask})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set the pixel write mask value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032E.html"
	},
	{
		"displayText": "ShowAllListBrowserChildren(list)",
		"snippet": "ShowAllListBrowserChildren(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Show all children in a ListBrowser.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044C.html"
	},
	{
		"displayText": "ShowListBrowserNodeChildren(node, depth)",
		"snippet": "ShowListBrowserNodeChildren(${1:struct Node *node}, ${2:LONG depth})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Show children of a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044D.html"
	},
	{
		"displayText": "ShowTitle(screen, showIt)",
		"snippet": "ShowTitle(${1:struct Screen *scr}, ${2:LONG showIt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the screen title bar display mode.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F9.html"
	},
	{
		"displayText": "Signal(task, signalSet)",
		"snippet": "Signal(${1:struct Task *task}, ${2:ULONG signalSet})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Signal a task.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023D.html"
	},
	{
		"displayText": "SizeLayer(dummy, layer, dx, dy)",
		"snippet": "SizeLayer(0L, ${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the size of this nonbackdrop layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042F.html"
	},
	{
		"displayText": "SizeWindow(window, dx, dy)",
		"snippet": "SizeWindow(${1:struct Window *win}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to size a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FA.html"
	},
	{
		"displayText": "SMult32(arg1, arg2)",
		"snippet": "SMult32(${1:LONG arg1}, ${2:LONG arg2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "signed 32 by 32 bit multiply with 32 bit result. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AE.html"
	},
	{
		"displayText": "SMult64(arg1, arg2)",
		"snippet": "SMult64(${1:LONG arg1}, ${2:LONG arg2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "signed 32 by 32 bit multiply with 64 bit result. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AF.html"
	},
	{
		"displayText": "SortGList(rastPort)",
		"snippet": "SortGList(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sort the current gel list, ordering its y,x coordinates.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032F.html"
	},
	{
		"displayText": "SPAbs(parm)",
		"snippet": "SPAbs(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the absolute value of the fast floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0471.html"
	},
	{
		"displayText": "SPAcos(parm)",
		"snippet": "SPAcos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the arccosine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BC.html"
	},
	{
		"displayText": "SPAdd(leftParm, rightParm)",
		"snippet": "SPAdd(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Add two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0472.html"
	},
	{
		"displayText": "SPAsin(parm)",
		"snippet": "SPAsin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the arcsine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BD.html"
	},
	{
		"displayText": "SPAtan(parm)",
		"snippet": "SPAtan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the arctangent of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BE.html"
	},
	{
		"displayText": "SPCeil(parm)",
		"snippet": "SPCeil(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Ceil function of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0473.html"
	},
	{
		"displayText": "SPCmp(leftParm, rightParm)",
		"snippet": "SPCmp(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compares two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0474.html"
	},
	{
		"displayText": "SPCos(parm)",
		"snippet": "SPCos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the cosine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BF.html"
	},
	{
		"displayText": "SPCosh(parm)",
		"snippet": "SPCosh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the hyperbolic cosine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C0.html"
	},
	{
		"displayText": "SPDiv(leftParm, rightParm)",
		"snippet": "SPDiv(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Divide two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0475.html"
	},
	{
		"displayText": "SPEEDBAR_GetClass()",
		"snippet": "SPEEDBAR_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the speedbar class. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0568.html"
	},
	{
		"displayText": "SPExp(parm)",
		"snippet": "SPExp(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the exponential (e**X) of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C1.html"
	},
	{
		"displayText": "SPFieee(parm)",
		"snippet": "SPFieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert single precision ieee to FFP number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C2.html"
	},
	{
		"displayText": "SPFix(parm)",
		"snippet": "SPFix(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert fast floating point number to integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0476.html"
	},
	{
		"displayText": "SPFloor(parm)",
		"snippet": "SPFloor(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Floor function of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0477.html"
	},
	{
		"displayText": "SPFlt(integer)",
		"snippet": "SPFlt(${1:LONG integer})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert integer number to fast floating point.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0478.html"
	},
	{
		"displayText": "SplitName(name, separator, buf, oldpos, size)",
		"snippet": "SplitName(${1:CONST_STRPTR name}, ${2:ULONG separator}, ${3:STRPTR buf}, ${4:LONG oldpos}, ${5:LONG size})${6:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Splits out a component of a pathname into a buffer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C1.html"
	},
	{
		"displayText": "SPLog(parm)",
		"snippet": "SPLog(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the natural logarithm of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C3.html"
	},
	{
		"displayText": "SPLog10(parm)",
		"snippet": "SPLog10(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the naperian logarithm(base 10) of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C4.html"
	},
	{
		"displayText": "SPMul(leftParm, rightParm)",
		"snippet": "SPMul(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Multiply two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0479.html"
	},
	{
		"displayText": "SPNeg(parm)",
		"snippet": "SPNeg(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Negate the supplied floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047A.html"
	},
	{
		"displayText": "SPPow(power, arg)",
		"snippet": "SPPow(${1:FLOAT power}, ${2:FLOAT arg})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Raise a number to a power.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C5.html"
	},
	{
		"displayText": "sprintf(buffer, formatString, ...)",
		"snippet": "sprintf(${1:CONST_STRPTR buf}, ${2:CONST_STRPTR fmt}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Format a C-like string into a string buffer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004D.html"
	},
	{
		"displayText": "SPSin(parm)",
		"snippet": "SPSin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the sine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C6.html"
	},
	{
		"displayText": "SPSincos(cosResult, parm)",
		"snippet": "SPSincos(${1:FLOAT *cosResult}, ${2:FLOAT parm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the sine and cosine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C7.html"
	},
	{
		"displayText": "SPSinh(parm)",
		"snippet": "SPSinh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the hyperbolic sine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C8.html"
	},
	{
		"displayText": "SPSqrt(parm)",
		"snippet": "SPSqrt(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the square root of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C9.html"
	},
	{
		"displayText": "SPSub(leftParm, rightParm)",
		"snippet": "SPSub(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Subtract two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047B.html"
	},
	{
		"displayText": "SPTan(parm)",
		"snippet": "SPTan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the tangent of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CA.html"
	},
	{
		"displayText": "SPTanh(parm)",
		"snippet": "SPTanh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the hyperbolic tangent of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CB.html"
	},
	{
		"displayText": "SPTieee(parm)",
		"snippet": "SPTieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert FFP number to single precision ieee.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CC.html"
	},
	{
		"displayText": "SPTst(parm)",
		"snippet": "SPTst(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compares a float against zero (0.0).",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047C.html"
	},
	{
		"displayText": "StackSwap(newStack)",
		"snippet": "StackSwap(${1:struct StackSwapStruct *newStack})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "EXEC supported method of replacing task's stack. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023E.html"
	},
	{
		"displayText": "StartNotify(notify)",
		"snippet": "StartNotify(${1:struct NotifyRequest *notify})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Starts notification on a file or directory. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C2.html"
	},
	{
		"displayText": "StartTimerInt(intHandle, timeInterval, continuous)",
		"snippet": "StartTimerInt(${1:APTR intHandle}, ${2:ULONG timeInterval}, ${3:LONG continuous})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Start the timer associated with the timer interrupt.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046D.html"
	},
	{
		"displayText": "StopChunk(iffHandle, type, id)",
		"snippet": "StopChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare a chunk which should cause ParseIFF to return. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037A.html"
	},
	{
		"displayText": "StopChunks(iffHandle, propArray, numPairs)",
		"snippet": "StopChunks(${1:struct IFFHandle *iff}, ${2:CONST LONG *propArray}, ${3:LONG numPairs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare many stop chunks at once. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037B.html"
	},
	{
		"displayText": "StopOnExit(iffHandle, type, id)",
		"snippet": "StopOnExit(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare a stop condition for exiting a chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037C.html"
	},
	{
		"displayText": "StopTimerInt(intHandle)",
		"snippet": "StopTimerInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Stop the timer associated with the timer interrupt.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046E.html"
	},
	{
		"displayText": "StoreItemInContext(iffHandle, localItem, contextNode)",
		"snippet": "StoreItemInContext(${1:struct IFFHandle *iff}, ${2:struct LocalContextItem *localItem}, ${3:struct ContextNode *contextNode})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Store local context item in given context node. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037D.html"
	},
	{
		"displayText": "StoreLocalItem(iffHandle, localItem, position)",
		"snippet": "StoreLocalItem(${1:struct IFFHandle *iff}, ${2:struct LocalContextItem *localItem}, ${3:LONG position})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Insert a local context item into the context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037E.html"
	},
	{
		"displayText": "StoreNV(appName, itemName, data, length, killRequesters)",
		"snippet": "StoreNV(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:CONST APTR data}, ${4:ULONG length}, ${5:LONG killReqs})${6:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Store data in nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E2.html"
	},
	{
		"displayText": "StrConvert(locale, string, buffer, bufferSize, type)",
		"snippet": "StrConvert(${1:struct Locale *locale}, ${2:STRPTR str}, ${3:APTR buf}, ${4:ULONG bufSize}, ${5:ULONG type})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Transform a string according to collation information.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045E.html"
	},
	{
		"displayText": "STRING_GetClass()",
		"snippet": "STRING_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the string class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056F.html"
	},
	{
		"displayText": "Stricmp(string1, string2)",
		"snippet": "Stricmp(${1:CONST_STRPTR str1}, ${2:CONST_STRPTR str2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Case-insensitive string comparison. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B0.html"
	},
	{
		"displayText": "StripFont(font)",
		"snippet": "StripFont(${1:struct TextFont *font})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove the tf_Extension from a font. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0330.html"
	},
	{
		"displayText": "StrnCmp(locale, string1, string2, length, type)",
		"snippet": "StrnCmp(${1:struct Locale *locale}, ${2:STRPTR str1}, ${3:STRPTR str2}, ${4:LONG length}, ${5:ULONG type})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Loadocalized string comparison. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045F.html"
	},
	{
		"displayText": "Strnicmp(string1, string2, length)",
		"snippet": "Strnicmp(${1:CONST_STRPTR str1}, ${2:CONST_STRPTR str2}, ${3:LONG length})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Length-limited case-insensitive string compare. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B1.html"
	},
	{
		"displayText": "StrToDate(datetime)",
		"snippet": "StrToDate(${1:struct DateTime *datetime})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Converts a string to a DateStamp. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C3.html"
	},
	{
		"displayText": "StrToLong(string, value)",
		"snippet": "StrToLong(${1:CONST_STRPTR str}, ${2:LONG *value})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "String to long value  (decimal). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C4.html"
	},
	{
		"displayText": "SubTime(destination, source)",
		"snippet": "SubTime(${1:struct timeval *dest}, ${2:CONST struct timeval *src})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Subtract one time request from another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0579.html"
	},
	{
		"displayText": "SumKickData()",
		"snippet": "SumKickData()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Compute the checksum for the Kickstart delta list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023F.html"
	},
	{
		"displayText": "SumLibrary(library)",
		"snippet": "SumLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Compute and check the checksum on a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0240.html"
	},
	{
		"displayText": "SuperState()",
		"snippet": "SuperState()",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Bnter supervisor state with user stack.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0241.html"
	},
	{
		"displayText": "Supervisor(userFunction)",
		"snippet": "Supervisor(${1:ULONG (*CONST userFunction})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Trap to a short supervisor mode function.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0242.html"
	},
	{
		"displayText": "SwapBitsRastPortClipRect(rastPort, clipRect)",
		"snippet": "SwapBitsRastPortClipRect(${1:struct RastPort *rp}, ${2:struct ClipRect *cr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Swap bits between common bitmap and obscured ClipRect.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0430.html"
	},
	{
		"displayText": "SyncSBitMap(layer)",
		"snippet": "SyncSBitMap(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Syncronize Super BitMap with whatever is in the standard Layer bounds.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0331.html"
	},
	{
		"displayText": "SysReqHandler(window, idcmp, waitInput)",
		"snippet": "SysReqHandler(${1:struct Window *win}, ${2:ULONG *idcmp}, ${3:LONG waitInput})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Handle system requester input. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FB.html"
	},
	{
		"displayText": "SystemControl(tag1, ...)",
		"snippet": "SystemControl(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Method for selectively disabling OS features. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046F.html"
	},
	{
		"displayText": "SystemControlA(tagList)",
		"snippet": "SystemControlA(${1:CONST struct TagItem *tagList})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Method for selectively disabling OS features. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046F.html"
	},
	{
		"displayText": "SystemTagList(command, tags)",
		"snippet": "SystemTagList(${1:CONST_STRPTR command}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Have a shell execute a command line. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C5.html"
	},
	{
		"displayText": "TagInArray(tagValue, tagArray)",
		"snippet": "TagInArray(${1:Tag tagValue}, ${2:CONST Tag *tagArray})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Check if a tag value appears in an array of tag values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B2.html"
	},
	{
		"displayText": "Text(rastPort, string, count)",
		"snippet": "Text(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:ULONG count})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write text characters (no formatting).",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0332.html"
	},
	{
		"displayText": "TextExtent(rastPort, string, count, textExtent)",
		"snippet": "TextExtent(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:LONG count}, ${4:struct TextExtent *te})${5:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Determine raster extent of text data. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0333.html"
	},
	{
		"displayText": "TextFit(rastPort, string, strLen, textExtent, constrainingExtent, strDirection, constrainingBitWidth, constrainingBitHeight)",
		"snippet": "TextFit(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:ULONG strLen}, ${4:CONST struct TextExtent *te}, ${5:CONST struct TextExtent *constExt}, ${6:LONG strDirection}, ${7:ULONG constBitWidth}, ${8:ULONG constBitHeight})${9:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Count characters that will fit in a given extent. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0334.html"
	},
	{
		"displayText": "TextLength(rastPort, string, count)",
		"snippet": "TextLength(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:ULONG count})${4:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Determine raster length of text data.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0335.html"
	},
	{
		"displayText": "ThinLayerInfo(layerInfo)",
		"snippet": "ThinLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert 1.1 LayerInfo to 1.0 LayerInfo.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0431.html"
	},
	{
		"displayText": "TimedDisplayAlert(alertNumber, string, height, time)",
		"snippet": "TimedDisplayAlert(${1:ULONG alertNum}, ${2:CONST_STRPTR str}, ${3:ULONG height}, ${4:ULONG time})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Display an alert with automatic time-out. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FC.html"
	},
	{
		"displayText": "TimeDelay(unit, seconds, microceconds)",
		"snippet": "TimeDelay(${1:LONG unit}, ${2:ULONG secs}, ${3:ULONG microsecs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return after a period of time has elapsed.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004F.html"
	},
	{
		"displayText": "ToLower(character)",
		"snippet": "ToLower(${1:ULONG ch})${2:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Convert a character to lower case. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B3.html"
	},
	{
		"displayText": "ToUpper(character)",
		"snippet": "ToUpper(${1:ULONG ch})${2:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Convert a character to upper case. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B4.html"
	},
	{
		"displayText": "Translate(inputString, inputLength, outputBuffer, bufferSize)",
		"snippet": "Translate(${1:CONST_STRPTR inputStr}, ${2:LONG inputLen}, ${3:STRPTR outputBuf}, ${4:LONG bufSize})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert an English string into narrator device phonemes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0591.html"
	},
	{
		"displayText": "TypeOfMem(address)",
		"snippet": "TypeOfMem(${1:CONST APTR address})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Determine attributes of a given memory address.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0243.html"
	},
	{
		"displayText": "UDivMod32(dividend, divisor)",
		"snippet": "UDivMod32(${1:ULONG dividend}, ${2:ULONG divisor})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "unsigned 32 by 32 bit division and modulus. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B5.html"
	},
	{
		"displayText": "UMult32(arg1, arg2)",
		"snippet": "UMult32(${1:ULONG arg1}, ${2:ULONG arg2})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "unsigned 32 by 32 bit multiply with 32 bit result. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B6.html"
	},
	{
		"displayText": "UMult64(arg1, arg2)",
		"snippet": "UMult64(${1:ULONG arg1}, ${2:ULONG arg2})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "unsigned 32 by 32 bit multiply with 64 bit result. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B7.html"
	},
	{
		"displayText": "UnGetC(fileHandle, character)",
		"snippet": "UnGetC(${1:BPTR fh}, ${2:LONG ch})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Makes a char available for reading again.  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C6.html"
	},
	{
		"displayText": "UnLoadSeg(seglist)",
		"snippet": "UnLoadSeg(${1:BPTR seglist})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unload a seglist previously loaded by LoadSeg().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C7.html"
	},
	{
		"displayText": "UnLock(lock)",
		"snippet": "UnLock(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C8.html"
	},
	{
		"displayText": "UnlockAmigaGuideBase(key)",
		"snippet": "UnlockAmigaGuideBase(${1:LONG key})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock an AmigaGuide client. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0016.html"
	},
	{
		"displayText": "UnLockDosList(flags)",
		"snippet": "UnLockDosList(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlocks the Dos List. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C9.html"
	},
	{
		"displayText": "UnlockIBase(ibLock)",
		"snippet": "UnlockIBase(${1:ULONG ibLock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Surrender an Intuition lock gotten by LockIBase().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FD.html"
	},
	{
		"displayText": "UnlockLayer(layer)",
		"snippet": "UnlockLayer(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock layer and allow graphics routines to use it.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0432.html"
	},
	{
		"displayText": "UnlockLayerInfo(layerInfo)",
		"snippet": "UnlockLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock the LayerInfo structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0433.html"
	},
	{
		"displayText": "UnlockLayerRom(layer)",
		"snippet": "UnlockLayerRom(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock Layer structure by ROM(gfx lib) code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0336.html"
	},
	{
		"displayText": "UnlockLayers(layerInfo)",
		"snippet": "UnlockLayers(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock all layers from graphics output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0434.html"
	},
	{
		"displayText": "UnlockPubScreen(name, screen)",
		"snippet": "UnlockPubScreen(${1:CONST_STRPTR name}, ${2:struct Screen *scr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release lock on a public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FE.html"
	},
	{
		"displayText": "UnlockPubScreenList()",
		"snippet": "UnlockPubScreenList()",
		"type": "function",
		"leftLabel": "void",
		"description": "Release public screen list semaphore. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FF.html"
	},
	{
		"displayText": "UnlockRealTime(lock)",
		"snippet": "UnlockRealTime(${1:APTR lock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock internal lists. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053C.html"
	},
	{
		"displayText": "UnLockRecord(fileHandle, offset, length)",
		"snippet": "UnLockRecord(${1:BPTR fh}, ${2:ULONG offset}, ${3:ULONG length})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Unlock a record. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CA.html"
	},
	{
		"displayText": "UnLockRecords(recArray)",
		"snippet": "UnLockRecords(${1:struct RecordLock *recArray})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Unlock a list of records. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CB.html"
	},
	{
		"displayText": "UnlockRexxBase(resource)",
		"snippet": "UnlockRexxBase(${1:ULONG resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a semaphore lock on the RexxBase structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0551.html"
	},
	{
		"displayText": "UnpackStructureTags(pack, packTable, tagList)",
		"snippet": "UnpackStructureTags(${1:CONST APTR pack}, ${2:CONST ULONG *packTable}, ${3:struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Unpack a structure to values in taglist. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B8.html"
	},
	{
		"displayText": "UpfrontLayer(dummy, layer)",
		"snippet": "UpfrontLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Put layer in front of all other layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0435.html"
	},
	{
		"displayText": "UserState(sysStack)",
		"snippet": "UserState(${1:APTR sysStack})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return to user state with user stack.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0244.html"
	},
	{
		"displayText": "Vacate(sigSem, bidMsg)",
		"snippet": "Vacate(${1:struct SignalSemaphore *sigSem}, ${2:struct SemaphoreMessage *bidMsg})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a bidMessage from Procure(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0245.html"
	},
	{
		"displayText": "VBeamPos()",
		"snippet": "VBeamPos()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get vertical beam position at this instant.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0337.html"
	},
	{
		"displayText": "VFPrintf(fileHandle, formatString, args)",
		"snippet": "VFPrintf(${1:BPTR fh}, ${2:CONST_STRPTR fmt}, ${3:CONST APTR args})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Format and print a string to a file  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CC.html"
	},
	{
		"displayText": "VFWritef(fileHandle, formatString, args)",
		"snippet": "VFWritef(${1:BPTR fh}, ${2:CONST_STRPTR fmt}, ${3:CONST LONG *args})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write a BCPL formatted string to a file  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CD.html"
	},
	{
		"displayText": "VideoControl(colorMap, tags)",
		"snippet": "VideoControl(${1:struct ColorMap *cm}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Modify the operation of a ViewPort's ColorMap. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0338.html"
	},
	{
		"displayText": "ViewAddress()",
		"snippet": "ViewAddress()",
		"type": "function",
		"leftLabel": "struct View*",
		"description": "Return the address of the Intuition View structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0400.html"
	},
	{
		"displayText": "ViewPortAddress(window)",
		"snippet": "ViewPortAddress(${1:CONST struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "struct ViewPort*",
		"description": "Return the address of a window's viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0401.html"
	},
	{
		"displayText": "VPrintf(formatString, args)",
		"snippet": "VPrintf(${1:CONST_STRPTR fmt}, ${2:CONST APTR args})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Format and print string  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CE.html"
	},
	{
		"displayText": "Wait(signalSet)",
		"snippet": "Wait(${1:ULONG signalSet})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Wait for one or more signals.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0246.html"
	},
	{
		"displayText": "WaitBlit()",
		"snippet": "WaitBlit()",
		"type": "function",
		"leftLabel": "void",
		"description": "Wait for the blitter to be finished before proceeding.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0339.html"
	},
	{
		"displayText": "WaitBOVP(viewPort)",
		"snippet": "WaitBOVP(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Wait till vertical beam reached bottom of this viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033A.html"
	},
	{
		"displayText": "WaitForChar(fileHandle, timeout)",
		"snippet": "WaitForChar(${1:BPTR fh}, ${2:LONG timeout})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Determine if chars arrive within a time limit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CF.html"
	},
	{
		"displayText": "WaitIO(ioRequest)",
		"snippet": "WaitIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Wait for completion of an I/O request.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0247.html"
	},
	{
		"displayText": "WaitPkt()",
		"snippet": "WaitPkt()",
		"type": "function",
		"leftLabel": "struct DosPacket*",
		"description": "Waits for a packet to arrive at your pr_MsgPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D0.html"
	},
	{
		"displayText": "WaitPort(port)",
		"snippet": "WaitPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "struct Message*",
		"description": "Wait for a given port to be non-empty.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0248.html"
	},
	{
		"displayText": "WaitTOF()",
		"snippet": "WaitTOF()",
		"type": "function",
		"leftLabel": "void",
		"description": "Wait for the top of the next video frame.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033B.html"
	},
	{
		"displayText": "WBenchToBack()",
		"snippet": "WBenchToBack()",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Send the Workbench screen in back of all screens.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0402.html"
	},
	{
		"displayText": "WBenchToFront()",
		"snippet": "WBenchToFront()",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Bring the Workbench screen in front of all screens.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0403.html"
	},
	{
		"displayText": "WBInfo(lock, name, screen)",
		"snippet": "WBInfo(${1:BPTR lock}, ${2:STRPTR name}, ${3:struct Screen *scr})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Bring up the Information requester. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C6.html"
	},
	{
		"displayText": "WhichLayer(layerInfo, x, y)",
		"snippet": "WhichLayer(${1:struct Layer_Info *li}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Return the topmost Layer in a coordinate.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0436.html"
	},
	{
		"displayText": "WindowLimits(window, widthMin, heightMin, widthMax, heightMax)",
		"snippet": "WindowLimits(${1:struct Window *win}, ${2:LONG widthMin}, ${3:LONG heightMin}, ${4:ULONG widthMax}, ${5:ULONG heightMax})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the minimum and maximum limits of a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0404.html"
	},
	{
		"displayText": "WindowToBack(window)",
		"snippet": "WindowToBack(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to send a window behind others.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0405.html"
	},
	{
		"displayText": "WindowToFront(window)",
		"snippet": "WindowToFront(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to bring a window to the front.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0406.html"
	},
	{
		"displayText": "WorkbenchControl(name, ...)",
		"snippet": "WorkbenchControl(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query or modify Workbench and icon options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C7.html"
	},
	{
		"displayText": "WorkbenchControlA(name, tags)",
		"snippet": "WorkbenchControlA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query or modify Workbench and icon options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C7.html"
	},
	{
		"displayText": "Write(fileHandle, buffer, length)",
		"snippet": "Write(${1:BPTR fh}, ${2:CONST APTR buffer}, ${3:LONG length})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write bytes of data to a file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D1.html"
	},
	{
		"displayText": "WriteBattClock(time)",
		"snippet": "WriteBattClock(${1:ULONG time})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the time on the clock chip. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0077.html"
	},
	{
		"displayText": "WriteBattMem(buffer, offset, length)",
		"snippet": "WriteBattMem(${1:CONST APTR buf}, ${2:ULONG offset}, ${3:ULONG length})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Write a bitstring to nonvolatile ram. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node007C.html"
	},
	{
		"displayText": "WriteChars(buffer, length)",
		"snippet": "WriteChars(${1:CONST_STRPTR buf}, ${2:ULONG buflen})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes bytes to the the default output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D2.html"
	},
	{
		"displayText": "WriteChunkBytes(iffHandle, buffer, numBytes)",
		"snippet": "WriteChunkBytes(${1:struct IFFHandle *iff}, ${2:CONST APTR buf}, ${3:LONG numBytes})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write data from a buffer into the current chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037F.html"
	},
	{
		"displayText": "WriteChunkRecords(iffHandle, buffer, bytesPerRecord, numRecords)",
		"snippet": "WriteChunkRecords(${1:struct IFFHandle *iff}, ${2:CONST APTR buf}, ${3:LONG bytesPerRec}, ${4:LONG numRecs})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write records from a buffer to the current chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0380.html"
	},
	{
		"displayText": "WriteChunkyPixels(rastPort, xStart, yStart, xStop, yStop, array, bytesPerRow)",
		"snippet": "WriteChunkyPixels(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG xStop}, ${5:ULONG yStop}, ${6:CONST UBYTE *array}, ${7:LONG bytesPerRow})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write the pen number of a rectangular array of pixels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033C.html"
	},
	{
		"displayText": "WriteExpansionByte(board, offset, byte)",
		"snippet": "WriteExpansionByte(${1:APTR board}, ${2:ULONG offset}, ${3:ULONG byte})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write a byte nybble by nybble.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026D.html"
	},
	{
		"displayText": "WritePixel(rastPort, x, y)",
		"snippet": "WritePixel(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the pen num of one specific pixel.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033D.html"
	},
	{
		"displayText": "WritePixelArray8(rastPort, xStart, yStart, xStop, yStop, array, tempRP)",
		"snippet": "WritePixelArray8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG xStop}, ${5:ULONG yStop}, ${6:UBYTE *array}, ${7:struct RastPort *tempRP})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write the pen number of a rectangular array of pixels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033E.html"
	},
	{
		"displayText": "WritePixelLine8(rastPort, xStart, yStart, width, array, tempRP)",
		"snippet": "WritePixelLine8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG width}, ${5:UBYTE *array}, ${6:struct RastPort *tempRP})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write the pen number of a horizontal line of pixels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033F.html"
	},
	{
		"displayText": "WritePotgo(word, mask)",
		"snippet": "WritePotgo(${1:ULONG word}, ${2:ULONG mask})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write to the hardware potgo register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0501.html"
	},
	{
		"displayText": "XorRectRegion(region, rectangle)",
		"snippet": "XorRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d XOR operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0340.html"
	},
	{
		"displayText": "XorRegionRegion(srcRegion, destRegion)",
		"snippet": "XorRegionRegion(${1:CONST struct Region *src}, ${2:struct Region *dest})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d XOR operation of two regions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0341.html"
	},
	{
		"displayText": "ZipWindow(window)",
		"snippet": "ZipWindow(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change window to \"alternate\" position and dimensions. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0407.html"
	}
	,
	{
		"displayText": "MUI_AddClipping(mri, left, top, width, height)",
		"snippet": "MUI_AddClipping(${1:struct MUI_RenderInfo *mri}, ${2:WORD left}, ${3:WORD top}, ${4:WORD width}, ${5:WORD height})${6:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Create and add a clip region to objects \"render info\".",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_AddClipRegion(mri, r)",
		"snippet": "MUI_AddClipRegion(${1:struct MUI_RenderInfo *mri}, ${2:struct Region *r})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Add a clip region to objects \"render info\" and return a clip handle.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_AllocAslRequest(reqType, tagList)",
		"snippet": "MUI_AllocAslRequest(${1:unsigned long reqType}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate an ASL requester.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_AllocAslRequest&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_AllocAslRequestTags(reqType, tag1, ...)",
		"snippet": "MUI_AllocAslRequestTags(${1:unsigned long reqType}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate an ASL requester (with varArgs).",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_AllocAslRequest&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_AslRequest(requester, tagList)",
		"snippet": "MUI_AslRequest(${1:APTR requester}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Get input from user using an ASL requester.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_AslRequest&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_AslRequestTags(requester, tag1, ...)",
		"snippet": "MUI_AslRequestTags(${1:APTR requester}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Get input from user using an ASL requester.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_AslRequest&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_BeginRefresh(mri, flags)",
		"snippet": "MUI_BeginRefresh(${1:struct MUI_RenderInfo *mri}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Prepare the object for a redraw.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_CreateCustomClass(base, supername, supermcc, datasize, dispatcher)",
		"snippet": "MUI_CreateCustomClass(${1:struct Library *base}, ${2:char *supername}, ${3:struct MUI_CustomClass *supermcc}, ${4:int datasize}, ${5:APTR dispatcher})${6:}",
		"type": "function",
		"leftLabel": "struct MUI_CustomClass*",
		"description": "Create a public/private custom class.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_CreateCustomClass&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_DeleteCustomClass(mcc)",
		"snippet": "MUI_DeleteCustomClass(${1:struct MUI_CustomClass *mcc})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Delete a public/private custom class.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_DeleteCustomClass&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_DisposeObject(obj)",
		"snippet": "MUI_DisposeObject(${1:Object *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a MUI object.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_DisposeObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_EndRefresh(mri, flags)",
		"snippet": "MUI_EndRefresh(${1:struct MUI_RenderInfo *mri}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Terminate MUI_BeginRefresh() state.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_Error()",
		"snippet": "MUI_Error()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return extra information from the MUI system.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_Error&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_FreeAslRequest(requester)",
		"snippet": "MUI_FreeAslRequest(${1:APTR requester})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free resources allocated by MUI_AllocAslRequest().",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_FreeAslRequest&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_FreeClass(classptr)",
		"snippet": "MUI_FreeClass(${1:struct IClass *classptr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free class.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_FreeClass&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_GetClass(classname)",
		"snippet": "MUI_GetClass(${1:char *classname})${2:}",
		"type": "function",
		"leftLabel": "struct IClass*",
		"description": "Get a pointer to a MUI class.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_GetClass&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_Layout(obj, left, top, width, height, flags)",
		"snippet": "MUI_Layout(${1:Object *obj}, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height}, ${6:ULONG flags})${7:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_MakeObject(type, ...)",
		"snippet": "MUI_MakeObject(${1:LONG type}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an object from the builtin object collection.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_MakeObjectA&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_MakeObjectA(type, params)",
		"snippet": "MUI_MakeObjectA(${1:LONG type}, ${2:ULONG *params})${3:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an object from the builtin object collection.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_MakeObjectA&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_NewObject(classname, tag1, ...)",
		"snippet": "MUI_NewObject(${1:char *classname}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an object from a class.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_NewObjectA&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_NewObjectA(classname, tags)",
		"snippet": "MUI_NewObjectA(${1:char *classname}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an object from a class.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_NewObjectA&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_ObtainPen(mri, spec, flags)",
		"snippet": "MUI_ObtainPen(${1:struct MUI_RenderInfo *mri}, ${2:struct MUI_PenSpec *spec}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Obtain a drawing pen.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_ObtainPen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_Redraw(obj, flags)",
		"snippet": "MUI_Redraw(${1:Object *obj}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make object redraw itself.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_RejectIDCMP(obj, flags)",
		"snippet": "MUI_RejectIDCMP(${1:Object *obj}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Reject previously requested input events.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_RejectIDCMP&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_ReleasePen(mri, pen)",
		"snippet": "MUI_ReleasePen(${1:struct MUI_RenderInfo *mri}, ${2:LONG pen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a drawing pen.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_ReleasePen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_RemoveClipping(mri, handle)",
		"snippet": "MUI_RemoveClipping(${1:struct MUI_RenderInfo *mri}, ${2:APTR handle})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a clip region from objects \"render info\".",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_RemoveClipRegion(mri, handle)",
		"snippet": "MUI_RemoveClipRegion(${1:struct MUI_RenderInfo *mri}, ${2:APTR handle})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a clip region from objects \"render info\".",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_Request(app, win, flags, title, gadgets, format, ...)",
		"snippet": "MUI_Request(${1:APTR app}, ${2:APTR win}, ${3:LONGBITS flags}, ${4:char *title}, ${5:char *gadgets}, ${6:char *format}, ${7:...})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Pop up a MUI requester.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_RequestA(app, win, flags, title, gadgets, format, params)",
		"snippet": "MUI_RequestA(${1:APTR app}, ${2:APTR win}, ${3:LONGBITS flags}, ${4:char *title}, ${5:char *gadgets}, ${6:char *format}, ${7:APTR params})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Pop up a MUI requester.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUI_RequestIDCMP(obj, flags)",
		"snippet": "MUI_RequestIDCMP(${1:Object *obj}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Request input events for your custom class.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_RequestIDCMP&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_SetError(num)",
		"snippet": "MUI_SetError(${1:LONG num})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set an error value.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_SetError&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_AboutMUI(refwindow)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_AboutMUI, ${2:Object *refwindow})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Show the MUI about window. (V14)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_AboutMUI&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_AddInputHandler(ihnode)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_AddInputHandler, ${2:struct MUI_InputHandlerNode *ihnode})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add a new \"input handler\" to handle signals. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_AddInputHandl&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_CheckRefresh()",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_CheckRefresh)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Check all open windows and refresh them if necessary. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_CheckRefresh&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_GetMenuCheck(menuID)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_GetMenuCheck, ${2:ULONG menuID})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get the selection status of a checkmark menu item. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_GetMenuCheck&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_GetMenuState(menuID)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_GetMenuState, ${2:ULONG menuID})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Ask whether a menu item is enabled or disabled. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_GetMenuState&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_Input(signal)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_Input, ${2:LONGBITS *signal})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Allocate signals and interpret return values. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_Input&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_InputBuffered()",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_InputBuffered)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Evaluate GUI related signals, buffer the rest. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_InputBuffered&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_Load(name)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_Load, ${2:STRPTR name})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Load GUI settings of the application. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_Load&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_NewInput(signal)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_NewInput, ${2:LONGBITS *signal})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Allocate signals and interpret return values. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_NewInput&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_OpenConfigWindow(flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_OpenConfigWindow, ${2:ULONG flags})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Open the MUI preferences window. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_OpenConfigWin&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_PushMethod(dest, count, ...)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_PushMethod, ${2:Object *dest}, ${3:LONG count}, ${4:...})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Call a method on a task remotely from another task. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_PushMethod&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_RemInputHandler(ihnode)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_RemInputHandler, ${2:struct MUI_InputHandlerNode *ihnode})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove an input handler. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_RemInputHandl&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_ReturnID(retid)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_ReturnID, ${2:ULONG retid})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Return the given id at the next call to MUIM_Application_Input. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_ReturnID&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_Save(name)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_Save, ${2:STRPTR name})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Save the GUI settings of the application. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_Save&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_SetConfigItem(item, data)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_SetConfigItem, ${2:ULONG item}, ${3:APTR data})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Private method, only for PSI. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_SetConfigItem&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_SetMenuCheck(menuID, stat)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_SetMenuCheck, ${2:ULONG menuID}, ${3:LONG stat})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set or clear a checkmark menu item. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_SetMenuCheck&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_SetMenuState(menuID, stat)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_SetMenuState, ${2:ULONG menuID}, ${3:LONG stat})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Enable or disable a menu item. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_SetMenuState&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Application_ShowHelp(window, name, node, line)",
		"snippet": "DoMethod(${1:obj}, MUIM_Application_ShowHelp, ${2:Object *window}, ${3:char *name}, ${4:char *node}, ${5:LONG line})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Show an AmigaGuide help file. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Application_ShowHelp&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_AskMinMax(MinMaxInfo)",
		"snippet": "DoMethod(${1:obj}, MUIM_AskMinMax, ${2:struct MUI_MinMax *MinMaxInfo})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "To evaluate the min, max and default sizes for your objects. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_AskMinMax&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_CallHook(Hook, param1, ...)",
		"snippet": "DoMethod(${1:obj}, MUIM_CallHook, ${2:struct Hook *Hook}, ${3:ULONG param1}, ${4:...})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Call a standard amiga callback hook. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_CallHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Cleanup()",
		"snippet": "DoMethod(${1:obj}, MUIM_Cleanup)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "To deallocate the resources allocated by MUIM_Setup. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Cleanup&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_ContextMenuBuild(mouseX, mouseY)",
		"snippet": "DoMethod(${1:obj}, MUIM_ContextMenuBuild, ${2:LONG mouseX}, ${3:LONG mouseY})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "To return a menustrip object on context. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_ContextMenuBuild&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_ContextMenuChoice(item)",
		"snippet": "DoMethod(${1:obj}, MUIM_ContextMenuChoice, ${2:Object *item})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Returns the selected context menu item. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_ContextMenuChoice&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_CreateBubble(x, y, txt, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_CreateBubble, ${2:LONG x}, ${3:LONG y}, ${4:char *txt}, ${5:ULONG flags})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Creates a bubble at the specified coordinates. (V18)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_CreateBubble&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_CreateShortHelp(mouseX, mouseY)",
		"snippet": "DoMethod(${1:obj}, MUIM_CreateShortHelp, ${2:LONG mouseX}, ${3:LONG mouseY})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Creates a short help text for bubbles. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_CreateShortHelp&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dataspace_Add(data, len, id)",
		"snippet": "DoMethod(${1:obj}, MUIM_Dataspace_Add, ${2:APTR data}, ${3:LONG len}, ${4:ULONG id})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add a new entry to the dataspace of the object. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dataspace_Add&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dataspace_Clear()",
		"snippet": "DoMethod(${1:obj}, MUIM_Dataspace_Clear)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Clear the contents of the dataspace of the object. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dataspace_Clear&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dataspace_Find(id)",
		"snippet": "DoMethod(${1:obj}, MUIM_Dataspace_Find, ${2:ULONG id})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Find an entry in the dataspace of the object. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dataspace_Find&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dataspace_Merge(dataspace)",
		"snippet": "DoMethod(${1:obj}, MUIM_Dataspace_Merge, ${2:Object *dataspace})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Merge a dataspace to the dataspace of the object. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dataspace_Merge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dataspace_ReadIFF(handle)",
		"snippet": "DoMethod(${1:obj}, MUIM_Dataspace_ReadIFF, ${2:struct IFFHandle *handle})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add the contents of an IFF handle to the dataspace.(V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dataspace_ReadIFF&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dataspace_Remove(id)",
		"snippet": "DoMethod(${1:obj}, MUIM_Dataspace_Remove, ${2:ULONG id})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove an entry from the dataspace of the object. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dataspace_Remove&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dataspace_WriteIFF(handle, type, id)",
		"snippet": "DoMethod(${1:obj}, MUIM_Dataspace_WriteIFF, ${2:struct IFFHandle *handle}, ${3:ULONG type}, ${4:ULONG id})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Write the contents of the dataspace to an IFF handle. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dataspace_WriteIFF&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DeleteBubble(bubble)",
		"snippet": "DoMethod(${1:obj}, MUIM_DeleteBubble, ${2:APTR bubble})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Removes a bubble created with MUIM_CreateBubble. (V18)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DeleteBubble&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DeleteShortHelp(help)",
		"snippet": "DoMethod(${1:obj}, MUIM_DeleteShortHelp, ${2:STRPTR help})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Frees a short help text created with MUIM_CreateShortHelp. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DeleteShortHelp&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Dirlist_ReRead()",
		"snippet": "DoMethod(${1:obj}, MUIM_Dirlist_ReRead)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Force the dirlist object to reread the current directory.(V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Dirlist_ReRead&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DragBegin(incomingObj)",
		"snippet": "DoMethod(${1:obj}, MUIM_DragBegin, ${2:Object *incoming})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Inform an object that it has become the active destination of a drag&drop action. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DragBegin&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DragDrop(incomingObj, x, y)",
		"snippet": "DoMethod(${1:obj}, MUIM_DragDrop, ${2:Object *incoming}, ${3:LONG x}, ${4:LONG y})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Inform an object that the user dropped something on it. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DragDrop&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DragFinish(incomingObj)",
		"snippet": "DoMethod(${1:obj}, MUIM_DragFinish, ${2:Object *incoming})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Inform an object that it is no longer the active destination of drag&drop action. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DragFinish&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DragQuery(incomingObj)",
		"snippet": "DoMethod(${1:obj}, MUIM_DragQuery, ${2:Object *incoming})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "To determine if an object accepts a drag&drop on it. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DragQuery&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DragReport(incomingObj, x, y, update)",
		"snippet": "DoMethod(${1:obj}, MUIM_DragReport, ${2:Object *incoming}, ${3:LONG x}, ${4:LONG y}, ${5:LONG update})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Provides interim messages for MOUSEMOVEs and INTUITICKs during a drag&drop action. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DragReport&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Draw(flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_Draw, ${2:ULONG flags})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Make an object redraw itself. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Draw&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_DrawBackground(left, top, width, height, xoffset, yoffset, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_DrawBackground, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height}, ${6:LONG xoffset}, ${7:LONG yoffset}, ${8:LONG flags})${9:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Draw a part of your objects background with the defined MUIA_Background. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_DrawBackground&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Export(dataspace)",
		"snippet": "DoMethod(${1:obj}, MUIM_Export, ${2:Object *dataspace})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Exports the \"contents\" of an object to a dataspace object. (V12)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Export&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Family_AddHead(object)",
		"snippet": "DoMethod(${1:obj}, MUIM_Family_AddHead, ${2:Object *obj})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add an object as first object to the family. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Family_AddHead&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Family_AddTail(object)",
		"snippet": "DoMethod(${1:obj}, MUIM_Family_AddTail, ${2:Object *obj})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add an object as last object to the family. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Family_AddTail&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Family_Insert(object, pred)",
		"snippet": "DoMethod(${1:obj}, MUIM_Family_Insert, ${2:Object *obj}, ${3:Object *pred})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add an object to the family after the given other object. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Family_Insert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Family_Remove(object)",
		"snippet": "DoMethod(${1:obj}, MUIM_Family_Remove, ${2:Object *obj})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove an object from a family. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Family_Remove&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Family_Sort(objects[])",
		"snippet": "DoMethod(${1:obj}, MUIM_Family_Sort, ${2:Object *objs[]})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Sort the children of a family. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Family_Sort&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Family_Transfer(family)",
		"snippet": "DoMethod(${1:obj}, MUIM_Family_Transfer, ${2:Object *family})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Move all the children of the family to another family. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Family_Transfer&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_FindUData(udata)",
		"snippet": "DoMethod(${1:obj}, MUIM_FindUData, ${2:ULONG udata})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Returns all the objects that contain a specific userdata. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_FindUData&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_GetConfigItem(id, storage)",
		"snippet": "DoMethod(${1:obj}, MUIM_GetConfigItem, ${2:ULONG id}, ${3:ULONG *storage})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "undocumented (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_GetConfigItem&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_GetUData(udata, attr, storage)",
		"snippet": "DoMethod(${1:obj}, MUIM_GetUData, ${2:ULONG udata}, ${3:ULONG attr}, ${4:ULONG *storage})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get a user attribute. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_GetUData&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Group_ExitChange()",
		"snippet": "DoMethod(${1:obj}, MUIM_Group_ExitChange)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Terminate MUIM_Group_InitChange state. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Group_ExitChange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Group_InitChange()",
		"snippet": "DoMethod(${1:obj}, MUIM_Group_InitChange)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Prepare a group for dynamic adding/removing of objects. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Group_InitChange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Group_Sort(objects[])",
		"snippet": "DoMethod(${1:obj}, MUIM_Group_Sort, ${2:Object *objs[]})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Rearrange the order of the children stored in a group object. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Group_Sort&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_HandleEvent(imsg, muikey)",
		"snippet": "DoMethod(${1:obj}, MUIM_HandleEvent, ${2:struct IntuiMessage *imsg}, ${3:LONG muikey})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Reacts upon event handlers trigger signals. (V16)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_HandleEvent&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_HandleInput(imsg, muikey)",
		"snippet": "DoMethod(${1:obj}, MUIM_HandleInput, ${2:struct IntuiMessage *imsg}, ${3:LONG muikey})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Reacts upon input handlers trigger signals. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_HandleInput&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Hide()",
		"snippet": "DoMethod(${1:obj}, MUIM_Hide)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "To take the actions when an object is hidden. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Hide&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Import(dataspace)",
		"snippet": "DoMethod(${1:obj}, MUIM_Import, ${2:Object *dataspace})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Import object \"contents\" from a dataspace object. (V12)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Import&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_KillNotify(trigAttr)",
		"snippet": "DoMethod(${1:obj}, MUIM_KillNotify, ${2:ULONG trigAttr})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Kill previously given notifications on specific attributes. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_KillNotify&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_KillNotifyObj(trigAttr, dest)",
		"snippet": "DoMethod(${1:obj}, MUIM_KillNotifyObj, ${2:ULONG trigAttr}, ${3:Object *dest})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "undocumented (V16)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_KillNotifyObj&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Clear()",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Clear)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove all entries from the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Clear&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_CreateImage(img, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_CreateImage, ${2:Object *img}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Create list images from BitMap objects. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_CreateImage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_DeleteImage(listimg)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_DeleteImage, ${2:APTR listimg})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Free the resources allocated by MUIM_List_CreateImage. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_DeleteImage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Exchange(pos1, pos2)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Exchange, ${2:LONG pos1}, ${3:LONG pos2})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Exchange two entries in the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Exchange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_GetEntry(pos, entry)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_GetEntry, ${2:LONG pos}, ${3:APTR *entry})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get an entry of the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_GetEntry&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Insert(entries, count, pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Insert, ${2:APTR *entries}, ${3:LONG count}, ${4:LONG pos})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert new entries into the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Insert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_InsertSingle(entry, pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_InsertSingle, ${2:APTR entry}, ${3:LONG pos})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert one new entry into the list. (V7)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_InsertSingle&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Jump(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Jump, ${2:LONG pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Scroll any entry into the visible part of the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Jump&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Move(from, to)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Move, ${2:LONG from}, ${3:LONG to})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Move an entry from one position to another. (V9)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Move&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_NextSelected(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_NextSelected, ${2:LONG *pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Iterate through selected entries. (V6)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_NextSelected&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Redraw(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Redraw, ${2:LONG pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Visually update the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Redraw&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Remove(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Remove, ${2:LONG pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove an entry from the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Remove&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Select(pos, seltype, state)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Select, ${2:LONG pos}, ${3:LONG seltype}, ${4:LONG *state})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Select/deselect a list entry or ask if it is selected. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Select&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_Sort()",
		"snippet": "DoMethod(${1:obj}, MUIM_List_Sort)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Sort the list. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_Sort&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_List_TestPos(x, y, res)",
		"snippet": "DoMethod(${1:obj}, MUIM_List_TestPos, ${2:LONG x}, ${3:LONG y}, ${4:struct MUI_List_TestPos_Result *res})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get which line/column is displayed at a certain position. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_List_TestPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_MultiSet(attr, val, obj, ...)",
		"snippet": "DoMethod(${1:obj}, MUIM_MultiSet, ${2:ULONG attr}, ${3:ULONG val}, ${4:APTR obj}, ${5:...})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set an attribute for multiple objects. (V7)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_MultiSet&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NoNotifySet(attr, format, val, ...)",
		"snippet": "DoMethod(${1:obj}, MUIM_NoNotifySet, ${2:ULONG attr}, ${3:char *format}, ${4:ULONG val}, ${5:...})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set an attribute to a value without triggering any notifications. (V9)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NoNotifySet&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Notify(trigAttr, trigVal, destObj, followParams, ...)",
		"snippet": "DoMethod(${1:obj}, MUIM_Notify, ${2:ULONG trigAttr}, ${3:ULONG trigVal}, ${4:APTR destObj}, ${5:ULONG followParams}, ${6:...})${7:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add a notification event handler to an object. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Notify&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Numeric_Decrease(amount)",
		"snippet": "DoMethod(${1:obj}, MUIM_Numeric_Decrease, ${2:LONG amount})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Decrease the value of a numeric class object. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Numeric_Decrease&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Numeric_Increase(amount)",
		"snippet": "DoMethod(${1:obj}, MUIM_Numeric_Increase, ${2:LONG amount})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Increase the value of a numeric class object. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Numeric_Increase&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Numeric_ScaleToValue(scalemin, scalemax, scale)",
		"snippet": "DoMethod(${1:obj}, MUIM_Numeric_ScaleToValue, ${2:LONG scalemin}, ${3:LONG scalemax}, ${4:LONG scale})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Transform the given scale values to be between min/max values. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Numeric_ScaleToValue&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Numeric_SetDefault()",
		"snippet": "DoMethod(${1:obj}, MUIM_Numeric_SetDefault)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Reset the value to its default. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Numeric_SetDefault&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Numeric_Stringify(value)",
		"snippet": "DoMethod(${1:obj}, MUIM_Numeric_Stringify, ${2:LONG value})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Translate a value into a string. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Numeric_Stringify&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Numeric_ValueToScale(scalemin, scalemax)",
		"snippet": "DoMethod(${1:obj}, MUIM_Numeric_ValueToScale, ${2:LONG scalemin}, ${3:LONG scalemax})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Transform the current value to another scale. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Numeric_ValueToScale&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Pendisplay_SetColormap(colormap)",
		"snippet": "DoMethod(${1:obj}, MUIM_Pendisplay_SetColormap, ${2:LONG colormap})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Switch the pendisplay object to a specific colormap entry. (V13)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Pendisplay_SetColormap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Pendisplay_SetMUIPen(muipen)",
		"snippet": "DoMethod(${1:obj}, MUIM_Pendisplay_SetMUIPen, ${2:LONG muipen})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Switch the pendisplay object to a specific mui pen. (V13)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Pendisplay_SetMUIPen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Pendisplay_SetRGB(red, green, blue)",
		"snippet": "DoMethod(${1:obj}, MUIM_Pendisplay_SetRGB, ${2:ULONG red}, ${3:ULONG green}, ${4:ULONG blue})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Switch the pendisplay object to an RGB value. (V13)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Pendisplay_SetRGB&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Popstring_Close(result)",
		"snippet": "DoMethod(${1:obj}, MUIM_Popstring_Close, ${2:LONG result})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Close a popup. (V7)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Popstring_Close&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Popstring_Open()",
		"snippet": "DoMethod(${1:obj}, MUIM_Popstring_Open)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Open a popup. (V7)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Popstring_Open&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Prop_Decrease(amount)",
		"snippet": "DoMethod(${1:obj}, MUIM_Prop_Decrease, ${2:LONG amount})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Decrease the value by the specified amount. (V16)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Prop_Decrease&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Prop_Increase(amount)",
		"snippet": "DoMethod(${1:obj}, MUIM_Prop_Increase, ${2:LONG amount})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Increase the value by the specified amount. (V16)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Prop_Increase&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Semaphore_Attempt()",
		"snippet": "DoMethod(${1:obj}, MUIM_Semaphore_Attempt)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Emulates exec.library/AttemptSemaphore. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Semaphore_Attempt&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Semaphore_AttemptShared()",
		"snippet": "DoMethod(${1:obj}, MUIM_Semaphore_AttemptShared)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Emulates exec.library/AttemptSemaphoreShared. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Semaphore_AttemptShared&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Semaphore_Obtain()",
		"snippet": "DoMethod(${1:obj}, MUIM_Semaphore_Obtain)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Emulates exec.library/ObtainSemaphore. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Semaphore_Obtain&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Semaphore_ObtainShared()",
		"snippet": "DoMethod(${1:obj}, MUIM_Semaphore_ObtainShared)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Emulates exec.library/ObtainSemaphoreShared. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Semaphore_ObtainShared&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Semaphore_Release()",
		"snippet": "DoMethod(${1:obj}, MUIM_Semaphore_Release)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Emulates exec.library/ReleaseSemaphore. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Semaphore_Release&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Set(attr, val)",
		"snippet": "DoMethod(${1:obj}, MUIM_Set, ${2:ULONG attr}, ${3:ULONG val})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set an attribute to a value. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Set&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_SetAsString(attr, format, val, ...)",
		"snippet": "DoMethod(${1:obj}, MUIM_SetAsString, ${2:ULONG attr}, ${3:char *format}, ${4:ULONG val}, ${5:...})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set a (text kind) attribute to a string. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_SetAsString&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Settingsgroup_ConfigToGadgets(configdata)",
		"snippet": "DoMethod(${1:obj}, MUIM_Settingsgroup_ConfigToGadgets, ${2:Object *configdata})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "undocumented (V11)",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_Settingsgroup_GadgetsToConfig(configdata)",
		"snippet": "DoMethod(${1:obj}, MUIM_Settingsgroup_GadgetsToConfig, ${2:Object *configdata})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "undocumented (V11)",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_SetUData(udata, attr, val)",
		"snippet": "DoMethod(${1:obj}, MUIM_SetUData, ${2:ULONG udata}, ${3:ULONG attr}, ${4:ULONG val})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set a user attribute. (V8)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_SetUData&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_SetUDataOnce(udata, attr, val)",
		"snippet": "DoMethod(${1:obj}, MUIM_SetUDataOnce, ${2:ULONG udata}, ${3:ULONG attr}, ${4:ULONG val})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set a user attribute and stop at first occasion. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_SetUDataOnce&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Setup(renderInfo)",
		"snippet": "DoMethod(${1:obj}, MUIM_Setup, ${2:struct MUI_RenderInfo *ri})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "To allocate the resources for the object. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Setup&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Show()",
		"snippet": "DoMethod(${1:obj}, MUIM_Show)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "To take the actions when an object is shown. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Show&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_AddEventHandler(ehnode)",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_AddEventHandler, ${2:struct MUI_EventHandlerNode *ehnode})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Add a new \"event handler\" to handle input events. (V16)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_AddEventHandler&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_GetMenuCheck(menuID)",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_GetMenuCheck, ${2:ULONG menuID})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get the selection status of a checkmark menu item. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_GetMenuCheck&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_GetMenuState(menuID)",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_GetMenuState, ${2:ULONG menuID})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Ask whether a menu item is enabled or disabled. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_GetMenuState&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_RemEventHandler(ehnode)",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_RemEventHandler, ${2:struct MUI_EventHandlerNode *ehnode})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove an event handler. (V16)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_RemEventHandler&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_ScreenToBack()",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_ScreenToBack)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Put the window's screen to back. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_ScreenToBack&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_ScreenToFront()",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_ScreenToFront)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Bring the window's screen to front. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_ScreenToFront&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_SetCycleChain(objects[])",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_SetCycleChain, ${2:Object *objs[]})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set the cycle chain for a window. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_SetCycleChain&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_SetMenuCheck(menuID, stat)",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_SetMenuCheck, ${2:ULONG menuID}, ${3:LONG stat})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set or clear the checkmark of a menu item. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_SetMenuCheck&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_SetMenuState(menuID, stat)",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_SetMenuState, ${2:ULONG menuID}, ${3:LONG stat})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Enable or disable a menu item. (V4) (OBSOLETE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_SetMenuState&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_Snapshot(flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_Snapshot, ${2:LONG flags})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Store/unstore the position and size of the window. (V11)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_Snapshot&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_ToBack()",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_ToBack)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Put the window to back. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_ToBack&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_Window_ToFront()",
		"snippet": "DoMethod(${1:obj}, MUIM_Window_ToFront)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Bring the window to front. (V4)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_Window_ToFront&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_WriteLong(value, memory)",
		"snippet": "DoMethod(${1:obj}, MUIM_WriteLong, ${2:ULONG val}, ${3:ULONG *mem})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Write a longword at somewhere in memory. (V6)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_WriteLong&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_WriteString(string, memory)",
		"snippet": "DoMethod(${1:obj}, MUIM_WriteString, ${2:char *str}, ${3:char *mem})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Copy a string to somewhere in memory. (V6)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_WriteString&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIPEN(pen)",
		"snippet": "MUIPEN(${1:LONG pen})${2:}",
		"type": "macro",
		"leftLabel": "UBYTE",
		"description": "Transforms a MUI pen for use with SetAPen().",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUI_ObtainPen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_AltHeight_MinMax(p)",
		"snippet": "MUIV_Window_AltHeight_MinMax(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_AltHeight_Screen(p)",
		"snippet": "MUIV_Window_AltHeight_Screen(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_AltHeight_Visible(p)",
		"snippet": "MUIV_Window_AltHeight_Visible(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_AltTopEdge_Delta(p)",
		"snippet": "MUIV_Window_AltTopEdge_Delta(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltTopEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_AltWidth_MinMax(p)",
		"snippet": "MUIV_Window_AltWidth_MinMax(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_AltWidth_Screen(p)",
		"snippet": "MUIV_Window_AltWidth_Screen(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_AltWidth_Visible(p)",
		"snippet": "MUIV_Window_AltWidth_Visible(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_Height_MinMax(p)",
		"snippet": "MUIV_Window_Height_MinMax(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_Height_Screen(p)",
		"snippet": "MUIV_Window_Height_Screen(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_Height_Visible(p)",
		"snippet": "MUIV_Window_Height_Visible(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_TopEdge_Delta(p)",
		"snippet": "MUIV_Window_TopEdge_Delta(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_TopEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_Width_MinMax(p)",
		"snippet": "MUIV_Window_Width_MinMax(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_Width_Screen(p)",
		"snippet": "MUIV_Window_Width_Screen(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIV_Window_Width_Visible(p)",
		"snippet": "MUIV_Window_Width_Visible(${1:LONG p})${2:}",
		"type": "macro",
		"leftLabel": "LONG",
		"description": "Value transforming macro.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "muiAreaData(obj)",
		"snippet": "muiAreaData(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct MUI_AreaData*",
		"description": "Shortcut to MUI objects AreaData.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "muiGlobalInfo(obj)",
		"snippet": "muiGlobalInfo(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct MUI_GlobalInfo*",
		"description": "Shortcut to MUI objects AreaData.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "muiNotifyData(obj)",
		"snippet": "muiNotifyData(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct MUI_NotifyData*",
		"description": "Shortcut to MUI objects NotifyData.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "muiRenderInfo(obj)",
		"snippet": "muiRenderInfo(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct MUI_RenderInfo*",
		"description": "Shortcut to MUI objects RenderInfo.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "muiUserData(obj)",
		"snippet": "muiUserData(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "APTR",
		"description": "Shortcut to MUI objects UserData.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_Aboutmui_Application",
		"snippet": "MUIA_Aboutmui_Application",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Aboutmui_Application&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Active",
		"snippet": "MUIA_Application_Active",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Author",
		"snippet": "MUIA_Application_Author",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Author&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Base",
		"snippet": "MUIA_Application_Base",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Base&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Broker",
		"snippet": "MUIA_Application_Broker",
		"type": "attribute",
		"leftLabel": "Broker*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Broker&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_BrokerHook",
		"snippet": "MUIA_Application_BrokerHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_BrokerHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_BrokerPort",
		"snippet": "MUIA_Application_BrokerPort",
		"type": "attribute",
		"leftLabel": "struct MsgPort*",
		"description": "(V6) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_BrokerPort&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_BrokerPri",
		"snippet": "MUIA_Application_BrokerPri",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V6) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_BrokerPri&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Commands",
		"snippet": "MUIA_Application_Commands",
		"type": "attribute",
		"leftLabel": "struct MUI_Command*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Commands&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Copyright",
		"snippet": "MUIA_Application_Copyright",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Copyright&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Description",
		"snippet": "MUIA_Application_Description",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Description&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_DiskObject",
		"snippet": "MUIA_Application_DiskObject",
		"type": "attribute",
		"leftLabel": "struct DiskObject*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_DiskObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_DoubleStart",
		"snippet": "MUIA_Application_DoubleStart",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_DoubleStart&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_DropObject",
		"snippet": "MUIA_Application_DropObject",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V5) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_DropObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_ForceQuit",
		"snippet": "MUIA_Application_ForceQuit",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_ForceQuit&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_HelpFile",
		"snippet": "MUIA_Application_HelpFile",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_HelpFile&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Iconified",
		"snippet": "MUIA_Application_Iconified",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Iconified&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Menu",
		"snippet": "MUIA_Application_Menu",
		"type": "attribute",
		"leftLabel": "struct NewMenu*",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Menu&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_MenuAction",
		"snippet": "MUIA_Application_MenuAction",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_MenuAction&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_MenuHelp",
		"snippet": "MUIA_Application_MenuHelp",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_MenuHelp&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Menustrip",
		"snippet": "MUIA_Application_Menustrip",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V8) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Menustrip&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_RexxHook",
		"snippet": "MUIA_Application_RexxHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_RexxHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_RexxMsg",
		"snippet": "MUIA_Application_RexxMsg",
		"type": "attribute",
		"leftLabel": "struct RxMsg*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_RexxMsg&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_RexxString",
		"snippet": "MUIA_Application_RexxString",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_RexxString&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_SingleTask",
		"snippet": "MUIA_Application_SingleTask",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_SingleTask&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Sleep",
		"snippet": "MUIA_Application_Sleep",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Sleep&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Title",
		"snippet": "MUIA_Application_Title",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Title&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_UseCommodities",
		"snippet": "MUIA_Application_UseCommodities",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V10) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_UseCommodities&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_UseRexx",
		"snippet": "MUIA_Application_UseRexx",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V10) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_UseRexx&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Version",
		"snippet": "MUIA_Application_Version",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Version&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_Window",
		"snippet": "MUIA_Application_Window",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_Window&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Application_WindowList",
		"snippet": "MUIA_Application_WindowList",
		"type": "attribute",
		"leftLabel": "struct List*",
		"description": "(V13) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Application_WindowList&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ApplicationObject",
		"snippet": "MUIA_ApplicationObject",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ApplicationObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_AppMessage",
		"snippet": "MUIA_AppMessage",
		"type": "attribute",
		"leftLabel": "struct AppMessage*",
		"description": "(V5) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_AppMessage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Background",
		"snippet": "MUIA_Background",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Background&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_Bitmap",
		"snippet": "MUIA_Bitmap_Bitmap",
		"type": "attribute",
		"leftLabel": "struct BitMap*",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_Bitmap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_Height",
		"snippet": "MUIA_Bitmap_Height",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_MappingTable",
		"snippet": "MUIA_Bitmap_MappingTable",
		"type": "attribute",
		"leftLabel": "UBYTE*",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_MappingTable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_Precision",
		"snippet": "MUIA_Bitmap_Precision",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_Precision&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_RemappedBitmap",
		"snippet": "MUIA_Bitmap_RemappedBitmap",
		"type": "attribute",
		"leftLabel": "struct BitMap*",
		"description": "(V11) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_RemappedBitmap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_SourceColors",
		"snippet": "MUIA_Bitmap_SourceColors",
		"type": "attribute",
		"leftLabel": "ULONG*",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_SourceColors&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_Transparent",
		"snippet": "MUIA_Bitmap_Transparent",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_Transparent&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_UseFriend",
		"snippet": "MUIA_Bitmap_UseFriend",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_UseFriend&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bitmap_Width",
		"snippet": "MUIA_Bitmap_Width",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bitmap_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bodychunk_Body",
		"snippet": "MUIA_Bodychunk_Body",
		"type": "attribute",
		"leftLabel": "UBYTE*",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bodychunk_Body&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bodychunk_Compression",
		"snippet": "MUIA_Bodychunk_Compression",
		"type": "attribute",
		"leftLabel": "UBYTE",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bodychunk_Compression&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bodychunk_Depth",
		"snippet": "MUIA_Bodychunk_Depth",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bodychunk_Depth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Bodychunk_Masking",
		"snippet": "MUIA_Bodychunk_Masking",
		"type": "attribute",
		"leftLabel": "UBYTE",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Bodychunk_Masking&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_Class",
		"snippet": "MUIA_Boopsi_Class",
		"type": "attribute",
		"leftLabel": "struct IClass*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_Class&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_ClassID",
		"snippet": "MUIA_Boopsi_ClassID",
		"type": "attribute",
		"leftLabel": "char*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_ClassID&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_MaxHeight",
		"snippet": "MUIA_Boopsi_MaxHeight",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_MaxHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_MaxWidth",
		"snippet": "MUIA_Boopsi_MaxWidth",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_MaxWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_MinHeight",
		"snippet": "MUIA_Boopsi_MinHeight",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_MinHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_MinWidth",
		"snippet": "MUIA_Boopsi_MinWidth",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_MinWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_Object",
		"snippet": "MUIA_Boopsi_Object",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_Object&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_Remember",
		"snippet": "MUIA_Boopsi_Remember",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_Remember&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_Smart",
		"snippet": "MUIA_Boopsi_Smart",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V9) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_Smart&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_TagDrawInfo",
		"snippet": "MUIA_Boopsi_TagDrawInfo",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_TagDrawInfo&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_TagScreen",
		"snippet": "MUIA_Boopsi_TagScreen",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_TagScreen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Boopsi_TagWindow",
		"snippet": "MUIA_Boopsi_TagWindow",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Boopsi_TagWindow&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_BottomEdge",
		"snippet": "MUIA_BottomEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_BottomEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Coloradjust_Blue",
		"snippet": "MUIA_Coloradjust_Blue",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Coloradjust_Blue&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Coloradjust_Green",
		"snippet": "MUIA_Coloradjust_Green",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Coloradjust_Green&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Coloradjust_ModeID",
		"snippet": "MUIA_Coloradjust_ModeID",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Coloradjust_ModeID&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Coloradjust_Red",
		"snippet": "MUIA_Coloradjust_Red",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Coloradjust_Red&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Coloradjust_RGB",
		"snippet": "MUIA_Coloradjust_RGB",
		"type": "attribute",
		"leftLabel": "ULONG*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Coloradjust_RGB&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Colorfield_Blue",
		"snippet": "MUIA_Colorfield_Blue",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Colorfield_Blue&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Colorfield_Green",
		"snippet": "MUIA_Colorfield_Green",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Colorfield_Green&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Colorfield_Pen",
		"snippet": "MUIA_Colorfield_Pen",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Colorfield_Pen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Colorfield_Red",
		"snippet": "MUIA_Colorfield_Red",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Colorfield_Red&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Colorfield_RGB",
		"snippet": "MUIA_Colorfield_RGB",
		"type": "attribute",
		"leftLabel": "ULONG*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Colorfield_RGB&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ContextMenu",
		"snippet": "MUIA_ContextMenu",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ContextMenu&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ContextMenuTrigger",
		"snippet": "MUIA_ContextMenuTrigger",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V11) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ContextMenuTrigger&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ControlChar",
		"snippet": "MUIA_ControlChar",
		"type": "attribute",
		"leftLabel": "char",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ControlChar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Cycle_Active",
		"snippet": "MUIA_Cycle_Active",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Cycle_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Cycle_Entries",
		"snippet": "MUIA_Cycle_Entries",
		"type": "attribute",
		"leftLabel": "STRPTR*",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Cycle_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_CycleChain",
		"snippet": "MUIA_CycleChain",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_CycleChain&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dataspace_Pool",
		"snippet": "MUIA_Dataspace_Pool",
		"type": "attribute",
		"leftLabel": "APTR",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dataspace_Pool&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_AcceptPattern",
		"snippet": "MUIA_Dirlist_AcceptPattern",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_AcceptPattern&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_Directory",
		"snippet": "MUIA_Dirlist_Directory",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_Directory&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_DrawersOnly",
		"snippet": "MUIA_Dirlist_DrawersOnly",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_DrawersOnly&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_FilesOnly",
		"snippet": "MUIA_Dirlist_FilesOnly",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_FilesOnly&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_FilterDrawers",
		"snippet": "MUIA_Dirlist_FilterDrawers",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_FilterDrawers&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_FilterHook",
		"snippet": "MUIA_Dirlist_FilterHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_FilterHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_MultiSelDirs",
		"snippet": "MUIA_Dirlist_MultiSelDirs",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V6) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_MultiSelDirs&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_NumBytes",
		"snippet": "MUIA_Dirlist_NumBytes",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_NumBytes&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_NumDrawers",
		"snippet": "MUIA_Dirlist_NumDrawers",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_NumDrawers&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_NumFiles",
		"snippet": "MUIA_Dirlist_NumFiles",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_NumFiles&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_Path",
		"snippet": "MUIA_Dirlist_Path",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_Path&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_RejectIcons",
		"snippet": "MUIA_Dirlist_RejectIcons",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_RejectIcons&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_RejectPattern",
		"snippet": "MUIA_Dirlist_RejectPattern",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_RejectPattern&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_SortDirs",
		"snippet": "MUIA_Dirlist_SortDirs",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_SortDirs&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_SortHighLow",
		"snippet": "MUIA_Dirlist_SortHighLow",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_SortHighLow&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_SortType",
		"snippet": "MUIA_Dirlist_SortType",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_SortType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dirlist_Status",
		"snippet": "MUIA_Dirlist_Status",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dirlist_Status&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Disabled",
		"snippet": "MUIA_Disabled",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Disabled&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Draggable",
		"snippet": "MUIA_Draggable",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Draggable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Dropable",
		"snippet": "MUIA_Dropable",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Dropable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ExportID",
		"snippet": "MUIA_ExportID",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ExportID&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Family_Child",
		"snippet": "MUIA_Family_Child",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V8) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Family_Child&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Family_List",
		"snippet": "MUIA_Family_List",
		"type": "attribute",
		"leftLabel": "struct MinList*",
		"description": "(V8) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Family_List&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_FillArea",
		"snippet": "MUIA_FillArea",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_FillArea&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_FixHeight",
		"snippet": "MUIA_FixHeight",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_FixHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_FixHeightTxt",
		"snippet": "MUIA_FixHeightTxt",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_FixHeightTxt&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_FixWidth",
		"snippet": "MUIA_FixWidth",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_FixWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_FixWidthTxt",
		"snippet": "MUIA_FixWidthTxt",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_FixWidthTxt&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Floattext_Justify",
		"snippet": "MUIA_Floattext_Justify",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Floattext_Justify&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Floattext_SkipChars",
		"snippet": "MUIA_Floattext_SkipChars",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Floattext_SkipChars&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Floattext_TabSize",
		"snippet": "MUIA_Floattext_TabSize",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Floattext_TabSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Floattext_Text",
		"snippet": "MUIA_Floattext_Text",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Floattext_Text&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Font",
		"snippet": "MUIA_Font",
		"type": "attribute",
		"leftLabel": "struct TextFont*",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Font&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Frame",
		"snippet": "MUIA_Frame",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Frame&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_FramePhantomHoriz",
		"snippet": "MUIA_FramePhantomHoriz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_FramePhantomHoriz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_FrameTitle",
		"snippet": "MUIA_FrameTitle",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_FrameTitle&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Gadget_Gadget",
		"snippet": "MUIA_Gadget_Gadget",
		"type": "attribute",
		"leftLabel": "struct Gadget*",
		"description": "(V11) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Gadget_Gadget&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Gauge_Current",
		"snippet": "MUIA_Gauge_Current",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Gauge_Current&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Gauge_Divide",
		"snippet": "MUIA_Gauge_Divide",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Gauge_Divide&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Gauge_Horiz",
		"snippet": "MUIA_Gauge_Horiz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Gauge_Horiz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Gauge_InfoText",
		"snippet": "MUIA_Gauge_InfoText",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Gauge_InfoText&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Gauge_Max",
		"snippet": "MUIA_Gauge_Max",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Gauge_Max&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_ActivePage",
		"snippet": "MUIA_Group_ActivePage",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V5) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_ActivePage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_Child",
		"snippet": "MUIA_Group_Child",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_Child&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_ChildList",
		"snippet": "MUIA_Group_ChildList",
		"type": "attribute",
		"leftLabel": "struct List*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_ChildList&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_Columns",
		"snippet": "MUIA_Group_Columns",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_Columns&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_Horiz",
		"snippet": "MUIA_Group_Horiz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_Horiz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_HorizSpacing",
		"snippet": "MUIA_Group_HorizSpacing",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_HorizSpacing&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_LayoutHook",
		"snippet": "MUIA_Group_LayoutHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_LayoutHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_PageMode",
		"snippet": "MUIA_Group_PageMode",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V5) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_PageMode&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_Rows",
		"snippet": "MUIA_Group_Rows",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_Rows&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_SameHeight",
		"snippet": "MUIA_Group_SameHeight",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_SameHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_SameSize",
		"snippet": "MUIA_Group_SameSize",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_SameSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_SameWidth",
		"snippet": "MUIA_Group_SameWidth",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_SameWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_Spacing",
		"snippet": "MUIA_Group_Spacing",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_Spacing&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Group_VertSpacing",
		"snippet": "MUIA_Group_VertSpacing",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Group_VertSpacing&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Height",
		"snippet": "MUIA_Height",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_HelpLine",
		"snippet": "MUIA_HelpLine",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_HelpLine&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_HelpNode",
		"snippet": "MUIA_HelpNode",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_HelpNode&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_HorizDisappear",
		"snippet": "MUIA_HorizDisappear",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_HorizDisappear&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_HorizWeight",
		"snippet": "MUIA_HorizWeight",
		"type": "attribute",
		"leftLabel": "WORD",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_HorizWeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_FontMatch",
		"snippet": "MUIA_Image_FontMatch",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_FontMatch&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_FontMatchHeight",
		"snippet": "MUIA_Image_FontMatchHeight",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_FontMatchHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_FontMatchWidth",
		"snippet": "MUIA_Image_FontMatchWidth",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_FontMatchWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_FreeHoriz",
		"snippet": "MUIA_Image_FreeHoriz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_FreeHoriz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_FreeVert",
		"snippet": "MUIA_Image_FreeVert",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_FreeVert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_OldImage",
		"snippet": "MUIA_Image_OldImage",
		"type": "attribute",
		"leftLabel": "struct Image*",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_OldImage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_Spec",
		"snippet": "MUIA_Image_Spec",
		"type": "attribute",
		"leftLabel": "char*",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_Spec&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Image_State",
		"snippet": "MUIA_Image_State",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Image_State&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_InnerBottom",
		"snippet": "MUIA_InnerBottom",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_InnerBottom&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_InnerLeft",
		"snippet": "MUIA_InnerLeft",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_InnerLeft&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_InnerRight",
		"snippet": "MUIA_InnerRight",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_InnerRight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_InnerTop",
		"snippet": "MUIA_InnerTop",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_InnerTop&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_InputMode",
		"snippet": "MUIA_InputMode",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_InputMode&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_LeftEdge",
		"snippet": "MUIA_LeftEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_LeftEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Levelmeter_Label",
		"snippet": "MUIA_Levelmeter_Label",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Levelmeter_Label&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_Active",
		"snippet": "MUIA_List_Active",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_AdjustHeight",
		"snippet": "MUIA_List_AdjustHeight",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_AdjustHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_AdjustWidth",
		"snippet": "MUIA_List_AdjustWidth",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_AdjustWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_AutoVisible",
		"snippet": "MUIA_List_AutoVisible",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_AutoVisible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_CompareHook",
		"snippet": "MUIA_List_CompareHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_CompareHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_ConstructHook",
		"snippet": "MUIA_List_ConstructHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_ConstructHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_DestructHook",
		"snippet": "MUIA_List_DestructHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_DestructHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_DisplayHook",
		"snippet": "MUIA_List_DisplayHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_DisplayHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_DragSortable",
		"snippet": "MUIA_List_DragSortable",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_DragSortable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_DropMark",
		"snippet": "MUIA_List_DropMark",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_DropMark&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_Entries",
		"snippet": "MUIA_List_Entries",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_First",
		"snippet": "MUIA_List_First",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_First&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_Format",
		"snippet": "MUIA_List_Format",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_Format&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_InsertPosition",
		"snippet": "MUIA_List_InsertPosition",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V9) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_InsertPosition&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_MinLineHeight",
		"snippet": "MUIA_List_MinLineHeight",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_MinLineHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_MultiTestHook",
		"snippet": "MUIA_List_MultiTestHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_MultiTestHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_Pool",
		"snippet": "MUIA_List_Pool",
		"type": "attribute",
		"leftLabel": "APTR",
		"description": "(V13) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_Pool&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_PoolPuddleSize",
		"snippet": "MUIA_List_PoolPuddleSize",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V13) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_PoolPuddleSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_PoolThreshSize",
		"snippet": "MUIA_List_PoolThreshSize",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V13) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_PoolThreshSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_Quiet",
		"snippet": "MUIA_List_Quiet",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_Quiet&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_ShowDropMarks",
		"snippet": "MUIA_List_ShowDropMarks",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_ShowDropMarks&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_SourceArray",
		"snippet": "MUIA_List_SourceArray",
		"type": "attribute",
		"leftLabel": "APTR",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_SourceArray&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_Title",
		"snippet": "MUIA_List_Title",
		"type": "attribute",
		"leftLabel": "char*",
		"description": "(V6) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_Title&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_List_Visible",
		"snippet": "MUIA_List_Visible",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_List_Visible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_ClickColumn",
		"snippet": "MUIA_Listview_ClickColumn",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V7) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_ClickColumn&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_DefClickColumn",
		"snippet": "MUIA_Listview_DefClickColumn",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_DefClickColumn&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_DoubleClick",
		"snippet": "MUIA_Listview_DoubleClick",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_DoubleClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_DragType",
		"snippet": "MUIA_Listview_DragType",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_DragType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_Input",
		"snippet": "MUIA_Listview_Input",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_Input&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_List",
		"snippet": "MUIA_Listview_List",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_List&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_MultiSelect",
		"snippet": "MUIA_Listview_MultiSelect",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V7) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_MultiSelect&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_ScrollerPos",
		"snippet": "MUIA_Listview_ScrollerPos",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V10) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_ScrollerPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Listview_SelectChange",
		"snippet": "MUIA_Listview_SelectChange",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Listview_SelectChange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_MaxHeight",
		"snippet": "MUIA_MaxHeight",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_MaxHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_MaxWidth",
		"snippet": "MUIA_MaxWidth",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_MaxWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menu_Enabled",
		"snippet": "MUIA_Menu_Enabled",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menu_Enabled&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menu_Title",
		"snippet": "MUIA_Menu_Title",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menu_Title&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Checked",
		"snippet": "MUIA_Menuitem_Checked",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Checked&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Checkit",
		"snippet": "MUIA_Menuitem_Checkit",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Checkit&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_CommandString",
		"snippet": "MUIA_Menuitem_CommandString",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V16) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_CommandString&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Enabled",
		"snippet": "MUIA_Menuitem_Enabled",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Enabled&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Exclude",
		"snippet": "MUIA_Menuitem_Exclude",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Exclude&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Shortcut",
		"snippet": "MUIA_Menuitem_Shortcut",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Shortcut&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Title",
		"snippet": "MUIA_Menuitem_Title",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Title&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Toggle",
		"snippet": "MUIA_Menuitem_Toggle",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Toggle&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menuitem_Trigger",
		"snippet": "MUIA_Menuitem_Trigger",
		"type": "attribute",
		"leftLabel": "struct MenuItem*",
		"description": "(V8) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menuitem_Trigger&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Menustrip_Enabled",
		"snippet": "MUIA_Menustrip_Enabled",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Menustrip_Enabled&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NoNotify",
		"snippet": "MUIA_NoNotify",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NoNotify&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_CheckAllSizes",
		"snippet": "MUIA_Numeric_CheckAllSizes",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_CheckAllSizes&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_Default",
		"snippet": "MUIA_Numeric_Default",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_Default&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_Format",
		"snippet": "MUIA_Numeric_Format",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_Format&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_Max",
		"snippet": "MUIA_Numeric_Max",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_Max&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_Min",
		"snippet": "MUIA_Numeric_Min",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_Min&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_Reverse",
		"snippet": "MUIA_Numeric_Reverse",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_Reverse&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_RevLeftRight",
		"snippet": "MUIA_Numeric_RevLeftRight",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_RevLeftRight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_RevUpDown",
		"snippet": "MUIA_Numeric_RevUpDown",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_RevUpDown&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Numeric_Value",
		"snippet": "MUIA_Numeric_Value",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Numeric_Value&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ObjectID",
		"snippet": "MUIA_ObjectID",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ObjectID&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Palette_Entries",
		"snippet": "MUIA_Palette_Entries",
		"type": "attribute",
		"leftLabel": "struct MUI_Palette_Entry*",
		"description": "(V6) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Palette_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Palette_Groupable",
		"snippet": "MUIA_Palette_Groupable",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V6) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Palette_Groupable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Palette_Names",
		"snippet": "MUIA_Palette_Names",
		"type": "attribute",
		"leftLabel": "char**",
		"description": "(V6) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Palette_Names&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Parent",
		"snippet": "MUIA_Parent",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V11) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Parent&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Penadjust_PSIMode",
		"snippet": "MUIA_Penadjust_PSIMode",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Penadjust_PSIMode&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Pendisplay_Pen",
		"snippet": "MUIA_Pendisplay_Pen",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V13) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Pendisplay_Pen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Pendisplay_Reference",
		"snippet": "MUIA_Pendisplay_Reference",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V13) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Pendisplay_Reference&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Pendisplay_RGBcolor",
		"snippet": "MUIA_Pendisplay_RGBcolor",
		"type": "attribute",
		"leftLabel": "struct MUI_RGBcolor*",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Pendisplay_RGBcolor&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Pendisplay_Spec",
		"snippet": "MUIA_Pendisplay_Spec",
		"type": "attribute",
		"leftLabel": "struct MUI_PenSpec *",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Pendisplay_Spec&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popasl_Active",
		"snippet": "MUIA_Popasl_Active",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popasl_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popasl_StartHook",
		"snippet": "MUIA_Popasl_StartHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popasl_StartHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popasl_StopHook",
		"snippet": "MUIA_Popasl_StopHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popasl_StopHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popasl_Type",
		"snippet": "MUIA_Popasl_Type",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popasl_Type&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Poplist_Array",
		"snippet": "MUIA_Poplist_Array",
		"type": "attribute",
		"leftLabel": "char**",
		"description": "(V8) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Poplist_Array&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popobject_Follow",
		"snippet": "MUIA_Popobject_Follow",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popobject_Follow&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popobject_Light",
		"snippet": "MUIA_Popobject_Light",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popobject_Light&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popobject_Object",
		"snippet": "MUIA_Popobject_Object",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popobject_Object&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popobject_ObjStrHook",
		"snippet": "MUIA_Popobject_ObjStrHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popobject_ObjStrHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popobject_StrObjHook",
		"snippet": "MUIA_Popobject_StrObjHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popobject_StrObjHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popobject_Volatile",
		"snippet": "MUIA_Popobject_Volatile",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popobject_Volatile&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popobject_WindowHook",
		"snippet": "MUIA_Popobject_WindowHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V9) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popobject_WindowHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popstring_Button",
		"snippet": "MUIA_Popstring_Button",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popstring_Button&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popstring_CloseHook",
		"snippet": "MUIA_Popstring_CloseHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popstring_CloseHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popstring_OpenHook",
		"snippet": "MUIA_Popstring_OpenHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popstring_OpenHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popstring_String",
		"snippet": "MUIA_Popstring_String",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popstring_String&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Popstring_Toggle",
		"snippet": "MUIA_Popstring_Toggle",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Popstring_Toggle&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Pressed",
		"snippet": "MUIA_Pressed",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Pressed&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Prop_Entries",
		"snippet": "MUIA_Prop_Entries",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Prop_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Prop_First",
		"snippet": "MUIA_Prop_First",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Prop_First&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Prop_Horiz",
		"snippet": "MUIA_Prop_Horiz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Prop_Horiz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Prop_Slider",
		"snippet": "MUIA_Prop_Slider",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Prop_Slider&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Prop_UseWinBorder",
		"snippet": "MUIA_Prop_UseWinBorder",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V13) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Prop_UseWinBorder&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Prop_Visible",
		"snippet": "MUIA_Prop_Visible",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Prop_Visible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Radio_Active",
		"snippet": "MUIA_Radio_Active",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Radio_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Radio_Entries",
		"snippet": "MUIA_Radio_Entries",
		"type": "attribute",
		"leftLabel": "STRPTR*",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Radio_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Rectangle_BarTitle",
		"snippet": "MUIA_Rectangle_BarTitle",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V11) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Rectangle_BarTitle&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Rectangle_HBar",
		"snippet": "MUIA_Rectangle_HBar",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Rectangle_HBar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Rectangle_VBar",
		"snippet": "MUIA_Rectangle_VBar",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Rectangle_VBar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Register_Frame",
		"snippet": "MUIA_Register_Frame",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Register_Frame&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Register_Titles",
		"snippet": "MUIA_Register_Titles",
		"type": "attribute",
		"leftLabel": "STRPTR*",
		"description": "(V7) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Register_Titles&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Revision",
		"snippet": "MUIA_Revision",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Revision&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_RightEdge",
		"snippet": "MUIA_RightEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_RightEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scale_Horiz",
		"snippet": "MUIA_Scale_Horiz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scale_Horiz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scrollbar_Type",
		"snippet": "MUIA_Scrollbar_Type",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scrollbar_Type&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scrollgroup_Contents",
		"snippet": "MUIA_Scrollgroup_Contents",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scrollgroup_Contents&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scrollgroup_FreeHoriz",
		"snippet": "MUIA_Scrollgroup_FreeHoriz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V9) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scrollgroup_FreeHoriz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scrollgroup_FreeVert",
		"snippet": "MUIA_Scrollgroup_FreeVert",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V9) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scrollgroup_FreeVert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scrollgroup_HorizBar",
		"snippet": "MUIA_Scrollgroup_HorizBar",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V16) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scrollgroup_HorizBar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scrollgroup_UseWinBorder",
		"snippet": "MUIA_Scrollgroup_UseWinBorder",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V13) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scrollgroup_UseWinBorder&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Scrollgroup_VertBar",
		"snippet": "MUIA_Scrollgroup_VertBar",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V16) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Scrollgroup_VertBar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Selected",
		"snippet": "MUIA_Selected",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Selected&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ShortHelp",
		"snippet": "MUIA_ShortHelp",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ShortHelp&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ShowMe",
		"snippet": "MUIA_ShowMe",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ShowMe&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_ShowSelState",
		"snippet": "MUIA_ShowSelState",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_ShowSelState&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Slider_Horiz",
		"snippet": "MUIA_Slider_Horiz",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Slider_Horiz&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Slider_Level",
		"snippet": "MUIA_Slider_Level",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Slider_Level&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Slider_Max",
		"snippet": "MUIA_Slider_Max",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Slider_Max&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Slider_Min",
		"snippet": "MUIA_Slider_Min",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Slider_Min&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Slider_Quiet",
		"snippet": "MUIA_Slider_Quiet",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V6) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Slider_Quiet&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Slider_Reverse",
		"snippet": "MUIA_Slider_Reverse",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Slider_Reverse&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_Accept",
		"snippet": "MUIA_String_Accept",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_Accept&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_Acknowledge",
		"snippet": "MUIA_String_Acknowledge",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_Acknowledge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_AdvanceOnCR",
		"snippet": "MUIA_String_AdvanceOnCR",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_AdvanceOnCR&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_AttachedList",
		"snippet": "MUIA_String_AttachedList",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_AttachedList&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_BufferPos",
		"snippet": "MUIA_String_BufferPos",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_BufferPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_Contents",
		"snippet": "MUIA_String_Contents",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_Contents&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_DisplayPos",
		"snippet": "MUIA_String_DisplayPos",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_DisplayPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_EditHook",
		"snippet": "MUIA_String_EditHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "(V7) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_EditHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_Format",
		"snippet": "MUIA_String_Format",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_Format&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_Integer",
		"snippet": "MUIA_String_Integer",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_Integer&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_LonelyEditHook",
		"snippet": "MUIA_String_LonelyEditHook",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_LonelyEditHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_MaxLen",
		"snippet": "MUIA_String_MaxLen",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_MaxLen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_Reject",
		"snippet": "MUIA_String_Reject",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_Reject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_String_Secret",
		"snippet": "MUIA_String_Secret",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_String_Secret&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Text_Contents",
		"snippet": "MUIA_Text_Contents",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Text_Contents&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Text_HiChar",
		"snippet": "MUIA_Text_HiChar",
		"type": "attribute",
		"leftLabel": "char",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Text_HiChar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Text_PreParse",
		"snippet": "MUIA_Text_PreParse",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Text_PreParse&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Text_SetMax",
		"snippet": "MUIA_Text_SetMax",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Text_SetMax&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Text_SetMin",
		"snippet": "MUIA_Text_SetMin",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Text_SetMin&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Text_SetVMax",
		"snippet": "MUIA_Text_SetVMax",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Text_SetVMax&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Timer",
		"snippet": "MUIA_Timer",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Timer&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TopEdge",
		"snippet": "MUIA_TopEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TopEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_UserData",
		"snippet": "MUIA_UserData",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_UserData&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Version",
		"snippet": "MUIA_Version",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Version&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_VertDisappear",
		"snippet": "MUIA_VertDisappear",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V11) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_VertDisappear&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_VertWeight",
		"snippet": "MUIA_VertWeight",
		"type": "attribute",
		"leftLabel": "WORD",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_VertWeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Virtgroup_Height",
		"snippet": "MUIA_Virtgroup_Height",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V6) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Virtgroup_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Virtgroup_Input",
		"snippet": "MUIA_Virtgroup_Input",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V11) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Virtgroup_Input&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Virtgroup_Left",
		"snippet": "MUIA_Virtgroup_Left",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V6) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Virtgroup_Left&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Virtgroup_Top",
		"snippet": "MUIA_Virtgroup_Top",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V6) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Virtgroup_Top&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Virtgroup_Width",
		"snippet": "MUIA_Virtgroup_Width",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V6) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Virtgroup_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Weight",
		"snippet": "MUIA_Weight",
		"type": "attribute",
		"leftLabel": "WORD",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Weight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Width",
		"snippet": "MUIA_Width",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window",
		"snippet": "MUIA_Window",
		"type": "attribute",
		"leftLabel": "struct Window*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Activate",
		"snippet": "MUIA_Window_Activate",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Activate&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_ActiveObject",
		"snippet": "MUIA_Window_ActiveObject",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_ActiveObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_AltHeight",
		"snippet": "MUIA_Window_AltHeight",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_AltLeftEdge",
		"snippet": "MUIA_Window_AltLeftEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltLeftEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_AltTopEdge",
		"snippet": "MUIA_Window_AltTopEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltTopEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_AltWidth",
		"snippet": "MUIA_Window_AltWidth",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AltWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_AppWindow",
		"snippet": "MUIA_Window_AppWindow",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V5) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_AppWindow&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Backdrop",
		"snippet": "MUIA_Window_Backdrop",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Backdrop&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Borderless",
		"snippet": "MUIA_Window_Borderless",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Borderless&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_CloseGadget",
		"snippet": "MUIA_Window_CloseGadget",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_CloseGadget&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_CloseRequest",
		"snippet": "MUIA_Window_CloseRequest",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_CloseRequest&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_DefaultObject",
		"snippet": "MUIA_Window_DefaultObject",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_DefaultObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_DepthGadget",
		"snippet": "MUIA_Window_DepthGadget",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_DepthGadget&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_DragBar",
		"snippet": "MUIA_Window_DragBar",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_DragBar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_FancyDrawing",
		"snippet": "MUIA_Window_FancyDrawing",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_FancyDrawing&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Height",
		"snippet": "MUIA_Window_Height",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_ID",
		"snippet": "MUIA_Window_ID",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_ID&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_InputEvent",
		"snippet": "MUIA_Window_InputEvent",
		"type": "attribute",
		"leftLabel": "struct InputEvent*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_InputEvent&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_IsSubWindow",
		"snippet": "MUIA_Window_IsSubWindow",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_IsSubWindow&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_LeftEdge",
		"snippet": "MUIA_Window_LeftEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_LeftEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Menu",
		"snippet": "MUIA_Window_Menu",
		"type": "attribute",
		"leftLabel": "struct NewMenu*",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Menu&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_MenuAction",
		"snippet": "MUIA_Window_MenuAction",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "(V8) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_MenuAction&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Menustrip",
		"snippet": "MUIA_Window_Menustrip",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V8) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Menustrip&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_MouseObject",
		"snippet": "MUIA_Window_MouseObject",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V10) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_MouseObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_NeedsMouseObject",
		"snippet": "MUIA_Window_NeedsMouseObject",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V10) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_NeedsMouseObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_NoMenus",
		"snippet": "MUIA_Window_NoMenus",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_NoMenus&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Open",
		"snippet": "MUIA_Window_Open",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Open&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_PublicScreen",
		"snippet": "MUIA_Window_PublicScreen",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V6) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_PublicScreen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_RefWindow",
		"snippet": "MUIA_Window_RefWindow",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_RefWindow&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_RootObject",
		"snippet": "MUIA_Window_RootObject",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_RootObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Screen",
		"snippet": "MUIA_Window_Screen",
		"type": "attribute",
		"leftLabel": "struct Screen*",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Screen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_ScreenTitle",
		"snippet": "MUIA_Window_ScreenTitle",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V5) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_ScreenTitle&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_SizeGadget",
		"snippet": "MUIA_Window_SizeGadget",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_SizeGadget&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_SizeRight",
		"snippet": "MUIA_Window_SizeRight",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_SizeRight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Sleep",
		"snippet": "MUIA_Window_Sleep",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V4) [.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Sleep&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Title",
		"snippet": "MUIA_Window_Title",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "(V4) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Title&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_TopEdge",
		"snippet": "MUIA_Window_TopEdge",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_TopEdge&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_UseBottomBorderScroller",
		"snippet": "MUIA_Window_UseBottomBorderScroller",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V13) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_UseBottomBorderScr&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_UseLeftBorderScroller",
		"snippet": "MUIA_Window_UseLeftBorderScroller",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V13) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_UseLeftBorderScrol&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_UseRightBorderScroller",
		"snippet": "MUIA_Window_UseRightBorderScroller",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "(V13) [ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_UseRightBorderScro&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Width",
		"snippet": "MUIA_Window_Width",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V4) [I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_Window_Window",
		"snippet": "MUIA_Window_Window",
		"type": "attribute",
		"leftLabel": "struct Window*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_Window_Window&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_WindowObject",
		"snippet": "MUIA_WindowObject",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "(V4) [..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_WindowObject&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUI_EHF_ALWAYSKEYS",
		"snippet": "MUI_EHF_ALWAYSKEYS",
		"type": "value",
		"description": ""
	},
	{
		"displayText": "MUI_EventHandlerRC_Eat",
		"snippet": "MUI_EventHandlerRC_Eat",
		"type": "value",
		"description": "Stop MUI from calling other handlers."
	},
	{
		"displayText": "MUIX_R",
		"snippet": "MUIX_R",
		"type": "value",
		"description": "Right justified."
	},
	{
		"displayText": "MUIX_C",
		"snippet": "MUIX_C",
		"type": "value",
		"description": "Centered."
	},
	{
		"displayText": "MUIX_L",
		"snippet": "MUIX_L",
		"type": "value",
		"description": "Left justified"
	},
	{
		"displayText": "MUIX_N",
		"snippet": "MUIX_N",
		"type": "value",
		"description": "Normal."
	},
	{
		"displayText": "MUIX_B",
		"snippet": "MUIX_B",
		"type": "value",
		"description": "Bold."
	},
	{
		"displayText": "MUIX_I",
		"snippet": "MUIX_I",
		"type": "value",
		"description": "Italic."
	},
	{
		"displayText": "MUIX_U",
		"snippet": "MUIX_U",
		"type": "value",
		"description": "Underlined."
	},
	{
		"displayText": "MUIX_PT",
		"snippet": "MUIX_PT",
		"type": "value",
		"description": "Text pen."
	},
	{
		"displayText": "MUIX_PH",
		"snippet": "MUIX_PH",
		"type": "value",
		"description": "Highlight text pen."
	},
	{
  	"displayText": "MUIV_Application_Load_ENV",
  	"snippet": "MUIV_Application_Load_ENV",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Application_Load_ENVARC",
  	"snippet": "MUIV_Application_Load_ENVARC",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Application_ReturnID_Quit",
  	"snippet": "MUIV_Application_ReturnID_Quit",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Application_Save_ENV",
  	"snippet": "MUIV_Application_Save_ENV",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Application_Save_ENVARC",
  	"snippet": "MUIV_Application_Save_ENVARC",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Cycle_Active_Next",
  	"snippet": "MUIV_Cycle_Active_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Cycle_Active_Prev",
  	"snippet": "MUIV_Cycle_Active_Prev",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_SortDirs_First",
  	"snippet": "MUIV_Dirlist_SortDirs_First",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_SortDirs_Last",
  	"snippet": "MUIV_Dirlist_SortDirs_Last",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_SortDirs_Mix",
  	"snippet": "MUIV_Dirlist_SortDirs_Mix",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_SortType_Date",
  	"snippet": "MUIV_Dirlist_SortType_Date",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_SortType_Name",
  	"snippet": "MUIV_Dirlist_SortType_Name",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_SortType_Size",
  	"snippet": "MUIV_Dirlist_SortType_Size",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_Status_Invalid",
  	"snippet": "MUIV_Dirlist_Status_Invalid",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_Status_Reading",
  	"snippet": "MUIV_Dirlist_Status_Reading",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Dirlist_Status_Valid",
  	"snippet": "MUIV_Dirlist_Status_Valid",
  	"type": "value"
  },
	{
  	"displayText": "MUIV_EveryTime",
  	"snippet": "MUIV_EveryTime",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_Big",
  	"snippet": "MUIV_Font_Big",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_Button",
  	"snippet": "MUIV_Font_Button",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_Fixed",
  	"snippet": "MUIV_Font_Fixed",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_Inherit",
  	"snippet": "MUIV_Font_Inherit",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_List",
  	"snippet": "MUIV_Font_List",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_Normal",
  	"snippet": "MUIV_Font_Normal",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_Tiny",
  	"snippet": "MUIV_Font_Tiny",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Font_Title",
  	"snippet": "MUIV_Font_Title",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Button",
  	"snippet": "MUIV_Frame_Button",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Count",
  	"snippet": "MUIV_Frame_Count",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Gauge",
  	"snippet": "MUIV_Frame_Gauge",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Group",
  	"snippet": "MUIV_Frame_Group",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_ImageButton",
  	"snippet": "MUIV_Frame_ImageButton",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_InputList",
  	"snippet": "MUIV_Frame_InputList",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_None",
  	"snippet": "MUIV_Frame_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_PopUp",
  	"snippet": "MUIV_Frame_PopUp",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Prop",
  	"snippet": "MUIV_Frame_Prop",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_ReadList",
  	"snippet": "MUIV_Frame_ReadList",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Slider",
  	"snippet": "MUIV_Frame_Slider",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_String",
  	"snippet": "MUIV_Frame_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Text",
  	"snippet": "MUIV_Frame_Text",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Frame_Virtual",
  	"snippet": "MUIV_Frame_Virtual",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Group_ActivePage_Advance",
  	"snippet": "MUIV_Group_ActivePage_Advance",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Group_ActivePage_First",
  	"snippet": "MUIV_Group_ActivePage_First",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Group_ActivePage_Last",
  	"snippet": "MUIV_Group_ActivePage_Last",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Group_ActivePage_Next",
  	"snippet": "MUIV_Group_ActivePage_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Group_ActivePage_Prev",
  	"snippet": "MUIV_Group_ActivePage_Prev",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_InputMode_Immediate",
  	"snippet": "MUIV_InputMode_Immediate",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_InputMode_None",
  	"snippet": "MUIV_InputMode_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_InputMode_RelVerify",
  	"snippet": "MUIV_InputMode_RelVerify",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_InputMode_Toggle",
  	"snippet": "MUIV_InputMode_Toggle",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Active_Bottom",
  	"snippet": "MUIV_List_Active_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Active_Down",
  	"snippet": "MUIV_List_Active_Down",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Active_Off",
  	"snippet": "MUIV_List_Active_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Active_PageDown",
  	"snippet": "MUIV_List_Active_PageDown",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Active_PageUp",
  	"snippet": "MUIV_List_Active_PageUp",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Active_Top",
  	"snippet": "MUIV_List_Active_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Active_Up",
  	"snippet": "MUIV_List_Active_Up",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_ConstructHook_String",
  	"snippet": "MUIV_List_ConstructHook_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_DestructHook_String",
  	"snippet": "MUIV_List_DestructHook_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Exchange_Active",
  	"snippet": "MUIV_List_Exchange_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Exchange_Bottom",
  	"snippet": "MUIV_List_Exchange_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Exchange_Next",
  	"snippet": "MUIV_List_Exchange_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Exchange_Previous",
  	"snippet": "MUIV_List_Exchange_Previous",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Exchange_Top",
  	"snippet": "MUIV_List_Exchange_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Insert_Active",
  	"snippet": "MUIV_List_Insert_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Insert_Bottom",
  	"snippet": "MUIV_List_Insert_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Insert_Sorted",
  	"snippet": "MUIV_List_Insert_Sorted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Insert_Top",
  	"snippet": "MUIV_List_Insert_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Move_Active",
  	"snippet": "MUIV_List_Move_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Move_Bottom",
  	"snippet": "MUIV_List_Move_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Move_Next",
  	"snippet": "MUIV_List_Move_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Move_Previous",
  	"snippet": "MUIV_List_Move_Previous",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Move_Top",
  	"snippet": "MUIV_List_Move_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_NextSelected_Start",
  	"snippet": "MUIV_List_NextSelected_Start",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Redraw_Active",
  	"snippet": "MUIV_List_Redraw_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Redraw_All",
  	"snippet": "MUIV_List_Redraw_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Remove_Active",
  	"snippet": "MUIV_List_Remove_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Remove_First",
  	"snippet": "MUIV_List_Remove_First",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Remove_Last",
  	"snippet": "MUIV_List_Remove_Last",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Remove_Selected",
  	"snippet": "MUIV_List_Remove_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Select_Active",
  	"snippet": "MUIV_List_Select_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Select_All",
  	"snippet": "MUIV_List_Select_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Select_Ask",
  	"snippet": "MUIV_List_Select_Ask",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Select_On",
  	"snippet": "MUIV_List_Select_On",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_List_Select_Toggle",
  	"snippet": "MUIV_List_Select_Toggle",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_DragType_Immediate",
  	"snippet": "MUIV_Listview_DragType_Immediate",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_DragType_None",
  	"snippet": "MUIV_Listview_DragType_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_MultiSelect_Always",
  	"snippet": "MUIV_Listview_MultiSelect_Always",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_MultiSelect_Default",
  	"snippet": "MUIV_Listview_MultiSelect_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_MultiSelect_None",
  	"snippet": "MUIV_Listview_MultiSelect_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_MultiSelect_Shifted",
  	"snippet": "MUIV_Listview_MultiSelect_Shifted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_ScrollerPos_Default",
  	"snippet": "MUIV_Listview_ScrollerPos_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_ScrollerPos_Left",
  	"snippet": "MUIV_Listview_ScrollerPos_Left",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_ScrollerPos_None",
  	"snippet": "MUIV_Listview_ScrollerPos_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Listview_ScrollerPos_Right",
  	"snippet": "MUIV_Listview_ScrollerPos_Right",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Menuitem_Shortcut_Check",
  	"snippet": "MUIV_Menuitem_Shortcut_Check",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Notify_Application",
  	"snippet": "MUIV_Notify_Application",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Notify_Self",
  	"snippet": "MUIV_Notify_Self",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Notify_Window",
  	"snippet": "MUIV_Notify_Window",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NotTriggerValue",
  	"snippet": "MUIV_NotTriggerValue",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Palette_Entry_End",
  	"snippet": "MUIV_Palette_Entry_End",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Prop_UseWinBorder_Bottom",
  	"snippet": "MUIV_Prop_UseWinBorder_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Prop_UseWinBorder_Left",
  	"snippet": "MUIV_Prop_UseWinBorder_Left",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Prop_UseWinBorder_None",
  	"snippet": "MUIV_Prop_UseWinBorder_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Prop_UseWinBorder_Right",
  	"snippet": "MUIV_Prop_UseWinBorder_Right",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Scrollbar_Type_Bottom",
  	"snippet": "MUIV_Scrollbar_Type_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Scrollbar_Type_Default",
  	"snippet": "MUIV_Scrollbar_Type_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Scrollbar_Type_Sym",
  	"snippet": "MUIV_Scrollbar_Type_Sym",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Scrollbar_Type_Top",
  	"snippet": "MUIV_Scrollbar_Type_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_String_Format_Center",
  	"snippet": "MUIV_String_Format_Center",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_String_Format_Left",
  	"snippet": "MUIV_String_Format_Left",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_String_Format_Right",
  	"snippet": "MUIV_String_Format_Right",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TriggerValue",
  	"snippet": "MUIV_TriggerValue",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_ActiveObject_Next",
  	"snippet": "MUIV_Window_ActiveObject_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_ActiveObject_None",
  	"snippet": "MUIV_Window_ActiveObject_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_ActiveObject_Prev",
  	"snippet": "MUIV_Window_ActiveObject_Prev",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltHeight_MinMax",
  	"snippet": "MUIV_Window_AltHeight_MinMax",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltHeight_Scaled",
  	"snippet": "MUIV_Window_AltHeight_Scaled",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltHeight_Screen",
  	"snippet": "MUIV_Window_AltHeight_Screen",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltHeight_Visible",
  	"snippet": "MUIV_Window_AltHeight_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltLeftEdge_Centered",
  	"snippet": "MUIV_Window_AltLeftEdge_Centered",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltLeftEdge_Moused",
  	"snippet": "MUIV_Window_AltLeftEdge_Moused",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltLeftEdge_NoChange",
  	"snippet": "MUIV_Window_AltLeftEdge_NoChange",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltTopEdge_Centered",
  	"snippet": "MUIV_Window_AltTopEdge_Centered",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltTopEdge_Delta",
  	"snippet": "MUIV_Window_AltTopEdge_Delta",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltTopEdge_Moused",
  	"snippet": "MUIV_Window_AltTopEdge_Moused",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltTopEdge_NoChange",
  	"snippet": "MUIV_Window_AltTopEdge_NoChange",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltWidth_MinMax",
  	"snippet": "MUIV_Window_AltWidth_MinMax",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltWidth_Scaled",
  	"snippet": "MUIV_Window_AltWidth_Scaled",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltWidth_Screen",
  	"snippet": "MUIV_Window_AltWidth_Screen",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_AltWidth_Visible",
  	"snippet": "MUIV_Window_AltWidth_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Height_Default",
  	"snippet": "MUIV_Window_Height_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Height_MinMax",
  	"snippet": "MUIV_Window_Height_MinMax",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Height_Scaled",
  	"snippet": "MUIV_Window_Height_Scaled",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Height_Screen",
  	"snippet": "MUIV_Window_Height_Screen",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Height_Visible",
  	"snippet": "MUIV_Window_Height_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_LeftEdge_Centered",
  	"snippet": "MUIV_Window_LeftEdge_Centered",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_LeftEdge_Moused",
  	"snippet": "MUIV_Window_LeftEdge_Moused",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Menu_NoMenu",
  	"snippet": "MUIV_Window_Menu_NoMenu",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_TopEdge_Centered",
  	"snippet": "MUIV_Window_TopEdge_Centered",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_TopEdge_Delta",
  	"snippet": "MUIV_Window_TopEdge_Delta",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_TopEdge_Moused",
  	"snippet": "MUIV_Window_TopEdge_Moused",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Width_Default",
  	"snippet": "MUIV_Window_Width_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Width_MinMax",
  	"snippet": "MUIV_Window_Width_MinMax",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Width_Scaled",
  	"snippet": "MUIV_Window_Width_Scaled",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Width_Screen",
  	"snippet": "MUIV_Window_Width_Screen",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_Window_Width_Visible",
  	"snippet": "MUIV_Window_Width_Visible",
  	"type": "value"
  },
	{
		"displayText": "MUI_LPR_ABOVE",
		"snippet": "MUI_LPR_ABOVE",
		"type": "value"
	},
	{
		"displayText": "MUI_LPR_BELOW",
		"snippet": "MUI_LPR_BELOW",
		"type": "value"
	},
	{
		"displayText": "MUI_LPR_LEFT",
		"snippet": "MUI_LPR_LEFT",
		"type": "value"
	},
	{
		"displayText": "MUI_LPR_RIGHT",
		"snippet": "MUI_LPR_RIGHT",
		"type": "value"
	},
	{
		"displayText": "MUI_RXERR_BADDEFINITION",
		"snippet": "MUI_RXERR_BADDEFINITION",
		"type": "value"
	},
	{
		"displayText": "MUI_RXERR_BADSYNTAX",
		"snippet": "MUI_RXERR_BADSYNTAX",
		"type": "value"
	},
	{
		"displayText": "MUI_RXERR_OUTOFMEMORY",
		"snippet": "MUI_RXERR_OUTOFMEMORY",
		"type": "value"
	},
	{
		"displayText": "MUI_RXERR_UNKNOWNCOMMAND",
		"snippet": "MUI_RXERR_UNKNOWNCOMMAND",
		"type": "value"
	},
	{
		"displayText": "MUIE_InvalidWindowObject",
		"snippet": "MUIE_InvalidWindowObject",
		"type": "value"
	},
	{
		"displayText": "MUIE_MissingLibrary",
		"snippet": "MUIE_MissingLibrary",
		"type": "value"
	},
	{
		"displayText": "MUIE_NoARexx",
		"snippet": "MUIE_NoARexx",
		"type": "value"
	},
	{
		"displayText": "MUIE_OK",
		"snippet": "MUIE_OK",
		"type": "value"
	},
	{
		"displayText": "MUIE_OutOfGfxMemory",
		"snippet": "MUIE_OutOfGfxMemory",
		"type": "value"
	},
	{
		"displayText": "MUIE_OutOfMemory",
		"snippet": "MUIE_OutOfMemory",
		"type": "value"
	},
	{
		"displayText": "MUIE_SingleTask",
		"snippet": "MUIE_SingleTask",
		"type": "value"
	},
	{
		"displayText": "MUII_ArrowDown",
		"snippet": "MUII_ArrowDown",
		"type": "value"
	},
	{
		"displayText": "MUII_ArrowLeft",
		"snippet": "MUII_ArrowLeft",
		"type": "value"
	},
	{
		"displayText": "MUII_ArrowRight",
		"snippet": "MUII_ArrowRight",
		"type": "value"
	},
	{
		"displayText": "MUII_ArrowUp",
		"snippet": "MUII_ArrowUp",
		"type": "value"
	},
	{
		"displayText": "MUII_Assign",
		"snippet": "MUII_Assign",
		"type": "value"
	},
	{
		"displayText": "MUII_BACKGROUND",
		"snippet": "MUII_BACKGROUND",
		"type": "value"
	},
	{
		"displayText": "MUII_ButtonBack",
		"snippet": "MUII_ButtonBack",
		"type": "value"
	},
	{
		"displayText": "MUII_CheckMark",
		"snippet": "MUII_CheckMark",
		"type": "value"
	},
	{
		"displayText": "MUII_Chip",
		"snippet": "MUII_Chip",
		"type": "value"
	},
	{
		"displayText": "MUII_Count",
		"snippet": "MUII_Count",
		"type": "value"
	},
	{
		"displayText": "MUII_Cycle",
		"snippet": "MUII_Cycle",
		"type": "value"
	},
	{
		"displayText": "MUII_Disk",
		"snippet": "MUII_Disk",
		"type": "value"
	},
	{
		"displayText": "MUII_Drawer",
		"snippet": "MUII_Drawer",
		"type": "value"
	},
	{
		"displayText": "MUII_FILL",
		"snippet": "MUII_FILL",
		"type": "value"
	},
	{
		"displayText": "MUII_FILLBACK",
		"snippet": "MUII_FILLBACK",
		"type": "value"
	},
	{
		"displayText": "MUII_FILLBACK2",
		"snippet": "MUII_FILLBACK2",
		"type": "value"
	},
	{
		"displayText": "MUII_FILLSHINE",
		"snippet": "MUII_FILLSHINE",
		"type": "value"
	},
	{
		"displayText": "MUII_GroupBack",
		"snippet": "MUII_GroupBack",
		"type": "value"
	},
	{
		"displayText": "MUII_HardDisk",
		"snippet": "MUII_HardDisk",
		"type": "value"
	},
	{
		"displayText": "MUII_HSHADOWBACK",
		"snippet": "MUII_HSHADOWBACK",
		"type": "value"
	},
	{
		"displayText": "MUII_HSHADOWSHADOW",
		"snippet": "MUII_HSHADOWSHADOW",
		"type": "value"
	},
	{
		"displayText": "MUII_HSHINEBACK",
		"snippet": "MUII_HSHINEBACK",
		"type": "value"
	},
	{
		"displayText": "MUII_HSHINESHINE",
		"snippet": "MUII_HSHINESHINE",
		"type": "value"
	},
	{
		"displayText": "MUII_LASTPAT",
		"snippet": "MUII_LASTPAT",
		"type": "value"
	},
	{
		"displayText": "MUII_ListBack",
		"snippet": "MUII_ListBack",
		"type": "value"
	},
	{
		"displayText": "MUII_ListCursor",
		"snippet": "MUII_ListCursor",
		"type": "value"
	},
	{
		"displayText": "MUII_ListSelCur",
		"snippet": "MUII_ListSelCur",
		"type": "value"
	},
	{
		"displayText": "MUII_ListSelect",
		"snippet": "MUII_ListSelect",
		"type": "value"
	},
	{
		"displayText": "MUII_MARKBACKGROUND",
		"snippet": "MUII_MARKBACKGROUND",
		"type": "value"
	},
	{
		"displayText": "MUII_MARKHALFSHINE",
		"snippet": "MUII_MARKHALFSHINE",
		"type": "value"
	},
	{
		"displayText": "MUII_MARKSHINE",
		"snippet": "MUII_MARKSHINE",
		"type": "value"
	},
	{
		"displayText": "MUII_Network",
		"snippet": "MUII_Network",
		"type": "value"
	},
	{
		"displayText": "MUII_PageBack",
		"snippet": "MUII_PageBack",
		"type": "value"
	},
	{
		"displayText": "MUII_PopDrawer",
		"snippet": "MUII_PopDrawer",
		"type": "value"
	},
	{
		"displayText": "MUII_PopFile",
		"snippet": "MUII_PopFile",
		"type": "value"
	},
	{
		"displayText": "MUII_PopUp",
		"snippet": "MUII_PopUp",
		"type": "value"
	},
	{
		"displayText": "MUII_PopupBack",
		"snippet": "MUII_PopupBack",
		"type": "value"
	},
	{
		"displayText": "MUII_PropBack",
		"snippet": "MUII_PropBack",
		"type": "value"
	},
	{
		"displayText": "MUII_PropKnob",
		"snippet": "MUII_PropKnob",
		"type": "value"
	},
	{
		"displayText": "MUII_RadioButton",
		"snippet": "MUII_RadioButton",
		"type": "value"
	},
	{
		"displayText": "MUII_ReadListBack",
		"snippet": "MUII_ReadListBack",
		"type": "value"
	},
	{
		"displayText": "MUII_RegisterBack",
		"snippet": "MUII_RegisterBack",
		"type": "value"
	},
	{
		"displayText": "MUII_RequesterBack",
		"snippet": "MUII_RequesterBack",
		"type": "value"
	},
	{
		"displayText": "MUII_SelectedBack",
		"snippet": "MUII_SelectedBack",
		"type": "value"
	},
	{
		"displayText": "MUII_SHADOW",
		"snippet": "MUII_SHADOW",
		"type": "value"
	},
	{
		"displayText": "MUII_SHADOWBACK",
		"snippet": "MUII_SHADOWBACK",
		"type": "value"
	},
	{
		"displayText": "MUII_SHADOWFILL",
		"snippet": "MUII_SHADOWFILL",
		"type": "value"
	},
	{
		"displayText": "MUII_SHADOWSHINE",
		"snippet": "MUII_SHADOWSHINE",
		"type": "value"
	},
	{
		"displayText": "MUII_SHINE",
		"snippet": "MUII_SHINE",
		"type": "value"
	},
	{
		"displayText": "MUII_SHINEBACK",
		"snippet": "MUII_SHINEBACK",
		"type": "value"
	},
	{
		"displayText": "MUII_SliderBack",
		"snippet": "MUII_SliderBack",
		"type": "value"
	},
	{
		"displayText": "MUII_SliderKnob",
		"snippet": "MUII_SliderKnob",
		"type": "value"
	},
	{
		"displayText": "MUII_TapeDown",
		"snippet": "MUII_TapeDown",
		"type": "value"
	},
	{
		"displayText": "MUII_TapePause",
		"snippet": "MUII_TapePause",
		"type": "value"
	},
	{
		"displayText": "MUII_TapePlay",
		"snippet": "MUII_TapePlay",
		"type": "value"
	},
	{
		"displayText": "MUII_TapePlayBack",
		"snippet": "MUII_TapePlayBack",
		"type": "value"
	},
	{
		"displayText": "MUII_TapeRecord",
		"snippet": "MUII_TapeRecord",
		"type": "value"
	},
	{
		"displayText": "MUII_TapeStop",
		"snippet": "MUII_TapeStop",
		"type": "value"
	},
	{
		"displayText": "MUII_TapeUp",
		"snippet": "MUII_TapeUp",
		"type": "value"
	},
	{
		"displayText": "MUII_TextBack",
		"snippet": "MUII_TextBack",
		"type": "value"
	},
	{
		"displayText": "MUII_Volume",
		"snippet": "MUII_Volume",
		"type": "value"
	},
	{
		"displayText": "MUII_WindowBack",
		"snippet": "MUII_WindowBack",
		"type": "value"
	},
	{
		"displayText": "MUIO_BarTitle",
		"snippet": "MUIO_BarTitle",
		"type": "value"
	},
	{
		"displayText": "MUIO_Button",
		"snippet": "MUIO_Button",
		"type": "value"
	},
	{
		"displayText": "MUIO_Checkmark",
		"snippet": "MUIO_Checkmark",
		"type": "value"
	},
	{
		"displayText": "MUIO_Cycle",
		"snippet": "MUIO_Cycle",
		"type": "value"
	},
	{
		"displayText": "MUIO_HBar",
		"snippet": "MUIO_HBar",
		"type": "value"
	},
	{
		"displayText": "MUIO_HSpace",
		"snippet": "MUIO_HSpace",
		"type": "value"
	},
	{
		"displayText": "MUIO_Label",
		"snippet": "MUIO_Label",
		"type": "value"
	},
	{
		"displayText": "MUIO_Label_Centered",
		"snippet": "MUIO_Label_Centered",
		"type": "value"
	},
	{
		"displayText": "MUIO_Label_DoubleFrame",
		"snippet": "MUIO_Label_DoubleFrame",
		"type": "value"
	},
	{
		"displayText": "MUIO_Label_FreeVert",
		"snippet": "MUIO_Label_FreeVert",
		"type": "value"
	},
	{
		"displayText": "MUIO_Label_LeftAligned",
		"snippet": "MUIO_Label_LeftAligned",
		"type": "value"
	},
	{
		"displayText": "MUIO_Label_SingleFrame",
		"snippet": "MUIO_Label_SingleFrame",
		"type": "value"
	},
	{
		"displayText": "MUIO_Menuitem",
		"snippet": "MUIO_Menuitem",
		"type": "value"
	},
	{
		"displayText": "MUIO_Menuitem_CopyStrings",
		"snippet": "MUIO_Menuitem_CopyStrings",
		"type": "value"
	},
	{
		"displayText": "MUIO_MenustripNM",
		"snippet": "MUIO_MenustripNM",
		"type": "value"
	},
	{
		"displayText": "MUIO_MenustripNM_CommandKeyCheck",
		"snippet": "MUIO_MenustripNM_CommandKeyCheck",
		"type": "value"
	},
	{
		"displayText": "MUIO_NumericButton",
		"snippet": "MUIO_NumericButton",
		"type": "value"
	},
	{
		"displayText": "MUIO_PopButton",
		"snippet": "MUIO_PopButton",
		"type": "value"
	},
	{
		"displayText": "MUIO_Radio",
		"snippet": "MUIO_Radio",
		"type": "value"
	},
	{
		"displayText": "MUIO_Slider",
		"snippet": "MUIO_Slider",
		"type": "value"
	},
	{
		"displayText": "MUIO_String",
		"snippet": "MUIO_String",
		"type": "value"
	},
	{
		"displayText": "MUIO_VBar",
		"snippet": "MUIO_VBar",
		"type": "value"
	},
	{
		"displayText": "MUIO_VSpace",
		"snippet": "MUIO_VSpace",
		"type": "value"
	},
	{
		"displayText": "MUIM_BetterString_ClearSelected()",
		"snippet": "DoMethod(${1:obj}, MUIM_BetterString_ClearSelected)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Clear all currently marked text.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_BetterString_ClearSelected&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_BetterString_DoAction(action)",
		"snippet": "DoMethod(${1:obj}, MUIM_BetterString_DoAction, ${2:ULONG action})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Perform an action.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_BetterString_FileNameStart(buffer, pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_BetterString_FileNameStart, ${2:STRPTR buffer}, ${3:LONG pos})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Locate the start of a filename.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_BetterString_FileNameStart&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_BetterString_Insert(text, pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_BetterString_Insert, ${2:STRPTR text}, ${3:LONG pos})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert the given text in a given position.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_BetterString_Insert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NFloattext_GetEntry(pos, entry)",
		"snippet": "DoMethod(${1:obj}, MUIM_NFloattext_GetEntry, ${2:LONG pos}, ${3:APTR *entry})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get an entry from the buffer.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NFloattext_GetEntry&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Clear()",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Clear)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove all entries from the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Clear&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_ColWidth(col, width)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_ColWidth, ${2:LONG col}, ${3:LONG width})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set a width for a column.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_ColWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_ColToColumn(col)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_ColToColumn, ${2:LONG col})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Convert display hook col number to visible column number.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_ColToColumn&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_ColumnToCol(column)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_ColumnToCol, ${2:LONG column})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Convert visible column number to display hook col number.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_ColumnToCol&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Compare(entry1, entry2, sort_type1, sort_type2)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Compare, ${2:APTR entry1}, ${3:APTR entry2}, ${4:ULONG sort_type1}, ${5:ULONG sort_type2})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Compare two list entries.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Compare&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Construct(entry, pool)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Construct, ${2:APTR entry}, ${3:APTR pool})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Create a new entry. (PRIVATE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Construct&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_ContextMenuBuild(mx, my, pos, column, flags, ontop)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_ContextMenuBuild, ${2:LONG mx}, ${3:LONG my}, ${4:LONG pos}, ${5:LONG column}, ${6:LONG flags}, ${7:LONG ontop})${8:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Create a context menu for the NList object.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_ContextMenuBuild&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_CopyTo(pos, filename, result, entries)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_CopyTo, ${2:LONG pos}, ${3:char *filename}, ${4:APTR *result}, ${5:APTR *entries})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Do a copy to clipboard from some list entries or strings.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_CopyTo&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_CopyToClip(pos, clipnum, entries, hook)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_CopyToClip, ${2:LONG pos}, ${3:ULONG clipnum}, ${4:APTR *entries}, ${5:struct Hook *hook})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Do a copy to clipboard from some list entries or strings.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_CopyToClip&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_CreateImage(imgobj, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_CreateImage, ${2:Object *imgobj}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Create list images from BitMap objects.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_CreateImage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_DeleteImage(listimg)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_DeleteImage, ${2:APTR listimg})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Free the resources allocated by MUIM_NList_CreateImage.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_DeleteImage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Destruct(entry, pool)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Destruct, ${2:APTR entry}, ${3:APTR pool})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Free resources allocated by an entry.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Destruct&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Display(entry, entry_pos, strings, preparses)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Display, ${2:APTR entry}, ${3:ULONG entry_pos}, ${4:STRPTR *strings}, ${5:STRPTR *preparses})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Display an entry. (PRIVATE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Display&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_DoMethod(pos, DestObj, FollowParams, method, ...)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_DoMethod, ${2:LONG pos}, ${3:APTR DestObj}, ${4:ULONG FollowParams}, ${5:ULONG method}, ${6:...})${7:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Call a method on every entry.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_DoMethod&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_DropDraw(pos, type, minx, maxx, miny, maxy)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_DropDraw, ${2:LONG pos}, ${3:LONG type}, ${4:LONG minx}, ${5:LONG maxx}, ${6:LONG miny}, ${7:LONG maxy})${8:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Draw drop mark. (PRIVATE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_DropDraw&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_DropEntryDrawErase(type, drawpos, erasepos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_DropEntryDrawErase, ${2:LONG type}, ${3:LONG drawpos}, ${4:LONG erasepos})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Erase a drop mark. (PRIVATE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_DropEntryDrawErase&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_DropType(pos, type, minx, maxx, miny, maxy, mousex, mousey)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_DropType, ${2:LONG *pos}, ${3:LONG *type}, ${4:LONG minx}, ${5:LONG maxx}, ${6:LONG miny}, ${7:LONG maxy}, ${8:LONG mousex}, ${9:LONG mousey})${10:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Determine drop type. (PRIVATE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_DropType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Exchange(pos1, pos2)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Exchange, ${2:LONG pos1}, ${3:LONG pos2})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Exchange two entries in the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Exchange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_GetEntry(pos, entry)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_GetEntry, ${2:LONG pos}, ${3:APTR *entry})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get an entry of the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_GetEntry&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_GetEntryInfo(res)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_GetEntryInfo, ${2:struct MUI_NList_GetEntryInfo *res})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get information about an entry from its number.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_GetEntryInfo&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_GetPos(entry, pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_GetPos, ${2:APTR entry}, ${3:LONG *pos})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Give the (next) entry number which have the given entry number.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_GetPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_GetSelectInfo(res)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_GetSelectInfo, ${2:struct MUI_NList_GetSelectInfo *res})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get information about selected entries state.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_GetSelectInfo&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Insert(entries, count, pos, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Insert, ${2:APTR *entries}, ${3:LONG count}, ${4:LONG pos}, ${5:LONG flags})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert new entries into the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Insert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_InsertSingle(entry, pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_InsertSingle, ${2:APTR entry}, ${3:LONG pos})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert one new entry into the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_InsertSingle&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_InsertSingleWrap(entry, pos, wrapcol, align)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_InsertSingleWrap, ${2:APTR entry}, ${3:LONG pos}, ${4:LONG wrapcol}, ${5:LONG align})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert one entry with word wrapping.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_InsertSingleWrap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_InsertWrap(entries, count, pos, wrapcol, align)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_InsertWrap, ${2:APTR *entries}, ${3:LONG count}, ${4:LONG pos}, ${5:LONG wrapcol}, ${6:LONG align})${7:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert new entries with word wrapping.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_InsertWrap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Jump(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Jump, ${2:LONG pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Scroll any entry into the visible part of a list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Jump&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Move(from, to)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Move, ${2:LONG from}, ${3:LONG to})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Move an entry from one position to another.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Move&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_NextSelected(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_NextSelected, ${2:LONG *pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Iterate through selected entries.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_NextSelected&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_PrevSelected(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_PrevSelected, ${2:LONG *pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Iterate backwards through selected entries.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_PrevSelected&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Redraw(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Redraw, ${2:LONG pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Visually update the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Redraw&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_RedrawEntry(entry)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_RedrawEntry, ${2:APTR entry})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Redraw an entry using the entry pointer.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_RedrawEntry&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Remove(pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Remove, ${2:LONG pos})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove an entry from the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Remove&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Select(pos, seltype, state)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Select, ${2:LONG pos}, ${3:LONG seltype}, ${4:LONG *state})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Select/deselect a list entry or ask if it is selected.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Select&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_SelectChange(pos, state, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_SelectChange, ${2:LONG pos}, ${3:LONG state}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Called on every selection change. (V19.98)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_SelectChange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_SetActive(pos, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_SetActive, ${2:LONG pos}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Make a specific entry the active one. (v20.125)",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_NList_SetColumnCol(column, col)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_SetColumnCol, ${2:LONG column}, ${3:LONG col})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Set which displayhook col is at the visible column.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_SetColumnCol&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Sort()",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Sort)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Sort the list.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Sort&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Sort2(sort_type, sort_type_add)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Sort2, ${2:LONG sort_type}, ${3:LONG sort_type_add})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Sort the list with \"SortType\"",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Sort2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_Sort3(sort_type, sort_type_add, which)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_Sort3, ${2:LONG sort_type}, ${3:LONG sort_type_add}, ${4:LONG which})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Sort the list with \"SortType2\"",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_Sort3&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_TestPos(x, y, res)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_TestPos, ${2:LONG x}, ${3:LONG y}, ${4:struct MUI_NList_TestPos_Result *res})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Find displayed informations of the list at a position.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_TestPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NList_UseImage(img, imgnum, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NList_UseImage, ${2:Object *img}, ${3:ULONG imgnum}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Convenient list image creation.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NList_UseImage&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Active(activemessage)",
		"snippet": "DoMethodA(${1:obj}, MUIM_NListtree_Active, ${2:struct MUIP_NListtree_Active *activemessage})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Called for every active change. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Clear(NULL, 0)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Clear, ${2:NULL}, ${3:0})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Clear the complete listview. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Clear&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Close(listnode, treenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Close, ${2:struct MUI_NListtree_TreeNode *listnode}, ${3:struct MUI_NListtree_TreeNode *treenode}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Close the specified list node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Close&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Compare(TreeNode1, TreeNode2, SortType)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Compare, ${2:struct MUI_NListtree_TreeNode *TreeNode1}, ${3:struct MUI_NListtree_TreeNode *TreeNode2}, ${4:ULONG SortType})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Compare two nodes",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_NListtree_Construct(name, userData, memPool, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Construct, ${2:STRPTR name}, ${3:APTR userData}, ${4:APTR memPool}, ${5:ULONG flags})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Create a new treenode.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_NListtree_Copy(srclistnode, srctreenode, destlistnode, desttreenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Copy, ${2:struct MUI_NListtree_TreeNode *srclistnode}, ${3:struct MUI_NListtree_TreeNode *srctreenode}, ${4:struct MUI_NListtree_TreeNode *destlistnode}, ${5:struct MUI_NListtree_TreeNode *desttreenode}, ${6:ULONG flags})${7:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Copy an entry (create it) to the spec. pos. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Copy&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_CopyToClip(ctcmessage)",
		"snippet": "DoMethodA(${1:obj}, MUIM_NListtree_CopyToClip, ${2:struct MUIP_NListtree_CopyToClip *ctcmessage})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Called for every clipboard copy action. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_CopyToClip&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Destruct(name, userData, memPool, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Destruct, ${2:STRPTR name}, ${3:APTR userData}, ${4:APTR memPool}, ${5:ULONG flags})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Free a new treenode.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_NListtree_Dispose(treeNode, entryPos, array, preparse)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Dispose, ${2:struct MUI_NListtree_TreeNode *treeNode}, ${3:LONG entryPos}, ${4:STRPTR *array}, ${5:STRPTR *preparse})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_NListtree_DoubleClick(doubleclickmsg)",
		"snippet": "DoMethodA(${1:obj}, MUIM_NListtree_DoubleClick, ${2:struct MUIP_NListtree_DoubleClick *doubleclickmsg})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Called for every double click. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_DoubleClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_DropDraw(pos, type, minx, maxx, miny, maxy)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_DropDraw, ${2:LONG pos}, ${3:LONG type}, ${4:LONG minx}, ${5:LONG maxx}, ${6:LONG miny}, ${7:LONG maxy})${8:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Draw drop mark. (PRIVATE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_DropDraw&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_DropType(pos, type, minx, maxx, miny, maxy, mousex, mousey)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_DropType, ${2:LONG *pos}, ${3:LONG *type}, ${4:LONG minx}, ${5:LONG maxx}, ${6:LONG miny}, ${7:LONG maxy}, ${8:LONG mousex}, ${9:LONG mousey})${10:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Determine drop type. (PRIVATE)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_DropType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Exchange(listnode1, treenode1, listnode2, treenode2, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Exchange, ${2:struct MUI_NListtree_TreeNode *listnode1}, ${3:struct MUI_NListtree_TreeNode *treenode1}, ${4:struct MUI_NListtree_TreeNode *listnode2}, ${5:struct MUI_NListtree_TreeNode *treenode2}, ${6:ULONG flags})${7:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Exchanges two tree nodes. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Exchange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_FindName(listnode, name, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_FindName, ${2:struct MUI_NListtree_TreeNode *listnode}, ${3:STRPTR name}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "Find node using name match. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_FindName&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_FindUserData(listnode, userdata, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_FindUserData, ${2:struct MUI_NListtree_TreeNode *listnode}, ${3:APTR userdata}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "Find node upon user data. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_FindUserData&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_GetEntry(treenode, pos, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_GetEntry, ${2:struct MUI_NListtree_TreeNode *treenode}, ${3:LONG pos}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "Get another node in relation to this. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_GetEntry&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_GetNr(treenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_GetNr, ${2:struct MUI_NListtree_TreeNode *treenode}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get the position number of a tree node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_GetNr&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Insert(name, userdata, listnode, prevtreenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Insert, ${2:STRPTR name}, ${3:APTR userdata}, ${4:struct MUI_NListtree_TreeNode *listnode}, ${5:struct MUI_NListtree_TreeNode *prevtreenode}, ${6:ULONG flags})${7:}",
		"type": "method",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "Insert an entry at the specified position. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Insert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_InsertStruct(name, userdata, delimiter, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_InsertStruct, ${2:STRPTR name}, ${3:APTR userdata}, ${4:STRPTR delimiter}, ${5:ULONG flags})${6:}",
		"type": "method",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "Insert a structure such as a path",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_InsertStruct&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Move(oldlistnode, oldtreenode, newlistnode, newtreenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Move, ${2:struct MUI_NListtree_TreeNode *oldlistnode}, ${3:struct MUI_NListtree_TreeNode *oldtreenode}, ${4:struct MUI_NListtree_TreeNode *newlistnode}, ${5:struct MUI_NListtree_TreeNode *newtreenode}, ${6:ULONG flags})${7:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Move an entry to the specified position. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Move&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_MultiTest(multimessage)",
		"snippet": "DoMethodA(${1:obj}, MUIM_NListtree_MultiTest, ${2:struct MUIP_NListtree_MultiTest *multimessage})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Called for every selection. (PRIVATE) (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_MultiTest&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_NextSelected(treenode)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_NextSelected, ${2:struct MUI_NListtree_TreeNode **treenode})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get next selected tree node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_NextSelected&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Open(listnode, treenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Open, ${2:struct MUI_NListtree_TreeNode *listnode}, ${3:struct MUI_NListtree_TreeNode *treenode}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Open the specified tree node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Open&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_PrevSelected(treenode)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_PrevSelected, ${2:struct MUI_NListtree_TreeNode **treenode})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get previous selected tree node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_PrevSelected&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Redraw(treenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Redraw, ${2:struct MUI_NListtree_TreeNode *treenode}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Redraw the specified tree node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Redraw&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Remove(listnode, treenode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Remove, ${2:struct MUI_NListtree_TreeNode *listnode}, ${3:struct MUI_NListtree_TreeNode *treenode}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Remove the specified entry(ies). (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Remove&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Rename(treenode, newname, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Rename, ${2:struct MUI_NListtree_TreeNode *treenode}, ${3:STRPTR newname}, ${4:ULONG flags})${5:}",
		"type": "method",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "Rename the specified node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Rename&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Select(treenode, seltype, selflags, state)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Select, ${2:struct MUI_NListtree_TreeNode *treenode}, ${3:LONG seltype}, ${4:LONG selflags}, ${5:LONG *state})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Select the specified tree node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Select&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_Sort(listnode, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_Sort, ${2:struct MUI_NListtree_TreeNode *listnode}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Sort the specified list node. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_Sort&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_NListtree_TestPos(xpos, ypos, testposresult)",
		"snippet": "DoMethod(${1:obj}, MUIM_NListtree_TestPos, ${2:LONG xpos}, ${3:LONG ypos}, ${4:struct MUI_NListtree_TestPos_Result *testposresult})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Get information about entry at x/y pos. (V1)",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_NListtree_TestPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_ARexxCmd(command)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_ARexxCmd, ${2:STRPTR command})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Communicate with the gadget using ARexx.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_ARexxCmd&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_BlockInfo(startx, starty, stopx, stopy)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_BlockInfo, ${2:ULONG *startx}, ${3:ULONG *starty}, ${4:ULONG *stopx}, ${5:ULONG *stopy})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Find start/stop positions of the marked block.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_BlockInfo&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_ClearText()",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_ClearText)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Clear all the text in the gadget.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_ClearText&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_CursorXYToIndex(xpos, ypos, &index)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_CursorXYToIndex, ${2:xpos}, ${3:ypos}, ${4:&index})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Convert X/Y position into an index value. (v15.47)",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_TextEditor_ExportBlock(flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_ExportBlock, ${2:ULONG flags})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Export some part of text.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_ExportBlock&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_ExportText()",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_ExportText)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Export the text using the export hook.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_ExportText&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_HandleError(errorcode)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_HandleError, ${2:ULONG errorcode})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Handle an error situation.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_HandleError&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_IndexToCursorXY(index, &xpos, &ypos)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_IndexToCursorXY, ${2:index}, ${3:&xpos}, ${4:&ypos})${5:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Convert an index value into X/Y position. (v15.47)",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_TextEditor_InsertText(text, pos)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_InsertText, ${2:STRPTR text}, ${3:LONG pos})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Insert the given text using the import hook.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_InsertText&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_MacroBegin()",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_MacroBegin)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "not yet implemented...",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_MacroBegin&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_MacroEnd()",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_MacroEnd)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "not yet implemented...",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_MacroEnd&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_MacroExecute()",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_MacroExecute)${2:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "not yet implemented...",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_MacroExecute&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_MarkText(start_x, start_y, stop_x, stop_y)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_MarkText, ${2:ULONG start_x}, ${3:ULONG start_y}, ${4:ULONG stop_x}, ${5:ULONG stop_y})${6:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Mark (select) the given area.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_MarkText&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_QueryKeyAction(keyAction)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_QueryKeyAction, ${2:ULONG keyAction})${3:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Search internal key binding list for a \"keyAction\" code.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIM_TextEditor_Replace(newstring, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_Replace, ${2:STRPTR newstring}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Replace the marked area with the given string.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_Replace&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_Search(string, flags)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_Search, ${2:STRPTR string}, ${3:ULONG flags})${4:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Search the text for the given string.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIM_TextEditor_Search&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIM_TextEditor_SetBlock(startx, starty, stopx, stopy, operation, value)",
		"snippet": "DoMethod(${1:obj}, MUIM_TextEditor_SetBlock, ${2:ULONG startx}, ${3:ULONG starty}, ${4:ULONG stopx}, ${5:ULONG stopy}, ${6:ULONG operation}, ${7:ULONG value})${8:}",
		"type": "method",
		"leftLabel": "ULONG",
		"description": "Apply an operation on a text block. (v15.29)",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_BetterString_Columns",
		"snippet": "MUIA_BetterString_Columns",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_BetterString_Columns&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_BetterString_InactiveContents",
		"snippet": "MUIA_BetterString_InactiveContents",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_BetterString_KeyDownFocus",
		"snippet": "MUIA_BetterString_KeyDownFocus",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_BetterString_KeyUpFocus",
		"snippet": "MUIA_BetterString_KeyUpFocus",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_BetterString_NoInput",
		"snippet": "MUIA_BetterString_NoInput",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_BetterString_NoInput&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_BetterString_NoNotify",
		"snippet": "MUIA_BetterString_NoNotify",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_BetterString_NoShortcuts",
		"snippet": "MUIA_BetterString_NoShortcuts",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_BetterString_SelectOnActive",
		"snippet": "MUIA_BetterString_SelectOnActive",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_BetterString_SelectSize",
		"snippet": "MUIA_BetterString_SelectSize",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_BetterString_SelectSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_BetterString_StayActive",
		"snippet": "MUIA_BetterString_StayActive",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_BetterString_StayActive&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NBalance_Pointer",
		"snippet": "MUIA_NBalance_Pointer",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG.]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NFloattext_Align",
		"snippet": "MUIA_NFloattext_Align",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NFloattext_Align&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NFloattext_Justify",
		"snippet": "MUIA_NFloattext_Justify",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NFloattext_Justify&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NFloattext_SkipChars",
		"snippet": "MUIA_NFloattext_SkipChars",
		"type": "attribute",
		"leftLabel": "char*",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NFloattext_SkipChars&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NFloattext_TabSize",
		"snippet": "MUIA_NFloattext_TabSize",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NFloattext_TabSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NFloattext_Text",
		"snippet": "MUIA_NFloattext_Text",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NFloattext_Text&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Active",
		"snippet": "MUIA_NList_Active",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_ActiveObjectOnClick",
		"snippet": "MUIA_NList_ActiveObjectOnClick",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_AdjustHeight",
		"snippet": "MUIA_NList_AdjustHeight",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_AdjustHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_AdjustWidth",
		"snippet": "MUIA_NList_AdjustWidth",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_AdjustWidth&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_AutoClip",
		"snippet": "MUIA_NList_AutoClip",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_AutoCopyToClip",
		"snippet": "MUIA_NList_AutoCopyToClip",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_AutoCopyToClip&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_AutoVisible",
		"snippet": "MUIA_NList_AutoVisible",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_AutoVisible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_ButtonClick",
		"snippet": "MUIA_NList_ButtonClick",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_ButtonClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_ClickColumn",
		"snippet": "MUIA_NList_ClickColumn",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_ClickColumn&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Columns",
		"snippet": "MUIA_NList_Columns",
		"type": "attribute",
		"leftLabel": "BYTE*",
		"description": "[ISGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Columns&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_CompareHook",
		"snippet": "MUIA_NList_CompareHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_CompareHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_CompareHook2",
		"snippet": "MUIA_NList_CompareHook2",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_CompareHook2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_ConstructHook",
		"snippet": "MUIA_NList_ConstructHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_ConstructHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_ConstructHook2",
		"snippet": "MUIA_NList_ConstructHook2",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_ConstructHook2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_CopyColumnToClipHook",
		"snippet": "MUIA_NList_CopyColumnToClipHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_CopyColumnToClipHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_CopyColumnToClipHook2",
		"snippet": "MUIA_NList_CopyColumnToClipHook2",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_CopyColumnToClipHook2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_CopyEntryToClipHook",
		"snippet": "MUIA_NList_CopyEntryToClipHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_CopyEntryToClipHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_CopyEntryToClipHook2",
		"snippet": "MUIA_NList_CopyEntryToClipHook2",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_CopyEntryToClipHook2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DefaultObjectOnClick",
		"snippet": "MUIA_NList_DefaultObjectOnClick",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DefaultObjectOnClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DefClickColumn",
		"snippet": "MUIA_NList_DefClickColumn",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DefClickColumn&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DestructHook",
		"snippet": "MUIA_NList_DestructHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DestructHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DestructHook2",
		"snippet": "MUIA_NList_DestructHook2",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DestructHook2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DisplayHook",
		"snippet": "MUIA_NList_DisplayHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DisplayHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DisplayHook2",
		"snippet": "MUIA_NList_DisplayHook2",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DisplayHook2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DisplayRecall",
		"snippet": "MUIA_NList_DisplayRecall",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DisplayRecall&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DoubleClick",
		"snippet": "MUIA_NList_DoubleClick",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DoubleClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DragColOnly",
		"snippet": "MUIA_NList_DragColOnly",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DragColOnly&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DragSortable",
		"snippet": "MUIA_NList_DragSortable",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DragSortable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DragSortInsert",
		"snippet": "MUIA_NList_DragSortInsert",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DragSortInsert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DragType",
		"snippet": "MUIA_NList_DragType",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DragType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DropMark",
		"snippet": "MUIA_NList_DropMark",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DropMark&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_DropType",
		"snippet": "MUIA_NList_DropType",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_DropType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Entries",
		"snippet": "MUIA_NList_Entries",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_EntryClick",
		"snippet": "MUIA_NList_EntryClick",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_EntryClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_EntryValueDependent",
		"snippet": "MUIA_NList_EntryValueDependent",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_EntryValueDependent&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Exports",
		"snippet": "MUIA_NList_Exports",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Exports&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_First",
		"snippet": "MUIA_NList_First",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_First&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_ForcePen",
		"snippet": "MUIA_NList_ForcePen",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_ForcePen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Format",
		"snippet": "MUIA_NList_Format",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Format&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Horiz_DeltaFactor",
		"snippet": "MUIA_NList_Horiz_DeltaFactor",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Horiz_DeltaFactor&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Horiz_Entries",
		"snippet": "MUIA_NList_Horiz_Entries",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Horiz_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Horiz_First",
		"snippet": "MUIA_NList_Horiz_First",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[.SGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Horiz_First&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Horiz_Visible",
		"snippet": "MUIA_NList_Horiz_Visible",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Horiz_Visible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_IgnoreSpecialChars",
		"snippet": "MUIA_NList_IgnoreSpecialChars",
		"type": "attribute",
		"leftLabel": "const char*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_Imports",
		"snippet": "MUIA_NList_Imports",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Imports&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Input",
		"snippet": "MUIA_NList_Input",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Input&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_InsertPosition",
		"snippet": "MUIA_NList_InsertPosition",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_InsertPosition&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_KeepActive",
		"snippet": "MUIA_NList_KeepActive",
		"type": "attribute",
		"leftLabel": "Obj*",
		"description": "[.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_KeepActive&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_KeyDownFocus",
		"snippet": "MUIA_NList_KeyDownFocus",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_KeyLeftFocus",
		"snippet": "MUIA_NList_KeyLeftFocus",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_KeyRightFocus",
		"snippet": "MUIA_NList_KeyRightFocus",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_KeyUpFocus",
		"snippet": "MUIA_NList_KeyUpFocus",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_LineHeight",
		"snippet": "MUIA_NList_LineHeight",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_LineHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_MakeActive",
		"snippet": "MUIA_NList_MakeActive",
		"type": "attribute",
		"leftLabel": "Obj*",
		"description": "[.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_MakeActive&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_MinColSortable",
		"snippet": "MUIA_NList_MinColSortable",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_MinColSortable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_MinLineHeight",
		"snippet": "MUIA_NList_MinLineHeight",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_MinLineHeight&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_MultiClick",
		"snippet": "MUIA_NList_MultiClick",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_MultiClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_MultiClickAlone",
		"snippet": "MUIA_NList_MultiClickAlone",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_MultiClickAlone&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_MultiSelect",
		"snippet": "MUIA_NList_MultiSelect",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "(V7 ) [I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_MultiSelect&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_MultiTestHook",
		"snippet": "MUIA_NList_MultiTestHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_MultiTestHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Pool",
		"snippet": "MUIA_NList_Pool",
		"type": "attribute",
		"leftLabel": "APTR",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Pool&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_PoolPuddleSize",
		"snippet": "MUIA_NList_PoolPuddleSize",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_PoolPuddleSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_PoolThreshSize",
		"snippet": "MUIA_NList_PoolThreshSize",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_PoolThreshSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_PrivateData",
		"snippet": "MUIA_NList_PrivateData",
		"type": "attribute",
		"leftLabel": "APTR",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_PrivateData&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Prop_DeltaFactor",
		"snippet": "MUIA_NList_Prop_DeltaFactor",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Prop_DeltaFactor&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Prop_Entries",
		"snippet": "MUIA_NList_Prop_Entries",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Prop_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Prop_First",
		"snippet": "MUIA_NList_Prop_First",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[.SGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Prop_First&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Prop_Visible",
		"snippet": "MUIA_NList_Prop_Visible",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..GN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Prop_Visible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Quiet",
		"snippet": "MUIA_NList_Quiet",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Quiet&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_SelectChange",
		"snippet": "MUIA_NList_SelectChange",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[...N]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_SelectChange&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_ShowDropMarks",
		"snippet": "MUIA_NList_ShowDropMarks",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_ShowDropMarks&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_SkipChars",
		"snippet": "MUIA_NList_SkipChars",
		"type": "attribute",
		"leftLabel": "char*",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_SkipChars&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_SortType",
		"snippet": "MUIA_NList_SortType",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_SortType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_SortType2",
		"snippet": "MUIA_NList_SortType2",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_SortType2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_SourceArray",
		"snippet": "MUIA_NList_SourceArray",
		"type": "attribute",
		"leftLabel": "APTR",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_SourceArray&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_SourceInsert",
		"snippet": "MUIA_NList_SourceInsert",
		"type": "attribute",
		"leftLabel": "struct MUIP_NList_InsertWrap*",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_SourceInsert&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_SourceString",
		"snippet": "MUIA_NList_SourceString",
		"type": "attribute",
		"leftLabel": "char*",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_SourceString&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_TabSize",
		"snippet": "MUIA_NList_TabSize",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_TabSize&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Title",
		"snippet": "MUIA_NList_Title",
		"type": "attribute",
		"leftLabel": "char*",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Title&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_TitleBackground",
		"snippet": "MUIA_NList_TitleBackground",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_TitleClick",
		"snippet": "MUIA_NList_TitleClick",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_TitleClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_TitleClick2",
		"snippet": "MUIA_NList_TitleClick2",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISGN]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_TitleClick2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_TitleMark",
		"snippet": "MUIA_NList_TitleMark",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_TitleMark&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_TitleMark2",
		"snippet": "MUIA_NList_TitleMark2",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_TitleMark2&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_TitlePen",
		"snippet": "MUIA_NList_TitlePen",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NList_TitleSeparator",
		"snippet": "MUIA_NList_TitleSeparator",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_TitleSeparator&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_TypeSelect",
		"snippet": "MUIA_NList_TypeSelect",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_TypeSelect&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NList_Visible",
		"snippet": "MUIA_NList_Visible",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NList_Visible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_Active",
		"snippet": "MUIA_NListtree_Active",
		"type": "attribute",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_Active&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_ActiveList",
		"snippet": "MUIA_NListtree_ActiveList",
		"type": "attribute",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_ActiveList&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_AutoVisible",
		"snippet": "MUIA_NListtree_AutoVisible",
		"type": "attribute",
		"leftLabel": "struct MUI_NListtree_TreeNode*",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_AutoVisible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_CloseHook",
		"snippet": "MUIA_NListtree_CloseHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_CloseHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_CompareHook",
		"snippet": "MUIA_NListtree_CompareHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_CompareHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_ConstructHook",
		"snippet": "MUIA_NListtree_ConstructHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_ConstructHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_CopyToClipHook",
		"snippet": "MUIA_NListtree_CopyToClipHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_CopyToClipHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DestructHook",
		"snippet": "MUIA_NListtree_DestructHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DestructHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DisplayHook",
		"snippet": "MUIA_NListtree_DisplayHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DisplayHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DoubleClick",
		"snippet": "MUIA_NListtree_DoubleClick",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DoubleClick&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DragDropSort",
		"snippet": "MUIA_NListtree_DragDropSort",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DragDropSort&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DropTarget",
		"snippet": "MUIA_NListtree_DropTarget",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DropTarget&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DropTargetPos",
		"snippet": "MUIA_NListtree_DropTargetPos",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DropTargetPos&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DropType",
		"snippet": "MUIA_NListtree_DropType",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DropType&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_DupNodeName",
		"snippet": "MUIA_NListtree_DupNodeName",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_DupNodeName&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_EmptyNodes",
		"snippet": "MUIA_NListtree_EmptyNodes",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[IS.]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NListtree_FindNameHook",
		"snippet": "MUIA_NListtree_FindNameHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_FindNameHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_FindUserDataHook",
		"snippet": "MUIA_NListtree_FindUserDataHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_FindUserDataHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_Format",
		"snippet": "MUIA_NListtree_Format",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_Format&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_MultiSelect",
		"snippet": "MUIA_NListtree_MultiSelect",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_MultiSelect&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_MultiTestHook",
		"snippet": "MUIA_NListtree_MultiTestHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_MultiTestHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_OpenHook",
		"snippet": "MUIA_NListtree_OpenHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_OpenHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_Quiet",
		"snippet": "MUIA_NListtree_Quiet",
		"type": "attribute",
		"leftLabel": "QUIET",
		"description": "[.S.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_Quiet&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_ShowTree",
		"snippet": "MUIA_NListtree_ShowTree",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_ShowTree&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_Title",
		"snippet": "MUIA_NListtree_Title",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListtree_Title&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListtree_TreeColumn",
		"snippet": "MUIA_NListtree_TreeColumn",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_NListview_Horiz_ScrollBar",
		"snippet": "MUIA_NListview_Horiz_ScrollBar",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListview_Horiz_ScrollBar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListview_HSB_Height",
		"snippet": "MUIA_NListview_HSB_Height",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListview_HSB_Height&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListview_NList",
		"snippet": "MUIA_NListview_NList",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListview_NList&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListview_Vert_ScrollBar",
		"snippet": "MUIA_NListview_Vert_ScrollBar",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListview_Vert_ScrollBar&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_NListview_VSB_Width",
		"snippet": "MUIA_NListview_VSB_Width",
		"type": "attribute",
		"leftLabel": "LONG",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_NListview_VSB_Width&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_ActiveObjectOnClick",
		"snippet": "MUIA_TextEditor_ActiveObjectOnClick",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_AreaMarked",
		"snippet": "MUIA_TextEditor_AreaMarked",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_AreaMarked&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_AutoClip",
		"snippet": "MUIA_TextEditor_AutoClip",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_AutoClip&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_ColorMap",
		"snippet": "MUIA_TextEditor_ColorMap",
		"type": "attribute",
		"leftLabel": "LONG*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_ColorMap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Columns",
		"snippet": "MUIA_TextEditor_Columns",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Columns&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Contents",
		"snippet": "MUIA_TextEditor_Contents",
		"type": "attribute",
		"leftLabel": "APTR",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Contents&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_ConvertTabs",
		"snippet": "MUIA_TextEditor_ConvertTabs",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_CursorIndex",
		"snippet": "MUIA_TextEditor_CursorIndex",
		"type": "attribute",
		"leftLabel": "ULONG (v15.47)",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_CursorPosition",
		"snippet": "MUIA_TextEditor_CursorPosition",
		"type": "attribute",
		"leftLabel": "struct Rectangle*",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_CursorPosition&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_CursorX",
		"snippet": "MUIA_TextEditor_CursorX",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_CursorX&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_CursorY",
		"snippet": "MUIA_TextEditor_CursorY",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_CursorY&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_DoubleClickHook",
		"snippet": "MUIA_TextEditor_DoubleClickHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_DoubleClickHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_ExportHook",
		"snippet": "MUIA_TextEditor_ExportHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_ExportHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_ExportWrap",
		"snippet": "MUIA_TextEditor_ExportWrap",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_ExportWrap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_FixedFont",
		"snippet": "MUIA_TextEditor_FixedFont",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[I.G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_FixedFont&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Flow",
		"snippet": "MUIA_TextEditor_Flow",
		"type": "attribute",
		"leftLabel": "UWORD",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Flow&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_HasChanged",
		"snippet": "MUIA_TextEditor_HasChanged",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_HasChanged&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_HorizontalSlider",
		"snippet": "MUIA_TextEditor_HorizontalSlider",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[IS.]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_ImportHook",
		"snippet": "MUIA_TextEditor_ImportHook",
		"type": "attribute",
		"leftLabel": "struct Hook*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_ImportHook&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_ImportWrap",
		"snippet": "MUIA_TextEditor_ImportWrap",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_ImportWrap&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_InsertMode",
		"snippet": "MUIA_TextEditor_InsertMode",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_InsertMode&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_InVirtualGroup",
		"snippet": "MUIA_TextEditor_InVirtualGroup",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_InVirtualGroup&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_KeyUpFocus",
		"snippet": "MUIA_TextEditor_KeyUpFocus",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_Keywords",
		"snippet": "MUIA_TextEditor_Keywords",
		"type": "attribute",
		"leftLabel": "STRPTR*",
		"description": "[IS.]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_MatchedKeyword",
		"snippet": "MUIA_TextEditor_MatchedKeyword",
		"type": "attribute",
		"leftLabel": "STRPTR",
		"description": "[..G]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_PasteColors",
		"snippet": "MUIA_TextEditor_PasteColors",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_PasteStyles",
		"snippet": "MUIA_TextEditor_PasteStyles",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_Pen",
		"snippet": "MUIA_TextEditor_Pen",
		"type": "attribute",
		"leftLabel": "UBYTE (do you need UWORD or ULONG?)",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Pen&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Prop_DeltaFactor",
		"snippet": "MUIA_TextEditor_Prop_DeltaFactor",
		"type": "attribute",
		"leftLabel": "ULONG (OBSOLETE)",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Prop_DeltaFactor&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Prop_Entries",
		"snippet": "MUIA_TextEditor_Prop_Entries",
		"type": "attribute",
		"leftLabel": "ULONG (OBSOLETE)",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Prop_Entries&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Prop_First",
		"snippet": "MUIA_TextEditor_Prop_First",
		"type": "attribute",
		"leftLabel": "ULONG (OBSOLETE)",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Prop_First&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Prop_Visible",
		"snippet": "MUIA_TextEditor_Prop_Visible",
		"type": "attribute",
		"leftLabel": "ULONG (OBSOLETE)",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Prop_Visible&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Quiet",
		"snippet": "MUIA_TextEditor_Quiet",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Quiet&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_ReadOnly",
		"snippet": "MUIA_TextEditor_ReadOnly",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_ReadOnly&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_RedoAvailable",
		"snippet": "MUIA_TextEditor_RedoAvailable",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_RedoAvailable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_RGBMode",
		"snippet": "MUIA_TextEditor_RGBMode",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_Rows",
		"snippet": "MUIA_TextEditor_Rows",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[I..]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Rows&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Separator",
		"snippet": "MUIA_TextEditor_Separator",
		"type": "attribute",
		"leftLabel": "UWORD*",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Separator&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_Slider",
		"snippet": "MUIA_TextEditor_Slider",
		"type": "attribute",
		"leftLabel": "Object*",
		"description": "[IS.]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_Slider&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_StyleBold",
		"snippet": "MUIA_TextEditor_StyleBold",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_StyleBold&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_StyleItalic",
		"snippet": "MUIA_TextEditor_StyleItalic",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_StyleItalic&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_StyleUnderline",
		"snippet": "MUIA_TextEditor_StyleUnderline",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_StyleUnderline&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_TabSize",
		"snippet": "MUIA_TextEditor_TabSize",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_TypeAndSpell",
		"snippet": "MUIA_TextEditor_TypeAndSpell",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[.SG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_TypeAndSpell&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_UndoAvailable",
		"snippet": "MUIA_TextEditor_UndoAvailable",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[..G]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_UndoAvailable&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_UndoLevels",
		"snippet": "MUIA_TextEditor_UndoLevels",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_WrapBorder",
		"snippet": "MUIA_TextEditor_WrapBorder",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amidevhelp/phpwebdev.php?keyword=MUIA_TextEditor_WrapBorder&funcgroup=MUI&action=Search"
	},
	{
		"displayText": "MUIA_TextEditor_WrapMode",
		"snippet": "MUIA_TextEditor_WrapMode",
		"type": "attribute",
		"leftLabel": "ULONG",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "MUIA_TextEditor_WrapWords",
		"snippet": "MUIA_TextEditor_WrapWords",
		"type": "attribute",
		"leftLabel": "BOOL",
		"description": "[ISG]",
		"descriptionMoreURL": ""
	},
	{
  	"displayText": "MUIV_BetterString_DoAction_Copy",
  	"snippet": "MUIV_BetterString_DoAction_Copy",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_Cut",
  	"snippet": "MUIV_BetterString_DoAction_Cut",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_DecreaseNum",
  	"snippet": "MUIV_BetterString_DoAction_DecreaseNum",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_DecToHex",
  	"snippet": "MUIV_BetterString_DoAction_DecToHex",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_Delete",
  	"snippet": "MUIV_BetterString_DoAction_Delete",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_HexToDec",
  	"snippet": "MUIV_BetterString_DoAction_HexToDec",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_IncreaseNum",
  	"snippet": "MUIV_BetterString_DoAction_IncreaseNum",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_NextFileComp",
  	"snippet": "MUIV_BetterString_DoAction_NextFileComp",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_Paste",
  	"snippet": "MUIV_BetterString_DoAction_Paste",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_PrevFileComp",
  	"snippet": "MUIV_BetterString_DoAction_PrevFileComp",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_Redo",
  	"snippet": "MUIV_BetterString_DoAction_Redo",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_Revert",
  	"snippet": "MUIV_BetterString_DoAction_Revert",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_SelectAll",
  	"snippet": "MUIV_BetterString_DoAction_SelectAll",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_SelectNone",
  	"snippet": "MUIV_BetterString_DoAction_SelectNone",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_ToggleCase",
  	"snippet": "MUIV_BetterString_DoAction_ToggleCase",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_ToggleCaseWord",
  	"snippet": "MUIV_BetterString_DoAction_ToggleCaseWord",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_DoAction_Undo",
  	"snippet": "MUIV_BetterString_DoAction_Undo",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_Insert_BufferPos",
  	"snippet": "MUIV_BetterString_Insert_BufferPos",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_Insert_EndOfString",
  	"snippet": "MUIV_BetterString_Insert_EndOfString",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_BetterString_Insert_StartOfString",
  	"snippet": "MUIV_BetterString_Insert_StartOfString",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NBalance_Pointer_Off",
  	"snippet": "MUIV_NBalance_Pointer_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NBalance_Pointer_Standard",
  	"snippet": "MUIV_NBalance_Pointer_Standard",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NLCT_Failed",
  	"snippet": "MUIV_NLCT_Failed",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NLCT_Success",
  	"snippet": "MUIV_NLCT_Success",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NLCT_WriteErr",
  	"snippet": "MUIV_NLCT_WriteErr",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Active_Bottom",
  	"snippet": "MUIV_NList_Active_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Active_Down",
  	"snippet": "MUIV_NList_Active_Down",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Active_Off",
  	"snippet": "MUIV_NList_Active_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Active_PageDown",
  	"snippet": "MUIV_NList_Active_PageDown",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Active_PageUp",
  	"snippet": "MUIV_NList_Active_PageUp",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Active_Top",
  	"snippet": "MUIV_NList_Active_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Active_Up",
  	"snippet": "MUIV_NList_Active_Up",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_AppValue",
  	"snippet": "MUIV_NList_AppValue",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ColWidth_All",
  	"snippet": "MUIV_NList_ColWidth_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ColWidth_Default",
  	"snippet": "MUIV_NList_ColWidth_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ColWidth_Get",
  	"snippet": "MUIV_NList_ColWidth_Get",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ConstructHook_String",
  	"snippet": "MUIV_NList_ConstructHook_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ContextMenu_Always",
  	"snippet": "MUIV_NList_ContextMenu_Always",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ContextMenu_Default",
  	"snippet": "MUIV_NList_ContextMenu_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ContextMenu_Never",
  	"snippet": "MUIV_NList_ContextMenu_Never",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ContextMenu_TopOnly",
  	"snippet": "MUIV_NList_ContextMenu_TopOnly",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyTo_Active",
  	"snippet": "MUIV_NList_CopyTo_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyTo_All",
  	"snippet": "MUIV_NList_CopyTo_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyTo_Entries",
  	"snippet": "MUIV_NList_CopyTo_Entries",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyTo_Entry",
  	"snippet": "MUIV_NList_CopyTo_Entry",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyTo_Selected",
  	"snippet": "MUIV_NList_CopyTo_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyToClip_Active",
  	"snippet": "MUIV_NList_CopyToClip_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyToClip_All",
  	"snippet": "MUIV_NList_CopyToClip_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyToClip_Entries",
  	"snippet": "MUIV_NList_CopyToClip_Entries",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyToClip_Entry",
  	"snippet": "MUIV_NList_CopyToClip_Entry",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyToClip_Selected",
  	"snippet": "MUIV_NList_CopyToClip_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyToClip_String",
  	"snippet": "MUIV_NList_CopyToClip_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_CopyToClip_Strings",
  	"snippet": "MUIV_NList_CopyToClip_Strings",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DestructHook_String",
  	"snippet": "MUIV_NList_DestructHook_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DoMethod_Active",
  	"snippet": "MUIV_NList_DoMethod_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DoMethod_All",
  	"snippet": "MUIV_NList_DoMethod_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DoMethod_App",
  	"snippet": "MUIV_NList_DoMethod_App",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DoMethod_Entry",
  	"snippet": "MUIV_NList_DoMethod_Entry",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DoMethod_Selected",
  	"snippet": "MUIV_NList_DoMethod_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DoMethod_Self",
  	"snippet": "MUIV_NList_DoMethod_Self",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DragType_Borders",
  	"snippet": "MUIV_NList_DragType_Borders",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DragType_Default",
  	"snippet": "MUIV_NList_DragType_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DragType_Immediate",
  	"snippet": "MUIV_NList_DragType_Immediate",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DragType_None",
  	"snippet": "MUIV_NList_DragType_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DragType_Qualifier",
  	"snippet": "MUIV_NList_DragType_Qualifier",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DropType_Above",
  	"snippet": "MUIV_NList_DropType_Above",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DropType_Below",
  	"snippet": "MUIV_NList_DropType_Below",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DropType_Mask",
  	"snippet": "MUIV_NList_DropType_Mask",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_DropType_Onto",
  	"snippet": "MUIV_NList_DropType_Onto",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_EntryPosValue",
  	"snippet": "MUIV_NList_EntryPosValue",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_EntryValue",
  	"snippet": "MUIV_NList_EntryValue",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exchange_Active",
  	"snippet": "MUIV_NList_Exchange_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exchange_Bottom",
  	"snippet": "MUIV_NList_Exchange_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exchange_Next",
  	"snippet": "MUIV_NList_Exchange_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exchange_Previous",
  	"snippet": "MUIV_NList_Exchange_Previous",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exchange_Top",
  	"snippet": "MUIV_NList_Exchange_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exports_Active",
  	"snippet": "MUIV_NList_Exports_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exports_All",
  	"snippet": "MUIV_NList_Exports_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exports_ColOrder",
  	"snippet": "MUIV_NList_Exports_ColOrder",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exports_Cols",
  	"snippet": "MUIV_NList_Exports_Cols",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exports_ColWidth",
  	"snippet": "MUIV_NList_Exports_ColWidth",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exports_First",
  	"snippet": "MUIV_NList_Exports_First",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Exports_Selected",
  	"snippet": "MUIV_NList_Exports_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_First_Bottom",
  	"snippet": "MUIV_NList_First_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_First_Down",
  	"snippet": "MUIV_NList_First_Down",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_First_PageDown",
  	"snippet": "MUIV_NList_First_PageDown",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_First_PageUp",
  	"snippet": "MUIV_NList_First_PageUp",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_First_Top",
  	"snippet": "MUIV_NList_First_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_First_Up",
  	"snippet": "MUIV_NList_First_Up",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Font_Fixed",
  	"snippet": "MUIV_NList_Font_Fixed",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Font_Little",
  	"snippet": "MUIV_NList_Font_Little",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ForcePen_Default",
  	"snippet": "MUIV_NList_ForcePen_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ForcePen_Off",
  	"snippet": "MUIV_NList_ForcePen_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_ForcePen_On",
  	"snippet": "MUIV_NList_ForcePen_On",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_GetEntry_Active",
  	"snippet": "MUIV_NList_GetEntry_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_GetEntryInfo_Line",
  	"snippet": "MUIV_NList_GetEntryInfo_Line",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_GetPos_End",
  	"snippet": "MUIV_NList_GetPos_End",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_GetPos_Start",
  	"snippet": "MUIV_NList_GetPos_Start",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Imports_Active",
  	"snippet": "MUIV_NList_Imports_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Imports_All",
  	"snippet": "MUIV_NList_Imports_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Imports_ColOrder",
  	"snippet": "MUIV_NList_Imports_ColOrder",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Imports_Cols",
  	"snippet": "MUIV_NList_Imports_Cols",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Imports_ColWidth",
  	"snippet": "MUIV_NList_Imports_ColWidth",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Imports_First",
  	"snippet": "MUIV_NList_Imports_First",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Imports_Selected",
  	"snippet": "MUIV_NList_Imports_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Insert_Active",
  	"snippet": "MUIV_NList_Insert_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Insert_Bottom",
  	"snippet": "MUIV_NList_Insert_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Insert_Flag_Raw",
  	"snippet": "MUIV_NList_Insert_Flag_Raw",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Insert_Sorted",
  	"snippet": "MUIV_NList_Insert_Sorted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Insert_Top",
  	"snippet": "MUIV_NList_Insert_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Jump_Active",
  	"snippet": "MUIV_NList_Jump_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Jump_Active_Center",
  	"snippet": "MUIV_NList_Jump_Active_Center",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Menu_Default_All",
  	"snippet": "MUIV_NList_Menu_Default_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Menu_Default_This",
  	"snippet": "MUIV_NList_Menu_Default_This",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Menu_DefOrder_All",
  	"snippet": "MUIV_NList_Menu_DefOrder_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Menu_DefOrder_This",
  	"snippet": "MUIV_NList_Menu_DefOrder_This",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Menu_DefWidth_All",
  	"snippet": "MUIV_NList_Menu_DefWidth_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Menu_DefWidth_This",
  	"snippet": "MUIV_NList_Menu_DefWidth_This",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Move_Active",
  	"snippet": "MUIV_NList_Move_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Move_Bottom",
  	"snippet": "MUIV_NList_Move_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Move_Next",
  	"snippet": "MUIV_NList_Move_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Move_Previous",
  	"snippet": "MUIV_NList_Move_Previous",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Move_Selected",
  	"snippet": "MUIV_NList_Move_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Move_Top",
  	"snippet": "MUIV_NList_Move_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_MultiSelect_Always",
  	"snippet": "MUIV_NList_MultiSelect_Always",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_MultiSelect_Default",
  	"snippet": "MUIV_NList_MultiSelect_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_MultiSelect_None",
  	"snippet": "MUIV_NList_MultiSelect_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_MultiSelect_Shifted",
  	"snippet": "MUIV_NList_MultiSelect_Shifted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_NextSelected_End",
  	"snippet": "MUIV_NList_NextSelected_End",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_NextSelected_Start",
  	"snippet": "MUIV_NList_NextSelected_Start",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_PrevSelected_End",
  	"snippet": "MUIV_NList_PrevSelected_End",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_PrevSelected_Start",
  	"snippet": "MUIV_NList_PrevSelected_Start",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Quiet_None",
  	"snippet": "MUIV_NList_Quiet_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Quiet_Visual",
  	"snippet": "MUIV_NList_Quiet_Visual",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Redraw_Active",
  	"snippet": "MUIV_NList_Redraw_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Redraw_All",
  	"snippet": "MUIV_NList_Redraw_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Redraw_Title",
  	"snippet": "MUIV_NList_Redraw_Title",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Remove_Active",
  	"snippet": "MUIV_NList_Remove_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Remove_First",
  	"snippet": "MUIV_NList_Remove_First",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Remove_Last",
  	"snippet": "MUIV_NList_Remove_Last",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Remove_Selected",
  	"snippet": "MUIV_NList_Remove_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Select_Active",
  	"snippet": "MUIV_NList_Select_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Select_All",
  	"snippet": "MUIV_NList_Select_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Select_Ask",
  	"snippet": "MUIV_NList_Select_Ask",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Select_Off",
  	"snippet": "MUIV_NList_Select_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Select_On",
  	"snippet": "MUIV_NList_Select_On",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Select_Toggle",
  	"snippet": "MUIV_NList_Select_Toggle",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SelectChange_Flag_Multi",
  	"snippet": "MUIV_NList_SelectChange_Flag_Multi",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SelfValue",
  	"snippet": "MUIV_NList_SelfValue",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SetActive_Entry",
  	"snippet": "MUIV_NList_SetActive_Entry",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SetActive_Jump_Center",
  	"snippet": "MUIV_NList_SetActive_Jump_Center",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SetColumnCol_Default",
  	"snippet": "MUIV_NList_SetColumnCol_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Sort3_SortType_1",
  	"snippet": "MUIV_NList_Sort3_SortType_1",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Sort3_SortType_2",
  	"snippet": "MUIV_NList_Sort3_SortType_2",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_Sort3_SortType_Both",
  	"snippet": "MUIV_NList_Sort3_SortType_Both",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SortTypeAdd_2Values",
  	"snippet": "MUIV_NList_SortTypeAdd_2Values",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SortTypeAdd_4Values",
  	"snippet": "MUIV_NList_SortTypeAdd_4Values",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SortTypeAdd_None",
  	"snippet": "MUIV_NList_SortTypeAdd_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SortTypeAdd_xxx",
  	"snippet": "MUIV_NList_SortTypeAdd_xxx",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_SortTypeValue_Mask",
  	"snippet": "MUIV_NList_SortTypeValue_Mask",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark_Box",
  	"snippet": "MUIV_NList_TitleMark_Box",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark_Circle",
  	"snippet": "MUIV_NList_TitleMark_Circle",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark_Down",
  	"snippet": "MUIV_NList_TitleMark_Down",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark_None",
  	"snippet": "MUIV_NList_TitleMark_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark_Up",
  	"snippet": "MUIV_NList_TitleMark_Up",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark2_Box",
  	"snippet": "MUIV_NList_TitleMark2_Box",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark2_Circle",
  	"snippet": "MUIV_NList_TitleMark2_Circle",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark2_Down",
  	"snippet": "MUIV_NList_TitleMark2_Down",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark2_None",
  	"snippet": "MUIV_NList_TitleMark2_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TitleMark2_Up",
  	"snippet": "MUIV_NList_TitleMark2_Up",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TypeSelect_Char",
  	"snippet": "MUIV_NList_TypeSelect_Char",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_TypeSelect_Line",
  	"snippet": "MUIV_NList_TypeSelect_Line",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NList_UseImage_All",
  	"snippet": "MUIV_NList_UseImage_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Active_First",
  	"snippet": "MUIV_NListtree_Active_First",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Active_FirstVisible",
  	"snippet": "MUIV_NListtree_Active_FirstVisible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Active_LastVisible",
  	"snippet": "MUIV_NListtree_Active_LastVisible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Active_Off",
  	"snippet": "MUIV_NListtree_Active_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Active_Parent",
  	"snippet": "MUIV_NListtree_Active_Parent",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_ActiveList_Off",
  	"snippet": "MUIV_NListtree_ActiveList_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_AutoVisible_Expand",
  	"snippet": "MUIV_NListtree_AutoVisible_Expand",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_AutoVisible_FirstOpen",
  	"snippet": "MUIV_NListtree_AutoVisible_FirstOpen",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_AutoVisible_Normal",
  	"snippet": "MUIV_NListtree_AutoVisible_Normal",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_AutoVisible_Off",
  	"snippet": "MUIV_NListtree_AutoVisible_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Close_ListNode_Active",
  	"snippet": "MUIV_NListtree_Close_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Close_ListNode_Parent",
  	"snippet": "MUIV_NListtree_Close_ListNode_Parent",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Close_ListNode_Root",
  	"snippet": "MUIV_NListtree_Close_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Close_TreeNode_Active",
  	"snippet": "MUIV_NListtree_Close_TreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Close_TreeNode_All",
  	"snippet": "MUIV_NListtree_Close_TreeNode_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Close_TreeNode_Head",
  	"snippet": "MUIV_NListtree_Close_TreeNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Close_TreeNode_Tail",
  	"snippet": "MUIV_NListtree_Close_TreeNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_CompareHook_Head",
  	"snippet": "MUIV_NListtree_CompareHook_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_CompareHook_LeavesBottom",
  	"snippet": "MUIV_NListtree_CompareHook_LeavesBottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_CompareHook_LeavesMixed",
  	"snippet": "MUIV_NListtree_CompareHook_LeavesMixed",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_CompareHook_LeavesTop",
  	"snippet": "MUIV_NListtree_CompareHook_LeavesTop",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_CompareHook_Tail",
  	"snippet": "MUIV_NListtree_CompareHook_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_ConstructHook_Flag_AutoCreate",
  	"snippet": "MUIV_NListtree_ConstructHook_Flag_AutoCreate",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_ConstructHook_String",
  	"snippet": "MUIV_NListtree_ConstructHook_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_DestListNode_Active",
  	"snippet": "MUIV_NListtree_Copy_DestListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_DestListNode_Root",
  	"snippet": "MUIV_NListtree_Copy_DestListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_DestTreeNode_Active",
  	"snippet": "MUIV_NListtree_Copy_DestTreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_DestTreeNode_Head",
  	"snippet": "MUIV_NListtree_Copy_DestTreeNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_DestTreeNode_Sorted",
  	"snippet": "MUIV_NListtree_Copy_DestTreeNode_Sorted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_DestTreeNode_Tail",
  	"snippet": "MUIV_NListtree_Copy_DestTreeNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_Flag_KeepStructure",
  	"snippet": "MUIV_NListtree_Copy_Flag_KeepStructure",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_SourceListNode_Active",
  	"snippet": "MUIV_NListtree_Copy_SourceListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_SourceListNode_Root",
  	"snippet": "MUIV_NListtree_Copy_SourceListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_SourceTreeNode_Active",
  	"snippet": "MUIV_NListtree_Copy_SourceTreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_SourceTreeNode_Head",
  	"snippet": "MUIV_NListtree_Copy_SourceTreeNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Copy_SourceTreeNode_Tail",
  	"snippet": "MUIV_NListtree_Copy_SourceTreeNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_CopyToClip_Active",
  	"snippet": "MUIV_NListtree_CopyToClip_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_CopyToClipHook_Default",
  	"snippet": "MUIV_NListtree_CopyToClipHook_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DestructHook_String",
  	"snippet": "MUIV_NListtree_DestructHook_String",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DoubleClick_All",
  	"snippet": "MUIV_NListtree_DoubleClick_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DoubleClick_NoTrigger",
  	"snippet": "MUIV_NListtree_DoubleClick_NoTrigger",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DoubleClick_Off",
  	"snippet": "MUIV_NListtree_DoubleClick_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DoubleClick_Tree",
  	"snippet": "MUIV_NListtree_DoubleClick_Tree",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DropType_Above",
  	"snippet": "MUIV_NListtree_DropType_Above",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DropType_Below",
  	"snippet": "MUIV_NListtree_DropType_Below",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DropType_None",
  	"snippet": "MUIV_NListtree_DropType_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_DropType_Onto",
  	"snippet": "MUIV_NListtree_DropType_Onto",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_ListNode1_Active",
  	"snippet": "MUIV_NListtree_Exchange_ListNode1_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_ListNode1_Root",
  	"snippet": "MUIV_NListtree_Exchange_ListNode1_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_ListNode2_Active",
  	"snippet": "MUIV_NListtree_Exchange_ListNode2_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_ListNode2_Root",
  	"snippet": "MUIV_NListtree_Exchange_ListNode2_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode1_Active",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode1_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode1_Head",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode1_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode1_Tail",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode1_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode2_Active",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode2_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode2_Down",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode2_Down",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode2_Head",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode2_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode2_Tail",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode2_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Exchange_TreeNode2_Up",
  	"snippet": "MUIV_NListtree_Exchange_TreeNode2_Up",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_Flag_Activate",
  	"snippet": "MUIV_NListtree_FindName_Flag_Activate",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_Flag_SameLevel",
  	"snippet": "MUIV_NListtree_FindName_Flag_SameLevel",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_Flag_Selected",
  	"snippet": "MUIV_NListtree_FindName_Flag_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_Flag_StartNode",
  	"snippet": "MUIV_NListtree_FindName_Flag_StartNode",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_Flag_Visible",
  	"snippet": "MUIV_NListtree_FindName_Flag_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_ListNode_Active",
  	"snippet": "MUIV_NListtree_FindName_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_ListNode_Root",
  	"snippet": "MUIV_NListtree_FindName_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_SameLevel",
  	"snippet": "MUIV_NListtree_FindName_SameLevel",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindName_Visible",
  	"snippet": "MUIV_NListtree_FindName_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindNameHook_CaseInsensitive",
  	"snippet": "MUIV_NListtree_FindNameHook_CaseInsensitive",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindNameHook_CaseSensitive",
  	"snippet": "MUIV_NListtree_FindNameHook_CaseSensitive",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindNameHook_Part",
  	"snippet": "MUIV_NListtree_FindNameHook_Part",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindNameHook_PartCaseInsensitive",
  	"snippet": "MUIV_NListtree_FindNameHook_PartCaseInsensitive",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindNameHook_PointerCompare",
  	"snippet": "MUIV_NListtree_FindNameHook_PointerCompare",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_Flag_Activate",
  	"snippet": "MUIV_NListtree_FindUserData_Flag_Activate",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_Flag_SameLevel",
  	"snippet": "MUIV_NListtree_FindUserData_Flag_SameLevel",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_Flag_Selected",
  	"snippet": "MUIV_NListtree_FindUserData_Flag_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_Flag_StartNode",
  	"snippet": "MUIV_NListtree_FindUserData_Flag_StartNode",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_Flag_Visible",
  	"snippet": "MUIV_NListtree_FindUserData_Flag_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_ListNode_Active",
  	"snippet": "MUIV_NListtree_FindUserData_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_ListNode_Root",
  	"snippet": "MUIV_NListtree_FindUserData_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_SameLevel",
  	"snippet": "MUIV_NListtree_FindUserData_SameLevel",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserData_Visible",
  	"snippet": "MUIV_NListtree_FindUserData_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserDataHook_CaseInsensitive",
  	"snippet": "MUIV_NListtree_FindUserDataHook_CaseInsensitive",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserDataHook_CaseSensitive",
  	"snippet": "MUIV_NListtree_FindUserDataHook_CaseSensitive",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserDataHook_Part",
  	"snippet": "MUIV_NListtree_FindUserDataHook_Part",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserDataHook_PartCaseInsensitive",
  	"snippet": "MUIV_NListtree_FindUserDataHook_PartCaseInsensitive",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_FindUserDataHook_PointerCompare",
  	"snippet": "MUIV_NListtree_FindUserDataHook_PointerCompare",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Flag_SameLevel",
  	"snippet": "MUIV_NListtree_GetEntry_Flag_SameLevel",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Flag_Visible",
  	"snippet": "MUIV_NListtree_GetEntry_Flag_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_ListNode_Active",
  	"snippet": "MUIV_NListtree_GetEntry_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_ListNode_Root",
  	"snippet": "MUIV_NListtree_GetEntry_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Position_Active",
  	"snippet": "MUIV_NListtree_GetEntry_Position_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Position_Head",
  	"snippet": "MUIV_NListtree_GetEntry_Position_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Position_Next",
  	"snippet": "MUIV_NListtree_GetEntry_Position_Next",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Position_Parent",
  	"snippet": "MUIV_NListtree_GetEntry_Position_Parent",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Position_Previous",
  	"snippet": "MUIV_NListtree_GetEntry_Position_Previous",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetEntry_Position_Tail",
  	"snippet": "MUIV_NListtree_GetEntry_Position_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetNr_Flag_CountAll",
  	"snippet": "MUIV_NListtree_GetNr_Flag_CountAll",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetNr_Flag_CountLevel",
  	"snippet": "MUIV_NListtree_GetNr_Flag_CountLevel",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetNr_Flag_CountList",
  	"snippet": "MUIV_NListtree_GetNr_Flag_CountList",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetNr_Flag_ListEmpty",
  	"snippet": "MUIV_NListtree_GetNr_Flag_ListEmpty",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetNr_Flag_Visible",
  	"snippet": "MUIV_NListtree_GetNr_Flag_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_GetNr_TreeNode_Active",
  	"snippet": "MUIV_NListtree_GetNr_TreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_Flag_Active",
  	"snippet": "MUIV_NListtree_Insert_Flag_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_Flag_NextNode",
  	"snippet": "MUIV_NListtree_Insert_Flag_NextNode",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_ListNode_Active",
  	"snippet": "MUIV_NListtree_Insert_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_ListNode_ActiveFallback",
  	"snippet": "MUIV_NListtree_Insert_ListNode_ActiveFallback",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_ListNode_LastInserted",
  	"snippet": "MUIV_NListtree_Insert_ListNode_LastInserted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_ListNode_Root",
  	"snippet": "MUIV_NListtree_Insert_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_PrevNode_Active",
  	"snippet": "MUIV_NListtree_Insert_PrevNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_PrevNode_Head",
  	"snippet": "MUIV_NListtree_Insert_PrevNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_PrevNode_Sorted",
  	"snippet": "MUIV_NListtree_Insert_PrevNode_Sorted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_PrevNode_Tail",
  	"snippet": "MUIV_NListtree_Insert_PrevNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Insert_Sort",
  	"snippet": "MUIV_NListtree_Insert_Sort",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_Flag_KeepStructure",
  	"snippet": "MUIV_NListtree_Move_Flag_KeepStructure",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_NewListNode_Active",
  	"snippet": "MUIV_NListtree_Move_NewListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_NewListNode_Root",
  	"snippet": "MUIV_NListtree_Move_NewListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_NewTreeNode_Active",
  	"snippet": "MUIV_NListtree_Move_NewTreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_NewTreeNode_Head",
  	"snippet": "MUIV_NListtree_Move_NewTreeNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_NewTreeNode_Sorted",
  	"snippet": "MUIV_NListtree_Move_NewTreeNode_Sorted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_NewTreeNode_Tail",
  	"snippet": "MUIV_NListtree_Move_NewTreeNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_OldListNode_Active",
  	"snippet": "MUIV_NListtree_Move_OldListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_OldListNode_Root",
  	"snippet": "MUIV_NListtree_Move_OldListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_OldTreeNode_Active",
  	"snippet": "MUIV_NListtree_Move_OldTreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_OldTreeNode_Head",
  	"snippet": "MUIV_NListtree_Move_OldTreeNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Move_OldTreeNode_Tail",
  	"snippet": "MUIV_NListtree_Move_OldTreeNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_MultiSelect_Always",
  	"snippet": "MUIV_NListtree_MultiSelect_Always",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_MultiSelect_Default",
  	"snippet": "MUIV_NListtree_MultiSelect_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_MultiSelect_None",
  	"snippet": "MUIV_NListtree_MultiSelect_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_MultiSelect_Shifted",
  	"snippet": "MUIV_NListtree_MultiSelect_Shifted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_NextSelected_End",
  	"snippet": "MUIV_NListtree_NextSelected_End",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_NextSelected_Start",
  	"snippet": "MUIV_NListtree_NextSelected_Start",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Open_ListNode_Active",
  	"snippet": "MUIV_NListtree_Open_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Open_ListNode_Parent",
  	"snippet": "MUIV_NListtree_Open_ListNode_Parent",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Open_ListNode_Root",
  	"snippet": "MUIV_NListtree_Open_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Open_TreeNode_Active",
  	"snippet": "MUIV_NListtree_Open_TreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Open_TreeNode_All",
  	"snippet": "MUIV_NListtree_Open_TreeNode_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Open_TreeNode_Head",
  	"snippet": "MUIV_NListtree_Open_TreeNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Open_TreeNode_Tail",
  	"snippet": "MUIV_NListtree_Open_TreeNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_PrevSelected_End",
  	"snippet": "MUIV_NListtree_PrevSelected_End",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_PrevSelected_Start",
  	"snippet": "MUIV_NListtree_PrevSelected_Start",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Redraw_Active",
  	"snippet": "MUIV_NListtree_Redraw_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Redraw_All",
  	"snippet": "MUIV_NListtree_Redraw_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Redraw_Flag_Nr",
  	"snippet": "MUIV_NListtree_Redraw_Flag_Nr",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Remove_ListNode_Active",
  	"snippet": "MUIV_NListtree_Remove_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Remove_ListNode_Root",
  	"snippet": "MUIV_NListtree_Remove_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Remove_TreeNode_Active",
  	"snippet": "MUIV_NListtree_Remove_TreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Remove_TreeNode_All",
  	"snippet": "MUIV_NListtree_Remove_TreeNode_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Remove_TreeNode_Head",
  	"snippet": "MUIV_NListtree_Remove_TreeNode_Head",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Remove_TreeNode_Selected",
  	"snippet": "MUIV_NListtree_Remove_TreeNode_Selected",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Remove_TreeNode_Tail",
  	"snippet": "MUIV_NListtree_Remove_TreeNode_Tail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Rename_Flag_NoRefresh",
  	"snippet": "MUIV_NListtree_Rename_Flag_NoRefresh",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Rename_Flag_User",
  	"snippet": "MUIV_NListtree_Rename_Flag_User",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Rename_TreeNode_Active",
  	"snippet": "MUIV_NListtree_Rename_TreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_Active",
  	"snippet": "MUIV_NListtree_Select_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_All",
  	"snippet": "MUIV_NListtree_Select_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_Ask",
  	"snippet": "MUIV_NListtree_Select_Ask",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_Flag_Force",
  	"snippet": "MUIV_NListtree_Select_Flag_Force",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_Off",
  	"snippet": "MUIV_NListtree_Select_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_On",
  	"snippet": "MUIV_NListtree_Select_On",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_Toggle",
  	"snippet": "MUIV_NListtree_Select_Toggle",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Select_Visible",
  	"snippet": "MUIV_NListtree_Select_Visible",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Sort_Flag_RecursiveAll",
  	"snippet": "MUIV_NListtree_Sort_Flag_RecursiveAll",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Sort_Flag_RecursiveOpen",
  	"snippet": "MUIV_NListtree_Sort_Flag_RecursiveOpen",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Sort_ListNode_Active",
  	"snippet": "MUIV_NListtree_Sort_ListNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Sort_ListNode_Root",
  	"snippet": "MUIV_NListtree_Sort_ListNode_Root",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_Sort_TreeNode_Active",
  	"snippet": "MUIV_NListtree_Sort_TreeNode_Active",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_TestPos_Result_Above",
  	"snippet": "MUIV_NListtree_TestPos_Result_Above",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_TestPos_Result_Below",
  	"snippet": "MUIV_NListtree_TestPos_Result_Below",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_TestPos_Result_Onto",
  	"snippet": "MUIV_NListtree_TestPos_Result_Onto",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListtree_TestPos_Result_Sorted",
  	"snippet": "MUIV_NListtree_TestPos_Result_Sorted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_HSB_Always",
  	"snippet": "MUIV_NListview_HSB_Always",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_HSB_Auto",
  	"snippet": "MUIV_NListview_HSB_Auto",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_HSB_Default",
  	"snippet": "MUIV_NListview_HSB_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_HSB_FullAuto",
  	"snippet": "MUIV_NListview_HSB_FullAuto",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_HSB_None",
  	"snippet": "MUIV_NListview_HSB_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_HSB_Off",
  	"snippet": "MUIV_NListview_HSB_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_HSB_On",
  	"snippet": "MUIV_NListview_HSB_On",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_Always",
  	"snippet": "MUIV_NListview_VSB_Always",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_Auto",
  	"snippet": "MUIV_NListview_VSB_Auto",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_Default",
  	"snippet": "MUIV_NListview_VSB_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_FullAuto",
  	"snippet": "MUIV_NListview_VSB_FullAuto",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_Left",
  	"snippet": "MUIV_NListview_VSB_Left",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_None",
  	"snippet": "MUIV_NListview_VSB_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_Off",
  	"snippet": "MUIV_NListview_VSB_Off",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_NListview_VSB_On",
  	"snippet": "MUIV_NListview_VSB_On",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_ExportHook_EMail",
  	"snippet": "MUIV_TextEditor_ExportHook_EMail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_ExportHook_NoStyle",
  	"snippet": "MUIV_TextEditor_ExportHook_NoStyle",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_Flow_Center",
  	"snippet": "MUIV_TextEditor_Flow_Center",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_Flow_Justified",
  	"snippet": "MUIV_TextEditor_Flow_Justified",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_Flow_Left",
  	"snippet": "MUIV_TextEditor_Flow_Left",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_Flow_Right",
  	"snippet": "MUIV_TextEditor_Flow_Right",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_ImportHook_EMail",
  	"snippet": "MUIV_TextEditor_ImportHook_EMail",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_ImportHook_MIME",
  	"snippet": "MUIV_TextEditor_ImportHook_MIME",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_ImportHook_MIMEQuoted",
  	"snippet": "MUIV_TextEditor_ImportHook_MIMEQuoted",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_ImportHook_Plain",
  	"snippet": "MUIV_TextEditor_ImportHook_Plain",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_InsertText_Bottom",
  	"snippet": "MUIV_TextEditor_InsertText_Bottom",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_InsertText_Cursor",
  	"snippet": "MUIV_TextEditor_InsertText_Cursor",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_InsertText_Top",
  	"snippet": "MUIV_TextEditor_InsertText_Top",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_KeyAction_",
  	"snippet": "MUIV_TextEditor_KeyAction_",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_MarkText_All",
  	"snippet": "MUIV_TextEditor_MarkText_All",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_MarkText_None",
  	"snippet": "MUIV_TextEditor_MarkText_None",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_SetBlock_Max",
  	"snippet": "MUIV_TextEditor_SetBlock_Max",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_SetBlock_Min",
  	"snippet": "MUIV_TextEditor_SetBlock_Min",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_TabSize_Default",
  	"snippet": "MUIV_TextEditor_TabSize_Default",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_WrapMode_HardWrap",
  	"snippet": "MUIV_TextEditor_WrapMode_HardWrap",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_WrapMode_NoWrap",
  	"snippet": "MUIV_TextEditor_WrapMode_NoWrap",
  	"type": "value"
  },
  {
  	"displayText": "MUIV_TextEditor_WrapMode_SoftWrap",
  	"snippet": "MUIV_TextEditor_WrapMode_SoftWrap",
  	"type": "value"
  }
	,
	{
		"displayText": "_addleft(obj)",
		"snippet": "_addleft(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "BYTE",
		"description": "Frame & innerspacing left offset of MUI Object."
	},
	{
		"displayText": "_addtop(obj)",
		"snippet": "_addtop(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "BYTE",
		"description": "Frame & innerspacing top offset of MUI Object."
	},
	{
		"displayText": "_app(obj)",
		"snippet": "_app(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Shortcut to MUI ApplicationObject."
	},
	{
		"displayText": "_bottom(obj)",
		"snippet": "_bottom(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Bottom offset of MUI Object."
	},
	{
		"displayText": "_defheight(obj)",
		"snippet": "_defheight(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Default height of MUI object."
	},
	{
		"displayText": "_defwidth(obj)",
		"snippet": "_defwidth(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Default width of MUI object."
	},
	{
		"displayText": "_dri(obj)",
		"snippet": "_dri(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct DrawInfo*",
		"description": "Shortcut to MUI objects DrawInfo."
	},
	{
		"displayText": "_flags(obj)",
		"snippet": "_flags(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Shortuct to MUI objects AreaData flags."
	},
	{
		"displayText": "_font(obj)",
		"snippet": "_font(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct TextFont*",
		"description": "Shortcut to MUI objects font."
	},
	{
		"displayText": "_height(obj)",
		"snippet": "_height(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Shortcut to MUI objects height."
	},
	{
		"displayText": "_left(obj)",
		"snippet": "_left(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Left offset of MUI object."
	},
	{
		"displayText": "_maxheight(obj)",
		"snippet": "_maxheight(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "MaxHeight of MUI object."
	},
	{
		"displayText": "_maxwidth(obj)",
		"snippet": "_maxwidth(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "MaxWidth of MUI object."
	},
	{
		"displayText": "_mbottom(obj)",
		"snippet": "_mbottom(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Inner bottom offset of MUI object."
	},
	{
		"displayText": "_mheight(obj)",
		"snippet": "_mheight(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Inner height of MUI object."
	},
	{
		"displayText": "_minheight(obj)",
		"snippet": "_minheight(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "MinHeight of MUI object."
	},
	{
		"displayText": "_minwidth(obj)",
		"snippet": "_minwidth(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "MinWidth of MUI object."
	},
	{
		"displayText": "_mleft(obj)",
		"snippet": "_mleft(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Inner left offset of MUI object."
	},
	{
		"displayText": "_mright(obj)",
		"snippet": "_mright(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Inner right offset of MUI object."
	},
	{
		"displayText": "_mtop(obj)",
		"snippet": "_mtop(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Inner top offset of MUI object."
	},
	{
		"displayText": "_mwidth(obj)",
		"snippet": "_mwidth(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Inner width of MUI object."
	},
	{
		"displayText": "_pens(obj)",
		"snippet": "_pens(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "UWORD",
		"description": "Shortcut to MUI object pens."
	},
	{
		"displayText": "_right(obj)",
		"snippet": "_right(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Right offset of MUI object."
	},
	{
		"displayText": "_rp(obj)",
		"snippet": "_rp(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct RastPort*",
		"description": "Shortcut to MUI objects RastPort."
	},
	{
		"displayText": "_screen(obj)",
		"snippet": "_screen(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct Screen*",
		"description": "Shortcut to MUI objects Screen."
	},
	{
		"displayText": "_subheight(obj)",
		"snippet": "_subheight(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "BYTE",
		"description": "Top + bottom frame & innerspacing of MUI object."
	},
	{
		"displayText": "_subwidth(obj)",
		"snippet": "_subwidth(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "BYTE",
		"description": "Left + right frame & innerspacing of MUI object."
	},
	{
		"displayText": "_top(obj)",
		"snippet": "_top(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Top offset of MUI object."
	},
	{
		"displayText": "_width(obj)",
		"snippet": "_width(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "WORD",
		"description": "Width of MUI object."
	},
	{
		"displayText": "_win(obj)",
		"snippet": "_win(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Shorcut to MUI objects WindowObject."
	},
	{
		"displayText": "_window(obj)",
		"snippet": "_window(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "struct Window*",
		"description": "Shortcut to MUI objects window."
	},
	{
		"displayText": "CheckMark(selected)",
		"snippet": "CheckMark(${1:selected})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI CheckMark object. (OBSOLETE)"
	},
	{
		"displayText": "CLabel(label)",
		"snippet": "CLabel(${1:label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "CLabel1(label)",
		"snippet": "CLabel1(${1:label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "CLabel2(label)",
		"snippet": "CLabel2(${1:label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "ColGroup(cols)",
		"snippet": "ColGroup(${1:cols})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Group object."
	},
	{
		"displayText": "ColGroupV(cols)",
		"snippet": "ColGroupV(${1:cols})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Virtgroup object."
	},
	{
		"displayText": "Cycle(entries)",
		"snippet": "Cycle(${1:entries})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Cycle object. (OBSOLETE)"
	},
	{
		"displayText": "FreeCLabel(label)",
		"snippet": "FreeCLabel(${1:label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeCLabel1(label)",
		"snippet": "FreeCLabel1(${1:label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeCLabel2(label)",
		"snippet": "FreeCLabel2(${1:label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyCLabel(label, key)",
		"snippet": "FreeKeyCLabel(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyCLabel1(label, key)",
		"snippet": "FreeKeyCLabel1(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyCLabel2(label, key)",
		"snippet": "FreeKeyCLabel2(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyLabel(label, key)",
		"snippet": "FreeKeyLabel(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyLabel1(label, key)",
		"snippet": "FreeKeyLabel1(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyLabel2(label, key)",
		"snippet": "FreeKeyLabel2(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyLLabel(label, key)",
		"snippet": "FreeKeyLLabel(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyLLabel1(label, key)",
		"snippet": "FreeKeyLLabel1(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeKeyLLabel2(label, key)",
		"snippet": "FreeKeyLLabel2(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeLabel(label, key)",
		"snippet": "FreeLabel(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeLabel1(label, key)",
		"snippet": "FreeLabel1(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeLabel2(label, key)",
		"snippet": "FreeLabel2(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeLLabel(label, key)",
		"snippet": "FreeLLabel(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeLLabel1(label, key)",
		"snippet": "FreeLLabel1(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "FreeLLabel2(label, key)",
		"snippet": "FreeLLabel2(${1:label}, ${2:key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label object."
	},
	{
		"displayText": "get(obj, attr, store)",
		"snippet": "get(${1:obj}, ${2:attr}, ${3:store})${4:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Gets an attribute from BOOPSI objects."
	},
	{
		"displayText": "GroupFrameT(title)",
		"snippet": "GroupFrameT(${1:STRPTR title})${2:}",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares attributes for a framed & titled MUI Group."
	},
	{
		"displayText": "GroupSpacing(space)",
		"snippet": "GroupSpacing(${1:LONG space})${2:}",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares a spacing attribute for MUI Groups."
	},
	{
		"displayText": "HCenter(obj)",
		"snippet": "HCenter(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares the MUI object as centered in a HGroup."
	},
	{
		"displayText": "HSpace(space)",
		"snippet": "HSpace(${1:LONG space})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI horizontal spacer."
	},
	{
		"displayText": "InnerSpacing(h, v)",
		"snippet": "InnerSpacing(${1:h}, ${2:v})${3:}",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares inner spacing attributes for MUI objects."
	},
	{
		"displayText": "KeyButton(name, key)",
		"snippet": "KeyButton(${1:STRPTR name}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI button object with a shortcut key. (OBSOLETE)"
	},
	{
		"displayText": "KeyCheckMark(selected, key)",
		"snippet": "KeyCheckMark(${1:BOOL selected}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI CheckMark with a shortcut key. (OBSOLETE)"
	},
	{
		"displayText": "KeyCLabel(label, key)",
		"snippet": "KeyCLabel(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyCLabel1(label, key)",
		"snippet": "KeyCLabel1(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyCLabel2(label, key)",
		"snippet": "KeyCLabel2(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyCycle(entries, key)",
		"snippet": "KeyCycle(${1:STRPTR *entries}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Cycle with a shortcut key. (OBSOLETE)"
	},
	{
		"displayText": "KeyLabel(label, key)",
		"snippet": "KeyLabel(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyLabel1(label, key)",
		"snippet": "KeyLabel1(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyLabel2(label, key)",
		"snippet": "KeyLabel2(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyLLabel(label, key)",
		"snippet": "KeyLLabel(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyLLabel1(label, key)",
		"snippet": "KeyLLabel1(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyLLabel2(label, key)",
		"snippet": "KeyLLabel2(${1:STRPTR label}, ${2:char key})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label with a shortcut key."
	},
	{
		"displayText": "KeyRadio(name, array, key)",
		"snippet": "KeyRadio(${1:STRPTR name}, ${2:STRPTR *array}, ${3:char key})${4:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI RadioObject with a shortcut key. (OBSOLETE)"
	},
	{
		"displayText": "KeySlider(min, max, level, key)",
		"snippet": "KeySlider(${1:LONG min}, ${2:LONG max}, ${3:LONG level} ${4:char key})${5:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI SliderObject with a shortcut key. (OBSOLETE)"
	},
	{
		"displayText": "KeyString(contents, maxlen, key)",
		"snippet": "KeyString(${1:STRPTR contents}, ${2:LONG maxlen}, ${3:char key})${4:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI StringObject with a shortcut key. (OBSOLETE)"
	},
	{
		"displayText": "Label(label)",
		"snippet": "Label(${1:STRPTR label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label."
	},
	{
		"displayText": "Label1(label)",
		"snippet": "Label1(${1:STRPTR label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label."
	},
	{
		"displayText": "Label2(label)",
		"snippet": "Label2(${1:STRPTR label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label."
	},
	{
		"displayText": "LLabel(label)",
		"snippet": "LLabel(${1:STRPTR label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label."
	},
	{
		"displayText": "LLabel1(label)",
		"snippet": "LLabel1(${1:STRPTR label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label."
	},
	{
		"displayText": "LLabel2(label)",
		"snippet": "LLabel2(${1:STRPTR label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Label."
	},
	{
		"displayText": "MenuObjectT(name)",
		"snippet": "MenuObjectT(${1:STRPTR name})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Menu object."
	},
	{
		"displayText": "NBitmapFile(filename)",
		"snippet": "NBitmapFile(${1:STRPTR filename})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares an MUI NBitmap object."
	},
	{
		"displayText": "nnset(obj, attr, value)",
		"snippet": "nnset(${1:obj}, ${2:attr}, ${3:value})${4:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Sets an attribute of a BOOPSI object without notification."
	},
	{
		"displayText": "PopButton(img)",
		"snippet": "PopButton(${1:STRPTR imagespec})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ImageButton object."
	},
	{
		"displayText": "Radio(name, array)",
		"snippet": "Radio(${1:STRPTR name}, ${2:STRPTR *array})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI RadioButton object. (OBSOLETE)"
	},
	{
		"displayText": "RegisterGroup(titles)",
		"snippet": "RegisterGroup(${1:STRPTR *titles})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Register object."
	},
	{
		"displayText": "RowGroup(rows)",
		"snippet": "RowGroup(${1:LONG rows})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Group object with rows."
	},
	{
		"displayText": "RowGroupV(rows)",
		"snippet": "RowGroupV(${1:LONG rows})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Virtgroup object with rows."
	},
	{
		"displayText": "set(obj, attr, value)",
		"snippet": "set(${1:obj}, ${2:attr}, ${3:value})${4:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Sets an attribute of a BOOPSI object."
	},
	{
		"displayText": "setcheckmark(obj, selected)",
		"snippet": "setcheckmark(${1:obj}, ${2:BOOL selected})${3:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Sets the state of a MUI CheckMark."
	},
	{
		"displayText": "setcycle(obj, active)",
		"snippet": "setcycle(${1:obj}, ${2:LONG active})${3:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Sets the active item of a MUI Cycle."
	},
	{
		"displayText": "setmutex(obj, active)",
		"snippet": "setmutex(${1:obj}, ${2:LONG active})${3:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Sets the active item of a MUI Radio object."
	},
	{
		"displayText": "setslider(obj, value)",
		"snippet": "setslider(${1:obj}, ${2:LONG value})${3:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Sets a MUI Slider object to a value."
	},
	{
		"displayText": "setstring(obj, string)",
		"snippet": "setstring(${1:obj}, ${2:STRPTR str})${3:}",
		"type": "macro",
		"leftLabel": "ULONG",
		"description": "Sets the string contents of a MUI String."
	},
	{
		"displayText": "SimpleButton(label)",
		"snippet": "SimpleButton(${1:STRPTR label})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Button."
	},
	{
		"displayText": "Slider(min, max, level)",
		"snippet": "Slider(${1:LONG min}, ${2:LONG max}, ${3:LONG level})${4:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI Slider. (OBSOLETE)"
	},
	{
		"displayText": "String(obj, maxlen)",
		"snippet": "String(${1:obj}, ${2:LONG maxlen})${3:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI String object. (OBSOLETE)"
	},
	{
		"displayText": "VCenter(obj)",
		"snippet": "VCenter(${1:obj})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares the MUI object as centered in a VGroup."
	},
	{
		"displayText": "VSpace(space)",
		"snippet": "VSpace(${1:LONG space})${2:}",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI vertical spacer."
	},
	{
		"displayText": "AboutmuiObject",
		"snippet": "AboutmuiObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI AboutmuiObject."
	},
	{
		"displayText": "ApplicationObject",
		"snippet": "ApplicationObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ApplicationObject."
	},
	{
		"displayText": "BalanceObject",
		"snippet": "BalanceObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI BalanceObject."
	},
	{
		"displayText": "BitmapObject",
		"snippet": "BitmapObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI BitmapObject."
	},
	{
		"displayText": "BodychunkObject",
		"snippet": "BodychunkObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI BodychunkObject."
	},
	{
		"displayText": "BoopsiObject",
		"snippet": "BoopsiObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI BoopsiObject."
	},
	{
		"displayText": "ButtonFrame",
		"snippet": "ButtonFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "Child",
		"snippet": "Child",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares a children object for MUI object."
	},
	{
		"displayText": "ColoradjustObject",
		"snippet": "ColoradjustObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ColoradjustObject."
	},
	{
		"displayText": "ColorfieldObject",
		"snippet": "ColorfieldObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ColorfieldObject."
	},
	{
		"displayText": "CycleObject",
		"snippet": "CycleObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI CycleObject."
	},
	{
		"displayText": "DirlistObject",
		"snippet": "DirlistObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI DirlistObject."
	},
	{
		"displayText": "FloattextObject",
		"snippet": "FloattextObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI FloattextObject."
	},
	{
		"displayText": "GaugeFrame",
		"snippet": "GaugeFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "GaugeObject",
		"snippet": "GaugeObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI GaugeObject."
	},
	{
		"displayText": "GroupFrame",
		"snippet": "GroupFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "GroupObject",
		"snippet": "GroupObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI GroupObject."
	},
	{
		"displayText": "HGroup",
		"snippet": "HGroup",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI HGroup."
	},
	{
		"displayText": "HGroupV",
		"snippet": "HGroupV",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI HGroupV."
	},
	{
		"displayText": "HVSpace",
		"snippet": "HVSpace",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI HVSpace."
	},
	{
		"displayText": "ImageButtonFrame",
		"snippet": "ImageButtonFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "ImageObject",
		"snippet": "ImageObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ImageObject."
	},
	{
		"displayText": "InputListFrame",
		"snippet": "InputListFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "KeyentryObject",
		"snippet": "KeyentryObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI KeyentryObject."
	},
	{
		"displayText": "KnobObject",
		"snippet": "KnobObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI KnobObject."
	},
	{
		"displayText": "LevelmeterObject",
		"snippet": "LevelmeterObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI LevelmeterObject."
	},
	{
		"displayText": "ListObject",
		"snippet": "ListObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ListObject."
	},
	{
		"displayText": "ListviewObject",
		"snippet": "ListviewObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ListviewObject."
	},
	{
		"displayText": "MenuitemObject",
		"snippet": "MenuitemObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI MenuitemObject."
	},
	{
		"displayText": "MenuObject",
		"snippet": "MenuObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI MenuObject."
	},
	{
		"displayText": "MenustripObject",
		"snippet": "MenustripObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI MenustripObject."
	},
	{
		"displayText": "NoFrame",
		"snippet": "NoFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "NotifyObject",
		"snippet": "NotifyObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI NotifyObject."
	},
	{
		"displayText": "NumericbuttonObject",
		"snippet": "NumericbuttonObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI NumericbuttonObject."
	},
	{
		"displayText": "NumericObject",
		"snippet": "NumericObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI NumericObject."
	},
	{
		"displayText": "PageGroup",
		"snippet": "PageGroup",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PageGroup."
	},
	{
		"displayText": "PageGroupV",
		"snippet": "PageGroupV",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PageGroupV."
	},
	{
		"displayText": "PaletteObject",
		"snippet": "PaletteObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PaletteObject."
	},
	{
		"displayText": "PenadjustObject",
		"snippet": "PenadjustObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PenadjustObject."
	},
	{
		"displayText": "PendisplayObject",
		"snippet": "PendisplayObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PendisplayObject."
	},
	{
		"displayText": "PopaslObject",
		"snippet": "PopaslObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PopaslObject."
	},
	{
		"displayText": "PropFrame",
		"snippet": "PropFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "PoplistObject",
		"snippet": "PoplistObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PoplistObject."
	},
	{
		"displayText": "PopobjectObject",
		"snippet": "PopobjectObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PopobjectObject."
	},
	{
		"displayText": "PoppenObject",
		"snippet": "PoppenObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PoppenObject."
	},
	{
		"displayText": "PopstringObject",
		"snippet": "PopstringObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PopstringObject."
	},
	{
		"displayText": "PropObject",
		"snippet": "PropObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI PropObject."
	},
	{
		"displayText": "RadioObject",
		"snippet": "RadioObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI RadioObject."
	},
	{
		"displayText": "ReadListFrame",
		"snippet": "ReadListFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "RectangleObject",
		"snippet": "RectangleObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI RectangleObject."
	},
	{
		"displayText": "RegisterObject",
		"snippet": "RegisterObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI RegisterObject."
	},
	{
		"displayText": "ScaleObject",
		"snippet": "ScaleObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ScaleObject."
	},
	{
		"displayText": "ScrmodelistObject",
		"snippet": "ScrmodelistObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ScrmodelistObject."
	},
	{
		"displayText": "ScrollbarObject",
		"snippet": "ScrollbarObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ScrollbarObject."
	},
	{
		"displayText": "ScrollgroupObject",
		"snippet": "ScrollgroupObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI ScrollgroupObject."
	},
	{
		"displayText": "SliderFrame",
		"snippet": "SliderFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "SliderObject",
		"snippet": "SliderObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI SliderObject."
	},
	{
		"displayText": "StringFrame",
		"snippet": "StringFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "StringObject",
		"snippet": "StringObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI StringObject."
	},
	{
		"displayText": "SubWindow",
		"snippet": "SubWindow",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares MUIA_Application_Window."
	},
	{
		"displayText": "TextFrame",
		"snippet": "TextFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "TextObject",
		"snippet": "TextObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI TextObject."
	},
	{
		"displayText": "VGroup",
		"snippet": "VGroup",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI VGroup."
	},
	{
		"displayText": "VGroupV",
		"snippet": "VGroupV",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI VGroupV."
	},
	{
		"displayText": "VirtgroupObject",
		"snippet": "VirtgroupObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI VirtgroupObject."
	},
	{
		"displayText": "VirtualFrame",
		"snippet": "VirtualFrame",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares frame attribute for MUI object."
	},
	{
		"displayText": "VolumelistObject",
		"snippet": "VolumelistObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI VolumelistObject."
	},
	{
		"displayText": "WindowContents",
		"snippet": "WindowContents",
		"type": "macro",
		"leftLabel": "",
		"description": "Declares MUIA_Window_RootObject."
	},
	{
		"displayText": "WindowObject",
		"snippet": "WindowObject",
		"type": "macro",
		"leftLabel": "Object*",
		"description": "Declares a MUI WindowObject."
	}
]