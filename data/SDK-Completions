	{
		"displayText": "AbleICR(resource, mask)",
		"snippet": "AbleICR(${1:struct Library *resource}, ${2:LONG mask})${3:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Enable/disable ICR interrupts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C8.html"
	},
	{
		"displayText": "AbortAslRequest(requester)",
		"snippet": "AbortAslRequest(${1:APTR requester})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attempt to abort an asl requester. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0057.html"
	},
	{
		"displayText": "AbortIO(ioRequest)",
		"snippet": "AbortIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Abort a device command.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0574.html"
	},
	{
		"displayText": "AbortPkt(port, pkt)",
		"snippet": "AbortPkt(${1:struct MsgPort *port}, ${2:struct DosPacket *pkt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Aborts an asynchronous packet, if possible. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0139.html"
	},
	{
		"displayText": "ACrypt(buffer, password, username)",
		"snippet": "ACrypt(${1:STRPTR buffer}, ${2:CONST_STRPTR password}, ${3:CONST_STRPTR username})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Encrypt a password.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001B.html"
	},
	{
		"displayText": "ActivateAslRequest(requester)",
		"snippet": "ActivateAslRequest(${1:APTR requester})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attempt to activate an asl requester. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0058.html"
	},
	{
		"displayText": "ActivateCxObj(cxObject, switch)",
		"snippet": "ActivateCxObj(${1:CxObj *co}, ${2:LONG switch})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the activation state of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E0.html"
	},
	{
		"displayText": "ActivateGadget(gadget, window, requester)",
		"snippet": "ActivateGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Activate a (string or custom) gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node038F.html"
	},
	{
		"displayText": "ActivateLayoutGadget(gadget, window, requester, object)",
		"snippet": "ActivateLayoutGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG obj})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Activate a gadget within a layout window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0439.html"
	},
	{
		"displayText": "ActivateWindow(window)",
		"snippet": "ActivateWindow(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Activate an Intuition window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0390.html"
	},
	{
		"displayText": "AddAmigaGuideHost(hook, name, tag1, ...)",
		"snippet": "AddAmigaGuideHost(${1:struct Hook *hook}, ${2:STRPTR name}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Add a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0007.html"
	},
	{
		"displayText": "AddAmigaGuideHostA(hook, name, attributes)",
		"snippet": "AddAmigaGuideHostA(${1:struct Hook *hook}, ${2:STRPTR name}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Add a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0007.html"
	},
	{
		"displayText": "AddAnimOb(animOb, animKey, rastPort)",
		"snippet": "AddAnimOb(${1:struct AnimOb *anOb}, ${2:struct AnimOb **anKey}, ${3:struct RastPort *rp})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add an AnimOb to the linked list of AnimObs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029C.html"
	},
	{
		"displayText": "AddAppIcon(id, userdata, text, msgport, lock, diskobj, tag1, ...)",
		"snippet": "AddAppIcon(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:BPTR lock}, ${6:struct DiskObject *diskobj}, ${7:Tag tag1}, ${8:...})${9:}",
		"type": "function",
		"leftLabel": "struct AppIcon*",
		"description": "Add an icon to Workbench's list of AppIcons. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BA.html"
	},
	{
		"displayText": "AddAppIconA(id, userdata, text, msgport, lock, diskobj, tagList)",
		"snippet": "AddAppIconA(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:BPTR lock}, ${6:struct DiskObject *diskobj}, ${7:struct TagItem *tagList})${8:}",
		"type": "function",
		"leftLabel": "struct AppIcon*",
		"description": "Add an icon to Workbench's list of AppIcons. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BA.html"
	},
	{
		"displayText": "AddAppMenuItem(id, userdata, text, msgport, tag1, ...)",
		"snippet": "AddAppMenuItem(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:Tag tag1}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "struct AppMenuItem*",
		"description": "Add a menu item to Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BB.html"
	},
	{
		"displayText": "AddAppMenuItemA(id, userdata, text, msgport, tagList)",
		"snippet": "AddAppMenuItemA(${1:ULONG id}, ${2:ULONG userdata}, ${3:UBYTE *text}, ${4:struct MsgPort *msgport}, ${5:struct TagItem *tagList})${6:}",
		"type": "function",
		"leftLabel": "struct AppMenuItem*",
		"description": "Add a menu item to Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BB.html"
	},
	{
		"displayText": "AddAppWindow(id, userdata, window, msgport, tag1, ...)",
		"snippet": "AddAppWindow(${1:ULONG id}, ${2:ULONG userdata}, ${3:struct Window *win}, ${4:struct MsgPort *msgport}, ${5:Tag tag1}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "struct AppWindow*",
		"description": "Add a window to Workbench's list of AppWindows. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BC.html"
	},
	{
		"displayText": "AddAppWindowA(id, userdata, window, msgport, tagList)",
		"snippet": "AddAppWindowA(${1:ULONG id}, ${2:ULONG userdata}, ${3:struct Window *win}, ${4:struct MsgPort *msgport}, ${5:struct TagItem *tagList})${6:}",
		"type": "function",
		"leftLabel": "struct AppWindow*",
		"description": "Add a window to Workbench's list of AppWindows. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BC.html"
	},
	{
		"displayText": "AddAppWindowDropZone(window, id, userdata, ...)",
		"snippet": "AddAppWindowDropZone(${1:struct AppWindow *win}, ${2:ULONG id}, ${3:ULONG userdata}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "struct AppWindowDropZone*",
		"description": "Designate an AppWindow area. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BD.html"
	},
	{
		"displayText": "AddAppWindowDropZoneA(window, id, userdata, tags)",
		"snippet": "AddAppWindowDropZoneA(${1:struct AppWindow *win}, ${2:ULONG id}, ${3:ULONG userdata}, ${4:struct TagItem *tags})${5:}",
		"type": "function",
		"leftLabel": "struct AppWindowDropZone*",
		"description": "Designate an AppWindow area. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BD.html"
	},
	{
		"displayText": "AddBob(bob, rastPort)",
		"snippet": "AddBob(${1:struct Bob *bob}, ${2:struct RastPort *rp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Adds a Bob to current gel list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029D.html"
	},
	{
		"displayText": "AddBootNode(bootPri, flags, deviceNode, configDev)",
		"snippet": "AddBootNode(${1:LONG bootPri}, ${2:ULONG flags}, ${3:struct DeviceNode *deviceNode}, ${4:struct ConfigDev *configDev})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Add a BOOTNODE to the system. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025C.html"
	},
	{
		"displayText": "AddBuffers(name, number)",
		"snippet": "AddBuffers(${1:CONST_STRPTR name}, ${2:LONG number})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Changes the number of buffers for a filesystem. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013A.html"
	},
	{
		"displayText": "AddClass(class)",
		"snippet": "AddClass(${1:struct IClass *cl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a public class available. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0391.html"
	},
	{
		"displayText": "AddConfigDev(configDev)",
		"snippet": "AddConfigDev(${1:struct ConfigDev *configDev})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a new ConfigDev structure to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025D.html"
	},
	{
		"displayText": "AddDevice(device)",
		"snippet": "AddDevice(${1:struct Device *device})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a device to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D8.html"
	},
	{
		"displayText": "AddDosEntry(dlist)",
		"snippet": "AddDosEntry(${1:struct DosList *dlist})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add a Dos List entry to the lists. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013B.html"
	},
	{
		"displayText": "AddDosNode(bootPri, flags, deviceNode)",
		"snippet": "AddDosNode(${1:LONG bootPri}, ${2:ULONG flags}, ${3:struct DeviceNode *deviceNode})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Mount a disk to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025E.html"
	},
	{
		"displayText": "AddDTObject(window, requester, object, position)",
		"snippet": "AddDTObject(${1:struct Window *win}, ${2:struct Requester *req}, ${3:Object *obj}, ${4:LONG pos})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an object to a window or requester. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0108.html"
	},
	{
		"displayText": "AddFont(textFont)",
		"snippet": "AddFont(${1:struct TextFont *textFont})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a font to the system list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029E.html"
	},
	{
		"displayText": "AddFreeList(freelist, memory, size)",
		"snippet": "AddFreeList(${1:struct FreeList *freelist}, ${2:CONST APTR mem}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Add memory to a free list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0343.html"
	},
	{
		"displayText": "AddGadget(window, gadget, position)",
		"snippet": "AddGadget(${1:struct Window *win}, ${2:struct Gadget *gad}, ${3:ULONG position})${4:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Add a gadget to the gadget list of a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0392.html"
	},
	{
		"displayText": "AddGList(window, gadget, position, numGad, requester)",
		"snippet": "AddGList(${1:struct Window *win}, ${2:struct Gadget *gad}, ${3:ULONG position}, ${4:LONG numGad}, ${5:struct Requester *req})${6:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Add a linked list of gadgets to a window or requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0393.html"
	},
	{
		"displayText": "AddHead(list, node)",
		"snippet": "AddHead(${1:struct List *list}, ${2:struct Node *node})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert node at the head of a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D9.html"
	},
	{
		"displayText": "AddICRVector(resource, iCRBit, interrupt)",
		"snippet": "AddICRVector(${1:struct Library *resource}, ${2:LONG iCRBit}, ${3:struct Interrupt *interrupt})${4:}",
		"type": "function",
		"leftLabel": "struct Interrupt*",
		"description": "Attach an interrupt handler to a CIA bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C9.html"
	},
	{
		"displayText": "AddIEvents(events)",
		"snippet": "AddIEvents(${1:struct InputEvent *events})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add input events to commodities' input stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E1.html"
	},
	{
		"displayText": "AddIntServer(intNumber, interrupt)",
		"snippet": "AddIntServer(${1:LONG intNumber}, ${2:struct Interrupt *interrupt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add an interrupt server to a system server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DA.html"
	},
	{
		"displayText": "AddKBInt(intRoutine, intData)",
		"snippet": "AddKBInt(${1:CONST APTR intRoutine}, ${2:CONST APTR intData})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Adds a routine to the keyboard interrupt. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0461.html"
	},
	{
		"displayText": "AddLibrary(library)",
		"snippet": "AddLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a library to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DB.html"
	},
	{
		"displayText": "AddMemHandler(memhand)",
		"snippet": "AddMemHandler(${1:struct Interrupt *memhand})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a low memory handler to exec. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DC.html"
	},
	{
		"displayText": "AddMemList(size, attributes, priority, base, name)",
		"snippet": "AddMemList(${1:ULONG size}, ${2:ULONG attrs}, ${3:LONG pri}, ${4:APTR base}, ${5:CONST_STRPTR name})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add memory to the system free pool.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DD.html"
	},
	{
		"displayText": "AddNamedObject(nameSpace, object)",
		"snippet": "AddNamedObject(${1:struct NamedObject *nameSpace}, ${2:struct NamedObject *obj})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Add a named object to the given namespace. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0593.html"
	},
	{
		"displayText": "AddPart(dirname, filename, size)",
		"snippet": "AddPart(${1:STRPTR dirname}, ${2:CONST_STRPTR filename}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Appends a file/dir to the end of a path. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013C.html"
	},
	{
		"displayText": "AddPort(port)",
		"snippet": "AddPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a public message port to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DE.html"
	},
	{
		"displayText": "AddResource(resource)",
		"snippet": "AddResource(${1:APTR resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a resource to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01DF.html"
	},
	{
		"displayText": "AddSegment(name, seg, system)",
		"snippet": "AddSegment(${1:CONST_STRPTR name}, ${2:BPTR seg}, ${3:LONG system})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Adds a resident segment to the resident list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013D.html"
	},
	{
		"displayText": "AddSemaphore(sigSem)",
		"snippet": "AddSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize then add a signal semaphore to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E0.html"
	},
	{
		"displayText": "AddTail(list, node)",
		"snippet": "AddTail(${1:struct List *list}, ${2:struct Node *node})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Append node to tail of a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E1.html"
	},
	{
		"displayText": "AddTask(task, initPC, finalPC)",
		"snippet": "AddTask(${1:struct Task *task}, ${2:CONST APTR initPC}, ${3:CONST APTR finalPC})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Add a task to the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E2.html"
	},
	{
		"displayText": "AddTime(dest, src)",
		"snippet": "AddTime(${1:struct timeval *dest}, ${2:CONST struct timeval *src})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add one time request to another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0575.html"
	},
	{
		"displayText": "AddTimerInt(intRoutine, intData)",
		"snippet": "AddTimerInt(${1:CONST APTR intRoutine}, ${2:CONST APTR intData})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Adds an interrupt that is executed at regular intervals. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0462.html"
	},
	{
		"displayText": "AddTOF(i, p, a)",
		"snippet": "AddTOF(${1:struct Isrvstr *i}, ${2:APTR p}, ${3:APTR a})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a task to the VBlank interrupt server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001C.html"
	},
	{
		"displayText": "AddVBlankInt(intRoutine, intData)",
		"snippet": "AddVBlankInt(${1:CONST APTR intRoutine}, ${2:CONST APTR intData})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Adds a routine executed every vertical blank. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0463.html"
	},
	{
		"displayText": "AddVSprite(vSprite, rastPort)",
		"snippet": "AddVSprite(${1:struct VSprite *vSprite}, ${2:struct RastPort *rp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Add a VSprite to the current gel list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node029F.html"
	},
	{
		"displayText": "afp(string)",
		"snippet": "afp(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert ASCII string variable into fast floating point.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001D.html"
	},
	{
		"displayText": "Alert(alertNum)",
		"snippet": "Alert(${1:ULONG alertNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Alert the user of an error.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E3.html"
	},
	{
		"displayText": "AllocAbs(byteSize, location)",
		"snippet": "AllocAbs(${1:ULONG byteSize}, ${2:APTR location})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate at a given location.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E4.html"
	},
	{
		"displayText": "AllocAslRequest(reqType, tagList)",
		"snippet": "AllocAslRequest(${1:ULONG reqType}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate an ASL requester. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0059.html"
	},
	{
		"displayText": "Allocate(freeList, byteSize)",
		"snippet": "Allocate(${1:struct MemHeader *freeList}, ${2:ULONG byteSize})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate a block of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E5.html"
	},
	{
		"displayText": "AllocateTagItems(numTags)",
		"snippet": "AllocateTagItems(${1:ULONG numTags})${2:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Allocate a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0594.html"
	},
	{
		"displayText": "AllocBitMap(sizex, sizey, depth, flags, friend)",
		"snippet": "AllocBitMap(${1:ULONG sizex}, ${2:ULONG sizey}, ${3:ULONG depth}, ${4:ULONG flags}, ${5:CONST struct BitMap *friend})${6:}",
		"type": "function",
		"leftLabel": "struct BitMap*",
		"description": "Allocate a bitmap and attach bitplanes to it. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A0.html"
	},
	{
		"displayText": "AllocChooserNode(tag1, ...)",
		"snippet": "AllocChooserNode(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C3.html"
	},
	{
		"displayText": "AllocChooserNodeA(tags)",
		"snippet": "AllocChooserNodeA(${1:struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C3.html"
	},
	{
		"displayText": "AllocClickTabNode(tag1, ...)",
		"snippet": "AllocClickTabNode(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CF.html"
	},
	{
		"displayText": "AllocClickTabNodeA(tags)",
		"snippet": "AllocClickTabNodeA(${1:struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CF.html"
	},
	{
		"displayText": "AllocConfigDev()",
		"snippet": "AllocConfigDev()",
		"type": "function",
		"leftLabel": "struct ConfigDev*",
		"description": "Allocate a ConfigDev structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node025F.html"
	},
	{
		"displayText": "AllocDBufInfo(viewPort)",
		"snippet": "AllocDBufInfo(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "struct DBufInfo*",
		"description": "Allocate structure for multi-buffered animation. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A1.html"
	},
	{
		"displayText": "AllocDosObject(type, tags)",
		"snippet": "AllocDosObject(${1:ULONG type}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Creates a dos object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013E.html"
	},
	{
		"displayText": "AllocEntry(entry)",
		"snippet": "AllocEntry(${1:struct MemList *entry})${2:}",
		"type": "function",
		"leftLabel": "struct MemList*",
		"description": "Allocate many regions of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E6.html"
	},
	{
		"displayText": "AllocExpansionMem(numSlots, slotAlign)",
		"snippet": "AllocExpansionMem(${1:ULONG numSlots}, ${2:ULONG slotAlign})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate expansion memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0260.html"
	},
	{
		"displayText": "AllocFileRequest()",
		"snippet": "AllocFileRequest()",
		"type": "function",
		"leftLabel": "struct FileRequester*",
		"description": "Allocates an ASL FileRequester structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005A.html"
	},
	{
		"displayText": "AllocIFF()",
		"snippet": "AllocIFF()",
		"type": "function",
		"leftLabel": "struct IFFHandle*",
		"description": "Create a new IFFHandle structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0359.html"
	},
	{
		"displayText": "AllocListBrowserNode(columns, ...)",
		"snippet": "AllocListBrowserNode(${1:ULONG columns}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0444.html"
	},
	{
		"displayText": "AllocListBrowserNodeA(columns, tags)",
		"snippet": "AllocListBrowserNodeA(${1:ULONG columns}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0444.html"
	},
	{
		"displayText": "AllocLocalItem(type, id, ident, dataSize)",
		"snippet": "AllocLocalItem(${1:LONG type}, ${2:LONG id}, ${3:LONG ident}, ${4:LONG dataSize})${5:}",
		"type": "function",
		"leftLabel": "struct LocalContextItem*",
		"description": "Create a local context item structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035A.html"
	},
	{
		"displayText": "AllocMem(byteSize, requirements)",
		"snippet": "AllocMem(${1:ULONG byteSize}, ${2:ULONG requirements})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory given certain requirements.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E7.html"
	},
	{
		"displayText": "AllocMiscResource(unitNum, name)",
		"snippet": "AllocMiscResource(${1:ULONG unitNum}, ${2:CONST_STRPTR name})${3:}",
		"type": "function",
		"leftLabel": "UBYTE*",
		"description": "Allocate one of the miscelaneous resources.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CE.html"
	},
	{
		"displayText": "AllocNamedObject(name, tag1, ...)",
		"snippet": "AllocNamedObject(${1:CONST_STRPTR name}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct NamedObject*",
		"description": "Allocate a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0595.html"
	},
	{
		"displayText": "AllocNamedObjectA(name, tagList)",
		"snippet": "AllocNamedObjectA(${1:CONST_STRPTR name}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct NamedObject*",
		"description": "Allocate a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0595.html"
	},
	{
		"displayText": "AllocPooled(poolHeader, memSize)",
		"snippet": "AllocPooled(${1:APTR poolHeader}, ${2:ULONG memSize})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory with the pool manager. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E8.html"
	},
	{
		"displayText": "AllocPotBits(bits)",
		"snippet": "AllocPotBits(${1:ULONG bits})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Allocate bits in the potgo register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04FF.html"
	},
	{
		"displayText": "AllocRadioButtonNode(columns, tag1, ...)",
		"snippet": "AllocRadioButtonNode(${1:ULONG columns}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051D.html"
	},
	{
		"displayText": "AllocRadioButtonNodeA(columns, tags)",
		"snippet": "AllocRadioButtonNodeA(${1:ULONG columns}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051D.html"
	},
	{
		"displayText": "AllocRaster(width, height)",
		"snippet": "AllocRaster(${1:ULONG width}, ${2:ULONG height})${3:}",
		"type": "function",
		"leftLabel": "PLANEPTR",
		"description": "Allocate space for a bitplane.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A2.html"
	},
	{
		"displayText": "AllocRemember(rememberKey, size, flags)",
		"snippet": "AllocRemember(${1:struct Remember **rememberKey}, ${2:ULONG size}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "AllocMem() with tracking to make freeing easy.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0394.html"
	},
	{
		"displayText": "AllocScreenBuffer(sc, bm, flags)",
		"snippet": "AllocScreenBuffer(${1:struct Screen *sc}, ${2:struct BitMap *bm}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "struct ScreenBuffer*",
		"description": "Get a ScreenBuffer for double-buffering. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0395.html"
	},
	{
		"displayText": "AllocSignal(signalNum)",
		"snippet": "AllocSignal(${1:LONG signalNum})${2:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Allocate a signal bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01E9.html"
	},
	{
		"displayText": "AllocSpeedButtonNode(number, tag1, ...)",
		"snippet": "AllocSpeedButtonNode(${1:ULONG number}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0569.html"
	},
	{
		"displayText": "AllocSpeedButtonNodeA(number, tags)",
		"snippet": "AllocSpeedButtonNodeA(${1:ULONG number}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Allocate a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0569.html"
	},
	{
		"displayText": "AllocSpriteData(bitMap, tag1, ...)",
		"snippet": "AllocSpriteData(${1:CONST struct BitMap *bm}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct ExtSprite*",
		"description": "Allocate sprite data and convert from a bitmap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A3.html"
	},
	{
		"displayText": "AllocSpriteDataA(bitMap, tags)",
		"snippet": "AllocSpriteDataA(${1:CONST struct BitMap *bm}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct ExtSprite*",
		"description": "Allocate sprite data and convert from a bitmap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A3.html"
	},
	{
		"displayText": "AllocTrap(trapNum)",
		"snippet": "AllocTrap(${1:LONG trapNum})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Allocate a processor trap vector.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EA.html"
	},
	{
		"displayText": "AllocUnit(unitNum)",
		"snippet": "AllocUnit(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Allocate a unit of the disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012C.html"
	},
	{
		"displayText": "AllocVec(byteSize, requirements)",
		"snippet": "AllocVec(${1:ULONG byteSize}, ${2:ULONG requirements})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory and keep track of the size. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EB.html"
	},
	{
		"displayText": "Amiga2Date(seconds, result)",
		"snippet": "Amiga2Date(${1:ULONG seconds}, ${2:struct ClockData *result})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Fill in a ClockData structure based on a system time stamp (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0596.html"
	},
	{
		"displayText": "AmigaGuideSignal(handle)",
		"snippet": "AmigaGuideSignal(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain aysnc AmigaGuide signal. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0008.html"
	},
	{
		"displayText": "AndRectRegion(region, rectangle)",
		"snippet": "AndRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Perform 2d AND operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A4.html"
	},
	{
		"displayText": "AndRegionRegion(srcRegion, destRegion)",
		"snippet": "AndRegionRegion(${1:CONST struct Region *src}, ${2:struct Region *dest})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d AND operation of two regions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A5.html"
	},
	{
		"displayText": "Animate(anKey, rastPort)",
		"snippet": "Animate(${1:struct AnimOb **anKey}, ${2:struct RastPort *rp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Processes every AnimOb in the current animation list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A6.html"
	},
	{
		"displayText": "ApplyTagChanges(list, changeList)",
		"snippet": "ApplyTagChanges(${1:struct TagItem *list}, ${2:CONST struct TagItem *changeList})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change a tag list based on a second tag list. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0597.html"
	},
	{
		"displayText": "AreaCircle(rastPort, xCenter, yCenter, radius)",
		"snippet": "AreaCircle(${1:struct RastPort *rp}, ${2:WORD xCenter}, ${3:WORD yCenter}, ${4:WORD radius})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Add a circle to areainfo list for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A7.html"
	},
	{
		"displayText": "AreaDraw(rastPort, x, y)",
		"snippet": "AreaDraw(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add a point to a list of end points for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A8.html"
	},
	{
		"displayText": "AreaEllipse(rastPort, xCenter, yCenter, a, b)",
		"snippet": "AreaEllipse(${1:struct RastPort *rp}, ${2:LONG xCenter}, ${3:LONG yCenter}, ${4:LONG a}, ${5:LONG b})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an ellipse to areainfo list for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02A9.html"
	},
	{
		"displayText": "AreaEnd(rastPort)",
		"snippet": "AreaEnd(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Process table of vectors and ellipses and produce areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AA.html"
	},
	{
		"displayText": "AreaMove(rastPort, x, y)",
		"snippet": "AreaMove(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Define a new starting point for a new shape in the vector list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AB.html"
	},
	{
		"displayText": "ArgArrayDone()",
		"snippet": "ArgArrayDone()",
		"type": "function",
		"leftLabel": "void",
		"description": "Release the memory allocated by a previous call to ArgArrayInit(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001E.html"
	},
	{
		"displayText": "ArgArrayInit(argc, argv)",
		"snippet": "ArgArrayInit(${1:LONG argc}, ${2:CONST_STRPTR *argv})${3:}",
		"type": "function",
		"leftLabel": "STRPTR*",
		"description": "Allocate and initialize a tooltype array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node001F.html"
	},
	{
		"displayText": "ArgInt(tt, entry, defaultval)",
		"snippet": "ArgInt(${1:CONST_STRPTR *tt}, ${2:CONST_STRPTR entry}, ${3:LONG defaultval})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return an integer value from a ToolTypes array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0020.html"
	},
	{
		"displayText": "ArgString(toolTypes, entry, defaultstring)",
		"snippet": "ArgString(${1:CONST_STRPTR *toolTypes}, ${2:CONST_STRPTR entry}, ${3:CONST_STRPTR defStr})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Return a string pointer from a ToolTypes array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0021.html"
	},
	{
		"displayText": "arnd(place, exp, string)",
		"snippet": "arnd(${1:LONG place}, ${2:LONG exp}, ${3:STRPTR str})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "ASCII round of the provided floating point string.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0022.html"
	},
	{
		"displayText": "AskFont(rastPort, textAttr)",
		"snippet": "AskFont(${1:struct RastPort *rp}, ${2:struct TextAttr *attr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the text attributes of the current font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AC.html"
	},
	{
		"displayText": "AskKeyMapDefault()",
		"snippet": "AskKeyMapDefault()",
		"type": "function",
		"leftLabel": "struct KeyMap*",
		"description": "Ask for a pointer to the current default keymap. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0410.html"
	},
	{
		"displayText": "AskSoftStyle(rastPort)",
		"snippet": "AskSoftStyle(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the soft style bits of the current font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AD.html"
	},
	{
		"displayText": "AslRequest(requester, tagList)",
		"snippet": "AslRequest(${1:APTR requester}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Get input from user using an ASL requester. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005B.html"
	},
	{
		"displayText": "AssignAdd(name, lock)",
		"snippet": "AssignAdd(${1:CONST_STRPTR name}, ${2:BPTR lock})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Adds a lock to an assign for multi-directory assigns. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node013F.html"
	},
	{
		"displayText": "AssignLate(name, path)",
		"snippet": "AssignLate(${1:CONST_STRPTR name}, ${2:CONST_STRPTR path})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Creates an assignment to a specified path later. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0140.html"
	},
	{
		"displayText": "AssignLock(name, lock)",
		"snippet": "AssignLock(${1:CONST_STRPTR name}, ${2:BPTR lock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Creates an assignment to a locked object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0141.html"
	},
	{
		"displayText": "AssignPath(name, path)",
		"snippet": "AssignPath(${1:CONST_STRPTR name}, ${2:CONST_STRPTR path})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Creates an assignment to a specified path. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0142.html"
	},
	{
		"displayText": "AttachCxObj(headObj, cxObj)",
		"snippet": "AttachCxObj(${1:CxObj *headObj}, ${2:CxObj *co})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attach a commodity object to the end of an existing list of objects. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E2.html"
	},
	{
		"displayText": "AttachPalExtra(colorMap, viewPort)",
		"snippet": "AttachPalExtra(${1:struct ColorMap *cm}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Allocate and attach a palette sharing structure to a colormap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AE.html"
	},
	{
		"displayText": "AttemptLockDosList(flags)",
		"snippet": "AttemptLockDosList(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Attempt to lock the Dos Lists for use. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0143.html"
	},
	{
		"displayText": "AttemptLockLayerRom(layer)",
		"snippet": "AttemptLockLayerRom(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Attempt to Lock Layer structure by ROM(gfx lib) code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02AF.html"
	},
	{
		"displayText": "AttemptRemNamedObject(object)",
		"snippet": "AttemptRemNamedObject(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Attempt to remove a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0598.html"
	},
	{
		"displayText": "AttemptSemaphore(sigSem)",
		"snippet": "AttemptSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Try to obtain without blocking.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EC.html"
	},
	{
		"displayText": "AttemptSemaphoreShared(sigSem)",
		"snippet": "AttemptSemaphoreShared(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Try to obtain without blocking. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01ED.html"
	},
	{
		"displayText": "AutoRequest(window, body, posText, negText, pFlag, nFlag, width, height)",
		"snippet": "AutoRequest(${1:struct Window *win}, ${2:CONST struct IntuiText *body}, ${3:CONST struct IntuiText *posText}, ${4:CONST struct IntuiText *negText}, ${5:ULONG pFlag}, ${6:ULONG nFlag}, ${7:ULONG width}, ${8:ULONG height})${9:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Automatically build and get response from a requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0396.html"
	},
	{
		"displayText": "AvailFonts(buffer, bufBytes, flags)",
		"snippet": "AvailFonts(${1:STRPTR buffer}, ${2:LONG bufBytes}, ${3:LONG flags})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Inquire available memory & disk fonts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0133.html"
	},
	{
		"displayText": "AvailMem(requirements)",
		"snippet": "AvailMem(${1:ULONG requirements})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Memory available given certain requirements.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EE.html"
	},
	{
		"displayText": "BeginCardAccess(handle)",
		"snippet": "BeginCardAccess(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Called before you begin credit-card memory access.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008F.html"
	},
	{
		"displayText": "BeginIO(ioRequest)",
		"snippet": "BeginIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initiate asynchronous device I/O.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0557.html"
	},
	{
		"displayText": "BeginRefresh(window)",
		"snippet": "BeginRefresh(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sets up a window for optimized refreshing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0397.html"
	},
	{
		"displayText": "BeginUpdate(layer)",
		"snippet": "BeginUpdate(${1:struct Layer *l})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Prepare to repair damaged layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0418.html"
	},
	{
		"displayText": "BehindLayer(dummy, layer)",
		"snippet": "BehindLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Put layer behind other layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0419.html"
	},
	{
		"displayText": "BestModeID(tag1, ...)",
		"snippet": "BestModeID(${1:ULONG tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate the best ModeID with given parameters. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B0.html"
	},
	{
		"displayText": "BestModeIDA(tags)",
		"snippet": "BestModeIDA(${1:CONST struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate the best ModeID with given parameters. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B0.html"
	},
	{
		"displayText": "BEVEL_GetClass()",
		"snippet": "BEVEL_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the bevel class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0080.html"
	},
	{
		"displayText": "BITMAP_GetClass()",
		"snippet": "BITMAP_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the bitmap class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0083.html"
	},
	{
		"displayText": "BitMapScale(bitScaleArgs)",
		"snippet": "BitMapScale(${1:struct BitScaleArgs *bitScaleArgs})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Perform raster scaling on a bit map. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B1.html"
	},
	{
		"displayText": "BltBitMap(srcBitMap, xSrc, ySrc, destBitMap, xDest, yDest, xSize, ySize, minterm, mask, tempA)",
		"snippet": "BltBitMap(${1:CONST struct BitMap *src}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct BitMap *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm}, ${10:ULONG mask}, ${11:PLANEPTR tempA})${12:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Move a rectangular region of bits in a BitMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B2.html"
	},
	{
		"displayText": "BltBitMapRastPort(srcBitMap, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm)",
		"snippet": "BltBitMapRastPort(${1:CONST struct BitMap src}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm})${10:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Blit from source bitmap to destination rastport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B3.html"
	},
	{
		"displayText": "BltClear(memBlock, byteCount, flags)",
		"snippet": "BltClear(${1:PLANEPTR memBlock}, ${2:ULONG byteCount}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear a block of memory words to zero.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B4.html"
	},
	{
		"displayText": "BltMaskBitMapRastPort(srcBitMap, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm, bltMask)",
		"snippet": "BltMaskBitMapRastPort(${1:CONST struct BitMap src}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm}, ${10:CONST PLANEPTR bltMask})${11:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Blit from source bitmap to destination rastport with masking.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B5.html"
	},
	{
		"displayText": "BltPattern(rastPort, mask, xMin, yMin, xMax, yMax, maskBPR)",
		"snippet": "BltPattern(${1:struct RastPort *rp}, ${2:CONST PLANEPTR mask}, ${3:LONG xMin}, ${4:LONG yMin}, ${5:LONG xMax}, ${6:LONG yMax}, ${7:ULONG maskBPR})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Blit through a mask using standard drawing rules for areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B6.html"
	},
	{
		"displayText": "BltTemplate(source, xSrc, srcMod, destRP, xDest, yDest, xSize, ySize)",
		"snippet": "BltTemplate(${1:CONST PLANEPTR source}, ${2:LONG xSrc}, ${3:LONG srcMod}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize})${9:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Cookie cut a shape in a rectangle to the RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B7.html"
	},
	{
		"displayText": "BrowserNodes(label1, ...)",
		"snippet": "BrowserNodes(${1:STRPTR label1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of listbrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0523.html"
	},
	{
		"displayText": "BrowserNodesA(labels)",
		"snippet": "BrowserNodesA(${1:STRPTR *labels})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of listbrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0523.html"
	},
	{
		"displayText": "BuildEasyRequestArgs(window, easyStruct, idcmp, args)",
		"snippet": "BuildEasyRequestArgs(${1:struct Window *win}, ${2:CONST struct EasyStruct *easyStruct}, ${3:ULONG idcmp}, ${4:CONST APTR args})${5:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Simple creation of system request. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0398.html"
	},
	{
		"displayText": "BuildSysRequest(window, body, posText, negText, flags, width, height)",
		"snippet": "BuildSysRequest(${1:struct Window *win}, ${2:CONST struct IntuiText *body}, ${3:CONST struct IntuiText *posText}, ${4:CONST struct IntuiText *negText}, ${5:ULONG flags}, ${6:ULONG width}, ${7:ULONG height})${8:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Build and display a system requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0399.html"
	},
	{
		"displayText": "BumpRevision(newname, oldname)",
		"snippet": "BumpRevision(${1:STRPTR newname}, ${2:CONST STRPTR oldname})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Reformat a name for a second copy.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0344.html"
	},
	{
		"displayText": "BUTTON_GetClass()",
		"snippet": "BUTTON_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the button class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008D.html"
	},
	{
		"displayText": "CacheClearE(address, length, caches)",
		"snippet": "CacheClearE(${1:APTR address}, ${2:ULONG length}, ${3:ULONG caches})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Cache clearing with extended control. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01EF.html"
	},
	{
		"displayText": "CacheClearU()",
		"snippet": "CacheClearU()",
		"type": "function",
		"leftLabel": "void",
		"description": "User callable simple cache clearing. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F0.html"
	},
	{
		"displayText": "CacheControl(cacheBits, cacheMask)",
		"snippet": "CacheControl(${1:ULONG cacheBits}, ${2:ULONG cacheMask})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Instruction & data cache control.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F1.html"
	},
	{
		"displayText": "CachePostDMA(address, length, flags)",
		"snippet": "CachePostDMA(${1:CONST APTR address}, ${2:ULONG *length}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Take actions after to hardware DMA. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F2.html"
	},
	{
		"displayText": "CachePreDMA(address, length, flags)",
		"snippet": "CachePreDMA(${1:CONST APTR address}, ${2:ULONG *length}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Take actions prior to hardware DMA. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F3.html"
	},
	{
		"displayText": "CalcIVG(view, viewPort)",
		"snippet": "CalcIVG(${1:struct View *v}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Calculate the number of blank lines above a ViewPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B8.html"
	},
	{
		"displayText": "CallHook(hook, object, ...)",
		"snippet": "CallHook(${1:struct Hook *hook}, ${2:Object *obj}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke a hook given a message on the stack.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0024.html"
	},
	{
		"displayText": "CallHookA(hook, object, message)",
		"snippet": "CallHookA(${1:struct Hook *hook}, ${2:Object *obj}, ${3:APTR msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke a hook given a pointer to a message.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0025.html"
	},
	{
		"displayText": "CallHookPkt(hook, object, paramPacket)",
		"snippet": "CallHookPkt(${1:struct Hook *hook}, ${2:APTR object}, ${3:APTR paramPacket})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke a Hook function callback. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0599.html"
	},
	{
		"displayText": "CardAccessSpeed(handle, nanoseconds)",
		"snippet": "CardAccessSpeed(${1:struct CardHandle *handle}, ${2:ULONG nanoseconds})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Select best possible memory access speed.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0090.html"
	},
	{
		"displayText": "CardChangeCount()",
		"snippet": "CardChangeCount()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain card change count.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0091.html"
	},
	{
		"displayText": "CardForceChange()",
		"snippet": "CardForceChange()",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Force a card change.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0092.html"
	},
	{
		"displayText": "CardInterface()",
		"snippet": "CardInterface()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Determine the type of card interface.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0093.html"
	},
	{
		"displayText": "CardMiscControl(handle, control_bits)",
		"snippet": "CardMiscControl(${1:struct CardHandle *handle}, ${2:ULONG control_bits})${3:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Set/Clear miscellaneous control bits.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0094.html"
	},
	{
		"displayText": "CardProgramVoltage(handle, voltage)",
		"snippet": "CardProgramVoltage(${1:struct CardHandle *handle}, ${2:ULONG voltage})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set programming voltage.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0095.html"
	},
	{
		"displayText": "CardResetCard(handle)",
		"snippet": "CardResetCard(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Reset credit-card.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0096.html"
	},
	{
		"displayText": "CardResetRemove(handle, flag)",
		"snippet": "CardResetRemove(${1:struct CardHandle *handle}, ${2:ULONG flag})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set/Clear reset on card removal.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0097.html"
	},
	{
		"displayText": "Cause(interrupt)",
		"snippet": "Cause(${1:struct Interrupt *interrupt})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Cause a software interrupt.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F4.html"
	},
	{
		"displayText": "CBump(copList)",
		"snippet": "CBump(${1:struct UCopList *copList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Increment user copper list pointer (bump to next position in list).",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02B9.html"
	},
	{
		"displayText": "CDInputHandler(events, consoleDevice)",
		"snippet": "CDInputHandler(${1:CONST struct InputEvent *events}, ${2:struct Library *consoleDevice})${3:}",
		"type": "function",
		"leftLabel": "struct InputEvent*",
		"description": "Handle an input event for the console device.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00FF.html"
	},
	{
		"displayText": "ChangeExtSprite(viewPort, oldSprite, newSprite, tag1, ...)",
		"snippet": "ChangeExtSprite(${1:struct ViewPort *vp}, ${2:struct ExtSprite *oldsprite}, ${3:struct ExtSprite *newsprite}, ${4:ULONG tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the sprite image pointer. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BB.html"
	},
	{
		"displayText": "ChangeExtSpriteA(viewPort, oldSprite, newSprite, tags)",
		"snippet": "ChangeExtSpriteA(${1:struct ViewPort *vp}, ${2:struct ExtSprite *oldsprite}, ${3:struct ExtSprite *newsprite}, ${4:CONST struct TagItem *tags})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the sprite image pointer. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BB.html"
	},
	{
		"displayText": "ChangeMode(type, fh, newmode)",
		"snippet": "ChangeMode(${1:LONG type}, ${2:BPTR fh}, ${3:LONG newmode})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the current mode of a lock or filehandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0144.html"
	},
	{
		"displayText": "ChangeScreenBuffer(sc, sb)",
		"snippet": "ChangeScreenBuffer(${1:struct Screen *sc}, ${2:struct ScreenBuffer *sb})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Swap the screen's BitMap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039A.html"
	},
	{
		"displayText": "ChangeSprite(viewPort, sprite, newData)",
		"snippet": "ChangeSprite(${1:struct ViewPort *vp}, ${2:struct SimpleSprite *sprite}, ${3:UWORD *newData})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the sprite image pointer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BC.html"
	},
	{
		"displayText": "ChangeToSelectedIconColor(cr)",
		"snippet": "ChangeToSelectedIconColor(${1:struct ColorRegister *cr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Modify a RGB color value for use in a selected icon image (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0345.html"
	},
	{
		"displayText": "ChangeVPBitMap(viewPort, bitMap, dbInfo)",
		"snippet": "ChangeVPBitMap(${1:struct ViewPort *vp}, ${2:struct BitMap *bm}, ${3:struct DBufInfo *db})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change display memory address for multi-buffered animation. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BD.html"
	},
	{
		"displayText": "ChangeWindowBox(window, left, top, width, height)",
		"snippet": "ChangeWindowBox(${1:struct Window *win}, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change window position and dimensions. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039B.html"
	},
	{
		"displayText": "ChangeWorkbenchSelection(name, hook, ...)",
		"snippet": "ChangeWorkbenchSelection(${1:STRPTR name}, ${2:struct Hook *hook}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the selection states of icons. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BE.html"
	},
	{
		"displayText": "ChangeWorkbenchSelectionA(name, hook, tags)",
		"snippet": "ChangeWorkbenchSelectionA(${1:STRPTR name}, ${2:struct Hook *hook}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the selection states of icons. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BE.html"
	},
	{
		"displayText": "CHECKBOX_GetClass()",
		"snippet": "CHECKBOX_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the checkbox class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00BE.html"
	},
	{
		"displayText": "CheckDate(date)",
		"snippet": "CheckDate(${1:CONST struct ClockData *date})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Checks a ClockData structure for legal date. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059A.html"
	},
	{
		"displayText": "CheckIO(ioRequest)",
		"snippet": "CheckIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "struct IORequest*",
		"description": "Get the status of an IORequest.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F5.html"
	},
	{
		"displayText": "CheckRexxMsg(rexxmsg)",
		"snippet": "CheckRexxMsg(${1:CONST struct RexxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Check if a RexxMsg is from ARexx.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0026.html"
	},
	{
		"displayText": "CheckSignal(mask)",
		"snippet": "CheckSignal(${1:LONG mask})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Checks for break signals. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0145.html"
	},
	{
		"displayText": "CHOOSER_GetClass()",
		"snippet": "CHOOSER_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the chooser class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C2.html"
	},
	{
		"displayText": "ChooserLabels(STRPTR, ...)",
		"snippet": "ChooserLabels(${1:STRPTR}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of chooser labels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0524.html"
	},
	{
		"displayText": "ChooserLabelsA(*)",
		"snippet": "ChooserLabelsA(${1:STRPTR *})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of chooser labels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0524.html"
	},
	{
		"displayText": "ClearCxObjError(co)",
		"snippet": "ClearCxObjError(${1:CxObj *co})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear the accumulated error value of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E3.html"
	},
	{
		"displayText": "ClearDMRequest(window)",
		"snippet": "ClearDMRequest(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Clear (detaches) the DMRequest of the window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039C.html"
	},
	{
		"displayText": "ClearEOL(rastPort)",
		"snippet": "ClearEOL(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear from current position to end of line.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02BF.html"
	},
	{
		"displayText": "ClearMenuStrip(window)",
		"snippet": "ClearMenuStrip(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear (detach) the menu strip from the window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039D.html"
	},
	{
		"displayText": "ClearPointer(window)",
		"snippet": "ClearPointer(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear the mouse pointer definition from a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039E.html"
	},
	{
		"displayText": "ClearRectRegion(region, rectangle)",
		"snippet": "ClearRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d CLEAR operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C0.html"
	},
	{
		"displayText": "ClearRegion(region)",
		"snippet": "ClearRegion(${1:struct Region *region})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove all rectangles from region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C1.html"
	},
	{
		"displayText": "ClearRexxMsg(msgptr, count)",
		"snippet": "ClearRexxMsg(${1:struct RexxMsg *msgptr}, ${2:ULONG count})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases and clears the argument array in a RexxMsg.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0548.html"
	},
	{
		"displayText": "ClearScreen(rastPort)",
		"snippet": "ClearScreen(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Clear from current position to end of RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C2.html"
	},
	{
		"displayText": "CLICKTAB_GetClass()",
		"snippet": "CLICKTAB_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the clicktab class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CE.html"
	},
	{
		"displayText": "Cli()",
		"snippet": "Cli()",
		"type": "function",
		"leftLabel": "struct CommandLineInterface*",
		"description": "Returns a pointer to the CLI structure of the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0146.html"
	},
	{
		"displayText": "ClickTabs(STRPTR, ...)",
		"snippet": "ClickTabs(${1:STRPTR}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of clicktab nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0525.html"
	},
	{
		"displayText": "ClickTabsA(*)",
		"snippet": "ClickTabsA(${1:STRPTR *})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of clicktab nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0525.html"
	},
	{
		"displayText": "CliInitNewcli(dp)",
		"snippet": "CliInitNewcli(${1:struct DosPacket *dp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set up a process to be a shell from initial packet.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0147.html"
	},
	{
		"displayText": "CliInitRun(dp)",
		"snippet": "CliInitRun(${1:struct DosPacket *dp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set up a process to be a shell from initial packet.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0148.html"
	},
	{
		"displayText": "ClipBlit(srcRP, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm)",
		"snippet": "ClipBlit(${1:struct RastPort *srcRP}, ${2:LONG xSrc}, ${3:LONG ySrc}, ${4:struct RastPort *dest}, ${5:LONG xDest}, ${6:LONG yDest}, ${7:LONG xSize}, ${8:LONG ySize}, ${9:ULONG minterm})${10:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Calls BltBitMap() after accounting for windows.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C3.html"
	},
	{
		"displayText": "CloneTagItems(tagList)",
		"snippet": "CloneTagItems(${1:CONST struct TagItem *tagList})${2:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Copy a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059B.html"
	},
	{
		"displayText": "Close(file)",
		"snippet": "Close(${1:BPTR file})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Close an open file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0149.html"
	},
	{
		"displayText": "CloseAmigaGuide(handle)",
		"snippet": "CloseAmigaGuide(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close an AmigaGuide client. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0009.html"
	},
	{
		"displayText": "CloseCatalog(catalog)",
		"snippet": "CloseCatalog(${1:struct Catalog *catalog})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close a message catalog. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0452.html"
	},
	{
		"displayText": "CloseClipboard(clipHandle)",
		"snippet": "CloseClipboard(${1:struct ClipboardHandle *clipHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close and free an open ClipboardHandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035B.html"
	},
	{
		"displayText": "CloseDevice(ioRequest)",
		"snippet": "CloseDevice(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Terminate access to the audio device.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0558.html"
	},
	{
		"displayText": "CloseEngine(glyphEngine)",
		"snippet": "CloseEngine(${1:struct GlyphEngine *glyphEngine})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release an engine handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0086.html"
	},
	{
		"displayText": "CloseFont(textFont)",
		"snippet": "CloseFont(${1:struct TextFont *textFont})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a pointer to a system font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C4.html"
	},
	{
		"displayText": "CloseIFF(iffHandle)",
		"snippet": "CloseIFF(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close an IFF context. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035C.html"
	},
	{
		"displayText": "CloseLibrary(library)",
		"snippet": "CloseLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Conclude access to a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F7.html"
	},
	{
		"displayText": "CloseLocale(locale)",
		"snippet": "CloseLocale(${1:struct Locale *locale})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close a locale. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0453.html"
	},
	{
		"displayText": "CloseMonitor(monitorSpec)",
		"snippet": "CloseMonitor(${1:struct MonitorSpec *spec})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close a MonitorSpec. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C5.html"
	},
	{
		"displayText": "CloseScreen(screen)",
		"snippet": "CloseScreen(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close an Intuition screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node039F.html"
	},
	{
		"displayText": "CloseWindow(window)",
		"snippet": "CloseWindow(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close an Intuition window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A0.html"
	},
	{
		"displayText": "CloseWorkBench()",
		"snippet": "CloseWorkBench()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Closes the Workbench screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A1.html"
	},
	{
		"displayText": "CloseWorkbenchObject(name, ...)",
		"snippet": "CloseWorkbenchObject(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close a drawer window. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BF.html"
	},
	{
		"displayText": "CloseWorkbenchObjectA(name, tags)",
		"snippet": "CloseWorkbenchObjectA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Close a drawer window. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05BF.html"
	},
	{
		"displayText": "CmpTime(dest, src)",
		"snippet": "CmpTime(${1:CONST struct timeval *dest}, ${2:CONST struct timeval *src})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two timeval structures.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0576.html"
	},
	{
		"displayText": "CoerceMethod(class, object, methodID, ...)",
		"snippet": "CoerceMethod(${1:struct IClass *cl}, ${2:Object *obj}, ${3:ULONG methodID}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on coerced object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0027.html"
	},
	{
		"displayText": "CoerceMethodA(class, object, message)",
		"snippet": "CoerceMethodA(${1:struct IClass *cl}, ${2:Object *obj}, ${3:Msg msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on coerced object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0028.html"
	},
	{
		"displayText": "CoerceMode(viewPort, monitorID, flags)",
		"snippet": "CoerceMode(${1:struct ViewPort *vp}, ${2:ULONG monitorid}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate ViewPort mode coercion. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C7.html"
	},
	{
		"displayText": "ColdReboot()",
		"snippet": "ColdReboot()",
		"type": "function",
		"leftLabel": "void",
		"description": "Reboot the Amiga. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F8.html"
	},
	{
		"displayText": "CollectionChunk(iffHandle, type, id)",
		"snippet": "CollectionChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare a chunk type for collection. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035D.html"
	},
	{
		"displayText": "CollectionChunks(iffHandle, propArray, numPairs)",
		"snippet": "CollectionChunks(${1:struct IFFHandle *iff}, ${2:CONST LONG *propArray}, ${3:LONG numPairs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare many collection chunks at once. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035E.html"
	},
	{
		"displayText": "CompareDates(date1, date2)",
		"snippet": "CompareDates(${1:CONST struct DateStamp *date1}, ${2:CONST struct DateStamp *date2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compares two datestamps. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014A.html"
	},
	{
		"displayText": "ConfigBoard(board, configDev)",
		"snippet": "ConfigBoard(${1:APTR board}, ${2:struct ConfigDev *configDev})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Configure a board.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0261.html"
	},
	{
		"displayText": "ConvertHSBToRGB(hsb, rgb)",
		"snippet": "ConvertHSBToRGB(${1:struct ColorWheelHSB *hsb}, ${2:struct ColorWheelRGB *rgb})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert from an HSB color space to an RGB color space. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00DD.html"
	},
	{
		"displayText": "ConvertRGBToHSB(rgb, hsb)",
		"snippet": "ConvertRGBToHSB(${1:struct ColorWheelRGB *rgb}, ${2:struct ColorWheelHSB *hsb})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert from an RGB color space to an HSB color space. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00DE.html"
	},
	{
		"displayText": "ConvToLower(locale, character)",
		"snippet": "ConvToLower(${1:struct Locale *locale}, ${2:ULONG ch})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Convert a character to lower case. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0454.html"
	},
	{
		"displayText": "ConvToUpper(locale, character)",
		"snippet": "ConvToUpper(${1:struct Locale *locale}, ${2:ULONG ch})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Convert a character to upper case. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0455.html"
	},
	{
		"displayText": "CopyMem(source, dest, size)",
		"snippet": "CopyMem(${1:CONST APTR source}, ${2:APTR dest}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "General purpose memory copy function.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01F9.html"
	},
	{
		"displayText": "CopyMemQuick(source, dest, size)",
		"snippet": "CopyMemQuick(${1:CONST APTR source}, ${2:APTR dest}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Optimized memory copy function.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FA.html"
	},
	{
		"displayText": "CopySBitMap(layer)",
		"snippet": "CopySBitMap(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Syncronize Layer window with contents of Super BitMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02C8.html"
	},
	{
		"displayText": "CopyTuple(handle, buffer, tuplecode, size)",
		"snippet": "CopyTuple(${1:CONST struct CardHandle *handle}, ${2:UBYTE *buffer}, ${3:ULONG tuplecode}, ${4:ULONG size})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Find/copy a credit card tuple.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0098.html"
	},
	{
		"displayText": "CreateArgstring(string, length)",
		"snippet": "CreateArgstring(${1:CONST_STRPTR str}, ${2:ULONG length})${3:}",
		"type": "function",
		"leftLabel": "UBYTE*",
		"description": "Create an argument string structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0549.html"
	},
	{
		"displayText": "CreateBehindHookLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, hook, bitMap2)",
		"snippet": "CreateBehindHookLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct Hook *hook}, ${9:struct BitMap *bm2})${10:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a layer behind all layers using callback hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041A.html"
	},
	{
		"displayText": "CreateBehindLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, bitMap2)",
		"snippet": "CreateBehindLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct BitMap *bm2})${9:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a new layer behind all existing layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041B.html"
	},
	{
		"displayText": "CreateContext(glistpointer)",
		"snippet": "CreateContext(${1:struct Gadget **glistptr})${2:}",
		"type": "function",
		"leftLabel": "struct Gadget*",
		"description": "Create a place for GadTools context data. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0274.html"
	},
	{
		"displayText": "CreateCxObj(type, arg1, arg2)",
		"snippet": "CreateCxObj(${1:ULONG type}, ${2:LONG arg1}, ${3:LONG arg2})${4:}",
		"type": "function",
		"leftLabel": "CxObj*",
		"description": "Create a new commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E4.html"
	},
	{
		"displayText": "CreateDir(name)",
		"snippet": "CreateDir(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Create a new directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014B.html"
	},
	{
		"displayText": "CreateExtIO(port, ioSize)",
		"snippet": "CreateExtIO(${1:CONST struct MsgPort *port}, ${2:LONG ioSize})${3:}",
		"type": "function",
		"leftLabel": "struct IORequest*",
		"description": "Create an IORequest structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0029.html"
	},
	{
		"displayText": "CreateGadget(kind, gadget, newGadget, tag1, ...)",
		"snippet": "CreateGadget(${1:ULONG kind}, ${2:struct Gadget *gad}, ${3:CONST struct NewGadget *ng}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "struct Gadget*",
		"description": "Allocate and initialize a gadtools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0275.html"
	},
	{
		"displayText": "CreateGadgetA(kind, gadget, newGadget, tagList)",
		"snippet": "CreateGadgetA(${1:ULONG kind}, ${2:struct Gadget *gad}, ${3:CONST struct NewGadget *ng}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "struct Gadget*",
		"description": "Allocate and initialize a gadtools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0275.html"
	},
	{
		"displayText": "CreateIORequest(port, size)",
		"snippet": "CreateIORequest(${1:CONST struct MsgPort *port}, ${2:ULONG size})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Create an IORequest structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FB.html"
	},
	{
		"displayText": "CreateMenus(newMenu, tag1, ...)",
		"snippet": "CreateMenus(${1:CONST struct NewMenu *menu}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "struct Menu*",
		"description": "Allocate and fill out a menu structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0276.html"
	},
	{
		"displayText": "CreateMenusA(newMenu, tagList)",
		"snippet": "CreateMenusA(${1:CONST struct NewMenu *menu}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct Menu*",
		"description": "Allocate and fill out a menu structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0276.html"
	},
	{
		"displayText": "CreateMsgPort()",
		"snippet": "CreateMsgPort()",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Allocate and initialize a new message port. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FC.html"
	},
	{
		"displayText": "CreateNewProc(tags)",
		"snippet": "CreateNewProc(${1:CONST struct TagItem *tags})${2:}",
		"type": "function",
		"leftLabel": "struct Process*",
		"description": "Create a new process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014C.html"
	},
	{
		"displayText": "CreatePlayer(tag1, ...)",
		"snippet": "CreatePlayer(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct Player*",
		"description": "Create a player and link it to a conductor. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0533.html"
	},
	{
		"displayText": "CreatePool(requirements, puddleSize, threshSize)",
		"snippet": "CreatePool(${1:ULONG requirements}, ${2:ULONG puddleSize}, ${3:ULONG threshSize})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Generate a private memory pool header. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FD.html"
	},
	{
		"displayText": "CreatePort(name, priority)",
		"snippet": "CreatePort(${1:CONST_STRPTR name}, ${2:LONG pri})${3:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Allocate and initialize a new message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node002A.html"
	},
	{
		"displayText": "CreateProc(name, priority, segList, stackSize)",
		"snippet": "CreateProc(${1:CONST_STRPTR name}, ${2:LONG pri}, ${3:BPTR segList}, ${4:LONG stackSize})${5:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Create a new process.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014D.html"
	},
	{
		"displayText": "CreateRexxMsg(port, extension, host)",
		"snippet": "CreateRexxMsg(${1:CONST struct MsgPort *port}, ${2:CONST_STRPTR extension}, ${3:CONST_STRPTR host})${4:}",
		"type": "function",
		"leftLabel": "struct RexxMsg*",
		"description": "Create an ARexx message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054A.html"
	},
	{
		"displayText": "CreateStdIO(port)",
		"snippet": "CreateStdIO(${1:CONST struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "struct IOStdReq*",
		"description": "Create an IOStdReq structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node002B.html"
	},
	{
		"displayText": "CreateTask(name, priority, initPC, stackSize)",
		"snippet": "CreateTask(${1:CONST_STRPTR name}, ${2:LONG pri}, ${3:CONST APTR initPC}, ${4:ULONG stackSize})${5:}",
		"type": "function",
		"leftLabel": "struct Task*",
		"description": "Create task with given name, priority, stacksize.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node002C.html"
	},
	{
		"displayText": "CreateUpfrontHookLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, hook, bitMap2)",
		"snippet": "CreateUpfrontHookLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct Hook *hook}, ${9:struct BitMap *bm2})${10:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a layer on top of all layers using callback hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041C.html"
	},
	{
		"displayText": "CreateUpfrontLayer(layerInfo, bitMap, x0, y0, x1, y1, flags, bitMap2)",
		"snippet": "CreateUpfrontLayer(${1:struct Layer_Info *li}, ${2:struct BitMap *bm}, ${3:LONG x0}, ${4:LONG y0}, ${5:LONG x1}, ${6:LONG y1}, ${7:LONG flags}, ${8:struct BitMap *bm2})${9:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Create a new layer on top of existing layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041D.html"
	},
	{
		"displayText": "CurrentChunk(iffHandle)",
		"snippet": "CurrentChunk(${1:CONST struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "struct ContextNode*",
		"description": "Get context node for current chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node035F.html"
	},
	{
		"displayText": "CurrentDir(lock)",
		"snippet": "CurrentDir(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Make a directory lock the current directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014E.html"
	},
	{
		"displayText": "CurrentTime(seconds, micros)",
		"snippet": "CurrentTime(${1:ULONG *seconds}, ${2:ULONG *micros})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the current time values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A2.html"
	},
	{
		"displayText": "CxBroker(newBroker, error)",
		"snippet": "CxBroker(${1:CONST struct NewBroker *nb}, ${2:LONG *error})${3:}",
		"type": "function",
		"leftLabel": "CxObj*",
		"description": "Create a commodity broker. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E5.html"
	},
	{
		"displayText": "CxMsgData(cxMessage)",
		"snippet": "CxMsgData(${1:CONST CxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Obtain a pointer to a commodity message's data area. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E6.html"
	},
	{
		"displayText": "CxMsgID(cxMessage)",
		"snippet": "CxMsgID(${1:CONST CxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Obtain the ID of a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E7.html"
	},
	{
		"displayText": "CxMsgType(cxMessage)",
		"snippet": "CxMsgType(${1:CONST CxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain the type of a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E8.html"
	},
	{
		"displayText": "CxObjError(cxObject)",
		"snippet": "CxObjError(${1:CONST CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Obtain a commodity object's accumulated error. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00E9.html"
	},
	{
		"displayText": "CxObjType(cxObject)",
		"snippet": "CxObjType(${1:CONST CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain the type of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EA.html"
	},
	{
		"displayText": "Date2Amiga(date)",
		"snippet": "Date2Amiga(${1:CONST struct ClockData *date})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Calculate seconds from 01-Jan-1978. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059C.html"
	},
	{
		"displayText": "DateStamp(date)",
		"snippet": "DateStamp(${1:struct DateStamp *date})${2:}",
		"type": "function",
		"leftLabel": "struct DateStamp*",
		"description": "Obtain the date and time in internal format.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node014F.html"
	},
	{
		"displayText": "DateToStr(datetime)",
		"snippet": "DateToStr(${1:struct DateTime *datetime})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Converts a DateStamp to a string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0150.html"
	},
	{
		"displayText": "dbf(exp, mant)",
		"snippet": "dbf(${1:ULONG exp}, ${2:ULONG mant})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert FFP dual-binary number to FFP format.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0033.html"
	},
	{
		"displayText": "DDoFmt(formatString, dataStream, putChProc, putChData)",
		"snippet": "DDoFmt(${1:CONST_STRPTR fmt}, ${2:CONST APTR dataStream}, ${3:CONST APTR putChProc}, ${4:APTR putChData})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Format data into a character stream.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011B.html"
	},
	{
		"displayText": "Deallocate(freeList, memoryBlock, byteSize)",
		"snippet": "Deallocate(${1:struct MemHeader *freeList}, ${2:APTR memoryBlock}, ${3:ULONG byteSize})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate a block of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FE.html"
	},
	{
		"displayText": "Debug(flags)",
		"snippet": "Debug(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Run the system debugger.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01FF.html"
	},
	{
		"displayText": "Delay(timeout)",
		"snippet": "Delay(${1:LONG timeout})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delay a process for a specified time.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0151.html"
	},
	{
		"displayText": "DeleteArgstring(argstring)",
		"snippet": "DeleteArgstring(${1:STRPTR argstring})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases an Argstring created by CreateArgstring()",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054B.html"
	},
	{
		"displayText": "DeleteCxObj(cxObject)",
		"snippet": "DeleteCxObj(${1:CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a commmodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EB.html"
	},
	{
		"displayText": "DeleteCxObjAll(cxObj)",
		"snippet": "DeleteCxObjAll(${1:CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Recursively delete a tree of commodity objects. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EC.html"
	},
	{
		"displayText": "DeleteDiskObject(name)",
		"snippet": "DeleteDiskObject(${1:CONST STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Delete a Workbench disk object from disk. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0346.html"
	},
	{
		"displayText": "DeleteExtIO(ioReq)",
		"snippet": "DeleteExtIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return memory allocated for extended IO request.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0034.html"
	},
	{
		"displayText": "DeleteFile(name)",
		"snippet": "DeleteFile(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Delete a file or directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0152.html"
	},
	{
		"displayText": "DeleteIORequest(iorequest)",
		"snippet": "DeleteIORequest(${1:APTR ioreq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a request made by CreateIORequest(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0200.html"
	},
	{
		"displayText": "DeleteLayer(dummy, layer)",
		"snippet": "DeleteLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Delete layer from layer list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041E.html"
	},
	{
		"displayText": "DeleteMsgPort(port)",
		"snippet": "DeleteMsgPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a message port created by CreateMsgPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0201.html"
	},
	{
		"displayText": "DeleteNV(appName, itemName, killRequesters)",
		"snippet": "DeleteNV(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:LONG killReqs})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove an entry from nonvoltatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DC.html"
	},
	{
		"displayText": "DeletePlayer(player)",
		"snippet": "DeletePlayer(${1:struct Player *player})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0534.html"
	},
	{
		"displayText": "DeletePool(poolHeader)",
		"snippet": "DeletePool(${1:APTR poolHeader})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Drain an entire memory pool. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0202.html"
	},
	{
		"displayText": "DeletePort(ioReq)",
		"snippet": "DeletePort(${1:struct MsgPort *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a message port created by CreatePort().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0035.html"
	},
	{
		"displayText": "DeleteRexxMsg(packet)",
		"snippet": "DeleteRexxMsg(${1:struct RexxMsg *packet})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases a RexxMsg structure created by CreateRexxMsg()",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054C.html"
	},
	{
		"displayText": "DeleteStdIO(ioReq)",
		"snippet": "DeleteStdIO(${1:struct IOStdReq *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return memory allocated for IOStdReq.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0036.html"
	},
	{
		"displayText": "DeleteTask(task)",
		"snippet": "DeleteTask(${1:struct Task *task})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a task created with CreateTask().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0037.html"
	},
	{
		"displayText": "DeleteVar(name, flags)",
		"snippet": "DeleteVar(${1:CONST_STRPTR name}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Deletes a local or environment variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0153.html"
	},
	{
		"displayText": "DeviceProc(name)",
		"snippet": "DeviceProc(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Return the process MsgPort of specific I/O handler.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0154.html"
	},
	{
		"displayText": "DeviceTuple(tuple_data, storage)",
		"snippet": "DeviceTuple(${1:CONST UBYTE *tuple_data}, ${2:struct DeviceTData *storage})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Decode a device tuple.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0099.html"
	},
	{
		"displayText": "DGetChar()",
		"snippet": "DGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011C.html"
	},
	{
		"displayText": "DGetChar()",
		"snippet": "DGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011C.html"
	},
	{
		"displayText": "DGetNum()",
		"snippet": "DGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011D.html"
	},
	{
		"displayText": "DGetNum()",
		"snippet": "DGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011D.html"
	},
	{
		"displayText": "Disable()",
		"snippet": "Disable()",
		"type": "function",
		"leftLabel": "void",
		"description": "Disable interrupt processing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0203.html"
	},
	{
		"displayText": "DisownBlitter()",
		"snippet": "DisownBlitter()",
		"type": "function",
		"leftLabel": "void",
		"description": "Return blitter to free state.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CA.html"
	},
	{
		"displayText": "DisplayAlert(alertNumber, string, height)",
		"snippet": "DisplayAlert(${1:ULONG alertNumber}, ${2:CONST_STRPTR str}, ${3:ULONG height})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Create the display of an alert message.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A3.html"
	},
	{
		"displayText": "DisplayBeep(screen)",
		"snippet": "DisplayBeep(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Flash the video display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A4.html"
	},
	{
		"displayText": "DisposeCxMsg(cxMessage)",
		"snippet": "DisposeCxMsg(${1:CxMsg *cxm})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00ED.html"
	},
	{
		"displayText": "DisposeDTObject(object)",
		"snippet": "DisposeDTObject(${1:Object *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Delete a data type object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0109.html"
	},
	{
		"displayText": "DisposeFontContents(fontContentsHeader)",
		"snippet": "DisposeFontContents(${1:struct FontContentsHeader *fch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free the result from NewFontContents. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0134.html"
	},
	{
		"displayText": "DisposeLayerInfo(layerInfo)",
		"snippet": "DisposeLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return all memory for LayerInfo to memory pool.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node041F.html"
	},
	{
		"displayText": "DisposeObject(object)",
		"snippet": "DisposeObject(${1:APTR obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deletes a 'boopsi' object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A5.html"
	},
	{
		"displayText": "DisposeRegion(region)",
		"snippet": "DisposeRegion(${1:struct Region *region})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return all space for this region to free.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CB.html"
	},
	{
		"displayText": "DivertCxMsg(cxm, headObj, returnObj)",
		"snippet": "DivertCxMsg(${1:CxMsg *cxm}, ${2:CxObj *headObj}, ${3:CxObj *returnObj})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Send a commodity message down an object list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EE.html"
	},
	{
		"displayText": "DMayGetChar()",
		"snippet": "DMayGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return a char iff present, but don't block.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011E.html"
	},
	{
		"displayText": "DoAsyncLayout(object, gpLayout)",
		"snippet": "DoAsyncLayout(${1:Object *obj}, ${2:struct gpLayout *gpl})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Call the DTM_ASYNCLAYOUT method on a separate process. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010A.html"
	},
	{
		"displayText": "DoCollision(rastPort)",
		"snippet": "DoCollision(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Test every gel in gel list for collisions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CC.html"
	},
	{
		"displayText": "DoDTMethod(object, window, requester, data, ...)",
		"snippet": "DoDTMethod(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG data}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Do a datatypes method. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010B.html"
	},
	{
		"displayText": "DoDTMethodA(object, window, requester, message)",
		"snippet": "DoDTMethodA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Msg msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Do a datatypes method. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010B.html"
	},
	{
		"displayText": "DoGadgetMethod(gadget, window, requester, methodID, ...)",
		"snippet": "DoGadgetMethod(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG methodID}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke method on a boopsi gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A6.html"
	},
	{
		"displayText": "DoGadgetMethodA(gadget, window, requester, message)",
		"snippet": "DoGadgetMethodA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Msg msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke method on a boopsi gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A6.html"
	},
	{
		"displayText": "DoHookClipRects(hook, rport, rect)",
		"snippet": "DoHookClipRects(${1:struct Hook *hook}, ${2:struct RastPort *rport}, ${3:CONST struct Rectangle *rect})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Do the given hook for each of the ClipRects. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0420.html"
	},
	{
		"displayText": "DoIO(ioRequest)",
		"snippet": "DoIO(${1:struct IORequest *ior})${2:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Perform an I/O command and wait for completion.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0204.html"
	},
	{
		"displayText": "DoMethod(object, methodID, ...)",
		"snippet": "DoMethod(${1:Object *obj}, ${2:ULONG methodID}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0038.html"
	},
	{
		"displayText": "DoMethodA(object, message)",
		"snippet": "DoMethodA(${1:Object *obj}, ${2:Msg msg})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0039.html"
	},
	{
		"displayText": "DoPkt(port, action, arg1, arg2, arg3, arg4, arg5)",
		"snippet": "DoPkt(${1:struct MsgPort *port}, ${2:LONG action}, ${3:LONG arg1}, ${4:LONG arg2}, ${5:LONG arg3}, ${6:LONG arg4}, ${7:LONG arg5})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Send a dos packet and wait for reply. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0155.html"
	},
	{
		"displayText": "DoSuperMethod(class, object, methodID, ...)",
		"snippet": "DoSuperMethod(${1:struct IClass *cl}, ${2:Object *obj}, ${3:ULONG methodID}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object coerced to superclass.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003A.html"
	},
	{
		"displayText": "DoSuperMethodA(class, object, message)",
		"snippet": "DoSuperMethodA(${1:struct IClass *cl}, ${2:Object *obj}, ${3:Msg msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Perform method on object coerced to superclass.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003B.html"
	},
	{
		"displayText": "DoubleClick(sSeconds, sMicros, cSeconds, cMicros)",
		"snippet": "DoubleClick(${1:ULONG sSeconds}, ${2:ULONG sMicros}, ${3:ULONG cSeconds}, ${4:ULONG cMicros})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Test two time values for double-click timing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A7.html"
	},
	{
		"displayText": "DPutChar(character)",
		"snippet": "DPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011F.html"
	},
	{
		"displayText": "DPutChar(character)",
		"snippet": "DPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node011F.html"
	},
	{
		"displayText": "DPutFmt(formatString, values)",
		"snippet": "DPutFmt(${1:CONST_STRPTR formatString}, ${2:CONST APTR values})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print formatted data to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0120.html"
	},
	{
		"displayText": "DPutStr(string)",
		"snippet": "DPutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a string to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0121.html"
	},
	{
		"displayText": "DPutStr(string)",
		"snippet": "DPutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a string to the parallel port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0121.html"
	},
	{
		"displayText": "Draw(rastPort, x, y)",
		"snippet": "Draw(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw a line from the current pen position to x,y.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CD.html"
	},
	{
		"displayText": "DrawBevelBox(rastPort, left, top, width, height, tag1, ...)",
		"snippet": "DrawBevelBox(${1:struct RastPort *rp}, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height}, ${6:Tag tag1}, ${7:...})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw a bevelled box. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0277.html"
	},
	{
		"displayText": "DrawBevelBoxA(rastPort, left, top, width, height, tagList)",
		"snippet": "DrawBevelBoxA(${1:struct RastPort *rp}, ${2:LONG left}, ${3:LONG top}, ${4:LONG width}, ${5:LONG height}, ${6:CONST struct TagItem *tagList})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw a bevelled box. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0277.html"
	},
	{
		"displayText": "DrawBorder(rastPort, border, leftOffset, topOffset)",
		"snippet": "DrawBorder(${1:struct RastPort *rp}, ${2:CONST struct Border *border}, ${3:LONG leftOffset}, ${4:LONG topOffset})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw the specified Border structure into a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A8.html"
	},
	{
		"displayText": "DrawDTObject(rastPort, object, x, y, w, h, th, tv, tag1, ...)",
		"snippet": "DrawDTObject(${1:struct RastPort *rp}, ${2:Object *obj}, ${3:LONG x}, ${4:LONG y}, ${5:LONG w}, ${6:LONG h}, ${7:LONG th}, ${8:LONG tv}, ${9:Tag tag1}, ${10:...})${11:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Draw a DataTypes object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010C.html"
	},
	{
		"displayText": "DrawDTObjectA(rastPort, object, x, y, w, h, th, tv, attributes)",
		"snippet": "DrawDTObjectA(${1:struct RastPort *rp}, ${2:Object *obj}, ${3:LONG x}, ${4:LONG y}, ${5:LONG w}, ${6:LONG h}, ${7:LONG th}, ${8:LONG tv}, ${9:struct TagItem *attrs})${10:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Draw a DataTypes object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010C.html"
	},
	{
		"displayText": "DrawEllipse(rastPort, xCenter, yCenter, a, b)",
		"snippet": "DrawEllipse(${1:struct RastPort *rp}, ${2:LONG xCenter}, ${3:LONG yCenter}, ${4:LONG a}, ${5:LONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an ellipse.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CE.html"
	},
	{
		"displayText": "DrawGList(rastPort, viewPort)",
		"snippet": "DrawGList(${1:struct RastPort *rp}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Process the gel list, queueing VSprites, drawing Bobs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02CF.html"
	},
	{
		"displayText": "DrawIconState(rastPort, icon, label, leftOffset, topOffset, state, ...)",
		"snippet": "DrawIconState(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:LONG leftOffset}, ${5:LONG topOffset}, ${6:ULONG state}, ${7:...})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an icon as if it were an image. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0347.html"
	},
	{
		"displayText": "DrawIconStateA(rastPort, icon, label, leftOffset, topOffset, state, tags)",
		"snippet": "DrawIconStateA(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:LONG leftOffset}, ${5:LONG topOffset}, ${6:ULONG state}, ${7:CONST struct TagItem *tags})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an icon as if it were an image. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0347.html"
	},
	{
		"displayText": "DrawImage(rastPort, image, leftOffset, topOffset)",
		"snippet": "DrawImage(${1:struct RastPort *rp}, ${2:struct Image *img}, ${3:LONG leftOffset}, ${4:LONG topOffset})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw the specified Image structure into a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03A9.html"
	},
	{
		"displayText": "DrawImageState(rastPort, image, leftOffset, topOffset, state, drawInfo)",
		"snippet": "DrawImageState(${1:struct RastPort *rp}, ${2:struct Image *img}, ${3:LONG leftOffset}, ${4:LONG topOffset}, ${5:ULONG state}, ${6:CONST struct DrawInfo *drawInfo})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw an Intuition Image with special visual state. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AA.html"
	},
	{
		"displayText": "DRAWLIST_GetClass()",
		"snippet": "DRAWLIST_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the drawlist class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D5.html"
	},
	{
		"displayText": "DupDiskObject(diskObject, ...)",
		"snippet": "DupDiskObject(${1:CONST struct DiskObject *dObj}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Duplicate an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0348.html"
	},
	{
		"displayText": "DupDiskObjectA(diskObject, tags)",
		"snippet": "DupDiskObjectA(${1:CONST struct DiskObject *dObj}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Duplicate an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0348.html"
	},
	{
		"displayText": "DupLock(lock)",
		"snippet": "DupLock(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Duplicate a lock.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0156.html"
	},
	{
		"displayText": "DupLockFromFH(fileHandle)",
		"snippet": "DupLockFromFH(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Gets a lock on an open file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0157.html"
	},
	{
		"displayText": "EasyRequestArgs(window, easyStruct, idcmp, args)",
		"snippet": "EasyRequestArgs(${1:struct Window *win}, ${2:CONST struct EasyStruct *easyStruct}, ${3:ULONG *idcmp}, ${4:CONST APTR args})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Easy alternative to AutoRequest(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AB.html"
	},
	{
		"displayText": "ElapsedTime(context)",
		"snippet": "ElapsedTime(${1:struct EClockVal *context})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the time elapsed since it was last called. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0464.html"
	},
	{
		"displayText": "Enable()",
		"snippet": "Enable()",
		"type": "function",
		"leftLabel": "void",
		"description": "Permit system interrupts to resume.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0205.html"
	},
	{
		"displayText": "EndCardAccess(handle)",
		"snippet": "EndCardAccess(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Called at the end of credit-card memory access.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009A.html"
	},
	{
		"displayText": "EndNotify(notify)",
		"snippet": "EndNotify(${1:struct NotifyRequest *notify})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ends a notification request. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0158.html"
	},
	{
		"displayText": "EndRefresh(window, complete)",
		"snippet": "EndRefresh(${1:struct Window *win}, ${2:LONG complete})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "End the optimized refresh state of the window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AC.html"
	},
	{
		"displayText": "EndRequest(requester, window)",
		"snippet": "EndRequest(${1:struct Requester *req}, ${2:struct Window *win})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a currently active requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AD.html"
	},
	{
		"displayText": "EndUpdate(layer, flag)",
		"snippet": "EndUpdate(${1:struct Layer *layer}, ${2:UWORD flag})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove damage list and restore state of layer to normal.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0421.html"
	},
	{
		"displayText": "Enqueue(list, node)",
		"snippet": "Enqueue(${1:struct List *list}, ${2:struct Node *node})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert or append node to a system queue.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0206.html"
	},
	{
		"displayText": "EnqueueCxObj(headObj, co)",
		"snippet": "EnqueueCxObj(${1:CxObj *headObj}, ${2:CxObj *co})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert a commodity object within a list of objects based on object priority. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00EF.html"
	},
	{
		"displayText": "EntryHandler(iffHandle, type, id, position, handler, object)",
		"snippet": "EntryHandler(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG position}, ${5:struct Hook *handler}, ${6:APTR object})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an entry handler to the IFFHandle context. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0360.html"
	},
	{
		"displayText": "EraseImage(rastPort, image, leftOffset, topOffset)",
		"snippet": "EraseImage(${1:struct RastPort *rp}, ${2:struct Image *img}, ${3:LONG leftOffset}, ${4:LONG topOffset})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Erases an Image. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AE.html"
	},
	{
		"displayText": "EraseRect(rastPort, xMin, yMin, xMax, yMax)",
		"snippet": "EraseRect(${1:struct RastPort *rp}, ${2:LONG xMin}, ${3:LONG yMin}, ${4:LONG xMax}, ${5:LONG yMax})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Fill a defined rectangular area using the current BackFill hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D0.html"
	},
	{
		"displayText": "ErrorReport(code, type, arg1, device)",
		"snippet": "ErrorReport(${1:LONG code}, ${2:LONG type}, ${3:ULONG arg1}, ${4:struct MsgPort *device})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Displays a Retry/Cancel requester for an error. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0159.html"
	},
	{
		"displayText": "ExAll(lock, buffer, size, data, control)",
		"snippet": "ExAll(${1:BPTR lock}, ${2:struct ExAllData *buffer}, ${3:LONG size}, ${4:LONG data}, ${5:struct ExAllControl *control})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Examine an entire directory. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015A.html"
	},
	{
		"displayText": "ExAllEnd(lock, buffer, size, data, control)",
		"snippet": "ExAllEnd(${1:BPTR lock}, ${2:struct ExAllData *buffer}, ${3:LONG size}, ${4:LONG data}, ${5:struct ExAllControl *control})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Stop an ExAll(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015B.html"
	},
	{
		"displayText": "Examine(lock, fileInfoBlock)",
		"snippet": "Examine(${1:BPTR lock}, ${2:struct FileInfoBlock *fib})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Examine a directory or file associated with a lock.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015C.html"
	},
	{
		"displayText": "ExamineFH(fileHandle, fileInfoBlock)",
		"snippet": "ExamineFH(${1:BPTR fh}, ${2:struct FileInfoBlock *fib})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Gets information on an open file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015D.html"
	},
	{
		"displayText": "Execute(string, file, file2)",
		"snippet": "Execute(${1:CONST_STRPTR str}, ${2:BPTR file}, ${3:BPTR file2})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Execute a CLI command.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015E.html"
	},
	{
		"displayText": "Exit(returnCode)",
		"snippet": "Exit(${1:LONG returnCode})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Exit from a program.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node015F.html"
	},
	{
		"displayText": "ExitHandler(iffHandle, type, id, position, handler, object)",
		"snippet": "ExitHandler(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG position}, ${5:struct Hook *handler}, ${6:APTR object})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Add an exit handler to the IFFHandle context. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0361.html"
	},
	{
		"displayText": "ExNext(lock, fileInfoBlock)",
		"snippet": "ExNext(${1:BPTR lock}, ${2:struct FileInfoBlock *fileInfoBlock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Examine the next entry in a directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0160.html"
	},
	{
		"displayText": "ExtendFont(font, fontTags)",
		"snippet": "ExtendFont(${1:struct TextFont *font}, ${2:CONST struct TagItem *fontTags})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Bnsure tf_Extension has been built for a font. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D1.html"
	},
	{
		"displayText": "ExternalSync(player, minTime, maxTime)",
		"snippet": "ExternalSync(${1:struct Player *player}, ${2:LONG minTime}, ${3:LONG maxTime})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Provide external source clock for a player's conductor. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0535.html"
	},
	{
		"displayText": "FastRand(seed)",
		"snippet": "FastRand(${1:ULONG seed})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Quickly generate a somewhat random integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003C.html"
	},
	{
		"displayText": "FattenLayerInfo(layerInfo)",
		"snippet": "FattenLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert 1.0 LayerInfo to 1.1 LayerInfo.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0422.html"
	},
	{
		"displayText": "Fault(code, header, buffer, len)",
		"snippet": "Fault(${1:LONG code}, ${2:STRPTR header}, ${3:STRPTR buffer}, ${4:LONG len})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the text associated with a DOS error code. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0161.html"
	},
	{
		"displayText": "FGetC(fileHandle)",
		"snippet": "FGetC(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read a character from the specified input  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0162.html"
	},
	{
		"displayText": "FGets(fileHandle, buffer, buflen)",
		"snippet": "FGets(${1:BPTR fh}, ${2:STRPTR buf}, ${3:ULONG buflen})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Reads a line from the specified input  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0163.html"
	},
	{
		"displayText": "FilePart(path)",
		"snippet": "FilePart(${1:CONST_STRPTR path})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Returns the last component of a path. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0164.html"
	},
	{
		"displayText": "FillRexxMsg(msgptr, count, mask)",
		"snippet": "FillRexxMsg(${1:struct RexxMsg *msgptr}, ${2:ULONG count}, ${3:ULONG mask})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Fill the argument strings as needed.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054D.html"
	},
	{
		"displayText": "FilterTagChanges(changeList, originalList, apply)",
		"snippet": "FilterTagChanges(${1:struct TagItem *changeList}, ${2:struct TagItem *originalList}, ${3:ULONG apply})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Eliminate tags which specify no change. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059D.html"
	},
	{
		"displayText": "FilterTagItems(tagList, filterArray, logic)",
		"snippet": "FilterTagItems(${1:struct TagItem *tagList}, ${2:CONST Tag *filterArray}, ${3:ULONG logic})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Remove selected items from a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059E.html"
	},
	{
		"displayText": "FindArg(keyword, arg_template)",
		"snippet": "FindArg(${1:CONST_STRPTR keyword}, ${2:CONST_STRPTR arg_template})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Find a keyword in a template. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0165.html"
	},
	{
		"displayText": "FindCliProc(num)",
		"snippet": "FindCliProc(${1:ULONG num})${2:}",
		"type": "function",
		"leftLabel": "struct Process*",
		"description": "Returns a pointer to the requested CLI process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0166.html"
	},
	{
		"displayText": "FindCollection(iffHandle, type, id)",
		"snippet": "FindCollection(${1:CONST struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "struct CollectionItem*",
		"description": "Get a pointer to the current list of collection items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0362.html"
	},
	{
		"displayText": "FindColor(colorMap, r, g, b, maxColor)",
		"snippet": "FindColor(${1:struct ColorMap *cm}, ${2:ULONG r}, ${3:ULONG g}, ${4:ULONG b}, ${5:LONG maxColor})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Find the closest matching color in a colormap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D2.html"
	},
	{
		"displayText": "FindConductor(name)",
		"snippet": "FindConductor(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Conductor*",
		"description": "Find a conductor by name. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0536.html"
	},
	{
		"displayText": "FindConfigDev(oldConfigDev, manufacturer, product)",
		"snippet": "FindConfigDev(${1:CONST struct ConfigDev *oldCD}, ${2:LONG manufacturer}, ${3:LONG product})${4:}",
		"type": "function",
		"leftLabel": "struct ConfigDev*",
		"description": "Find a matching ConfigDev entry.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0262.html"
	},
	{
		"displayText": "FindDisplayInfo(displayID)",
		"snippet": "FindDisplayInfo(${1:ULONG displayID})${2:}",
		"type": "function",
		"leftLabel": "DisplayInfoHandle",
		"description": "Search for a record identified by a specific key. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D3.html"
	},
	{
		"displayText": "FindDosEntry(dlist, name, flags)",
		"snippet": "FindDosEntry(${1:CONST struct DosList *dlist}, ${2:CONST_STRPTR name}, ${3:ULONG flags})${4:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Finds a specific Dos List entry. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0167.html"
	},
	{
		"displayText": "FindLocalItem(iffHandle, type, id, ident)",
		"snippet": "FindLocalItem(${1:CONST struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG ident})${5:}",
		"type": "function",
		"leftLabel": "struct LocalContextItem*",
		"description": "Return a local context item from the context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0363.html"
	},
	{
		"displayText": "FindName(list, name)",
		"snippet": "FindName(${1:struct List *list}, ${2:CONST_STRPTR name})${3:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Find a system list node with a given name.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0207.html"
	},
	{
		"displayText": "FindNamedObject(nameSpace, name, lastObject)",
		"snippet": "FindNamedObject(${1:struct NamedObject *nameSpace}, ${2:CONST_STRPTR name}, ${3:struct NamedObject *lastObject})${4:}",
		"type": "function",
		"leftLabel": "struct NamedObject*",
		"description": "Find the next object of a given name. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node059F.html"
	},
	{
		"displayText": "FindPort(name)",
		"snippet": "FindPort(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Find a given system message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0208.html"
	},
	{
		"displayText": "FindProp(iffHandle, type, id)",
		"snippet": "FindProp(${1:CONST struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "struct StoredProperty*",
		"description": "Search for a stored property chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0364.html"
	},
	{
		"displayText": "FindPropContext(iffHandle)",
		"snippet": "FindPropContext(${1:CONST struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "struct ContextNode*",
		"description": "Get the property context for the current state. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0365.html"
	},
	{
		"displayText": "FindResident(name)",
		"snippet": "FindResident(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Resident*",
		"description": "Find a resident module by name.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0209.html"
	},
	{
		"displayText": "FindSegment(name, seg, system)",
		"snippet": "FindSegment(${1:CONST_STRPTR name}, ${2:CONST struct Segment *seg}, ${3:LONG system})${4:}",
		"type": "function",
		"leftLabel": "struct Segment*",
		"description": "Finds a segment on the resident list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0168.html"
	},
	{
		"displayText": "FindSemaphore(name)",
		"snippet": "FindSemaphore(${1:STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct SignalSemaphore*",
		"description": "Find a given system signal semaphore.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020A.html"
	},
	{
		"displayText": "FindTagItem(tagVal, tagList)",
		"snippet": "FindTagItem(${1:Tag tagVal}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Scan a tag list for a specific tag. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A0.html"
	},
	{
		"displayText": "FindTask(name)",
		"snippet": "FindTask(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Task*",
		"description": "Find a task with the given name or find oneself.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020B.html"
	},
	{
		"displayText": "FindToolType(toolTypeArray, typeName)",
		"snippet": "FindToolType(${1:CONST STRPTR *toolTypeArray}, ${2:CONST STRPTR typeName})${3:}",
		"type": "function",
		"leftLabel": "UBYTE*",
		"description": "Find the value of a ToolType variable.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0349.html"
	},
	{
		"displayText": "FindVar(name, type)",
		"snippet": "FindVar(${1:CONST_STRPTR name}, ${2:ULONG type})${3:}",
		"type": "function",
		"leftLabel": "struct LocalVar*",
		"description": "Finds a local variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0169.html"
	},
	{
		"displayText": "Flood(rastPort, mode, x, y)",
		"snippet": "Flood(${1:struct RastPort *rp}, ${2:ULONG mode}, ${3:LONG x}, ${4:LONG y})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Flood rastport like areafill.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D4.html"
	},
	{
		"displayText": "Flush(fileHandle)",
		"snippet": "Flush(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Flushes buffers for a buffered filehandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016A.html"
	},
	{
		"displayText": "FlushLayoutDomainCache(gadget)",
		"snippet": "FlushLayoutDomainCache(${1:struct Gadget *gad})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Flush layout domain cache below a level.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043A.html"
	},
	{
		"displayText": "FontExtent(font, fontExtent)",
		"snippet": "FontExtent(${1:CONST struct TextFont *font}, ${2:struct TextExtent *fontExtent})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the font attributes of the current font. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D5.html"
	},
	{
		"displayText": "Forbid()",
		"snippet": "Forbid()",
		"type": "function",
		"leftLabel": "void",
		"description": "Forbid task rescheduling.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020C.html"
	},
	{
		"displayText": "Format(filesystem, volumename, dostype)",
		"snippet": "Format(${1:CONST_STRPTR filesystem}, ${2:CONST_STRPTR volumename}, ${3:ULONG dostype})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Causes a filesystem to initialize itself. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016B.html"
	},
	{
		"displayText": "FormatDate(locale, fmtTemplate, date, putCharFunc)",
		"snippet": "FormatDate(${1:struct Locale *l}, ${2:STRPTR fmtTemplate}, ${3:struct DateStamp *date}, ${4:struct Hook *putCharFunc})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Generate a date string based on a date formatting template. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0456.html"
	},
	{
		"displayText": "FormatString(locale, fmtTemplate, dataStream, putCharFunc)",
		"snippet": "FormatString(${1:struct Locale *locale}, ${2:STRPTR fmtTemplate}, ${3:APTR dataStream}, ${4:struct Hook *putCharFunc})${5:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Format data into a character stream. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0457.html"
	},
	{
		"displayText": "fpa(fnum, string)",
		"snippet": "fpa(${1:FLOAT fnum}, ${2:BYTE *string})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert fast floating point into ASCII string equivalent.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003D.html"
	},
	{
		"displayText": "FPutC(fileHandle, character)",
		"snippet": "FPutC(${1:BPTR fh}, ${2:LONG ch})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write a character to the specified output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016C.html"
	},
	{
		"displayText": "FPuts(fileHandle, string)",
		"snippet": "FPuts(${1:BPTR fh}, ${2:CONST_STRPTR str})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes a string the the specified output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016D.html"
	},
	{
		"displayText": "FRead(fh, block, blocklen, number)",
		"snippet": "FRead(${1:BPTR fh}, ${2:APTR block}, ${3:ULONG blocklen}, ${4:ULONG number})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reads a number of blocks from an input  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016E.html"
	},
	{
		"displayText": "FreeArgs(args)",
		"snippet": "FreeArgs(${1:struct RDArgs *args})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free allocated memory after ReadArgs(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node016F.html"
	},
	{
		"displayText": "FreeAslRequest(requester)",
		"snippet": "FreeAslRequest(${1:APTR req})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees resources allocated by AllocAslRequest(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005C.html"
	},
	{
		"displayText": "FreeBitMap(bitMap)",
		"snippet": "FreeBitMap(${1:struct BitMap *bm})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a bitmap created by AllocBitMap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D6.html"
	},
	{
		"displayText": "FreeBrowserNodes(nodes)",
		"snippet": "FreeBrowserNodes(${1:struct List *nodes})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of listbrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0526.html"
	},
	{
		"displayText": "FreeChooserLabels(labels)",
		"snippet": "FreeChooserLabels(${1:struct List *labels})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of chooser labels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0527.html"
	},
	{
		"displayText": "FreeChooserNode(node)",
		"snippet": "FreeChooserNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C4.html"
	},
	{
		"displayText": "FreeClass(class)",
		"snippet": "FreeClass(${1:struct IClass *cl})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Frees a boopsi class created by MakeClass(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03AF.html"
	},
	{
		"displayText": "FreeClickTabNode(node)",
		"snippet": "FreeClickTabNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D0.html"
	},
	{
		"displayText": "FreeClickTabs(clicktabs)",
		"snippet": "FreeClickTabs(${1:struct List *clicktabs})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of clicktab nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0528.html"
	},
	{
		"displayText": "FreeColorMap(colorMap)",
		"snippet": "FreeColorMap(${1:struct ColorMap *cm})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free the ColorMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D7.html"
	},
	{
		"displayText": "FreeConfigDev(configDev)",
		"snippet": "FreeConfigDev(${1:struct ConfigDev *cd})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ConfigDev structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0263.html"
	},
	{
		"displayText": "FreeCopList(copList)",
		"snippet": "FreeCopList(${1:struct CopList *copList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate intermediate copper list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D8.html"
	},
	{
		"displayText": "FreeCprList(cprList)",
		"snippet": "FreeCprList(${1:struct cprlist *cprList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate hardware copper list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02D9.html"
	},
	{
		"displayText": "FreeDBufInfo(dBufInfo)",
		"snippet": "FreeDBufInfo(${1:struct DBufInfo *dbi})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free information for multi-buffered animation. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DA.html"
	},
	{
		"displayText": "FreeDeviceProc(devProc)",
		"snippet": "FreeDeviceProc(${1:struct DevProc *dp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Releases port returned by GetDeviceProc(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0170.html"
	},
	{
		"displayText": "FreeDiskObject(diskobj)",
		"snippet": "FreeDiskObject(${1:struct DiskObject *diskobj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free all memory in a Workbench disk object.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034A.html"
	},
	{
		"displayText": "FreeDosEntry(doslist)",
		"snippet": "FreeDosEntry(${1:struct DosList *dl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees an entry created by MakeDosEntry. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0171.html"
	},
	{
		"displayText": "FreeDosObject(type, ptr)",
		"snippet": "FreeDosObject(${1:ULONG type}, ${2:APTR ptr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees an object allocated by AllocDosObject(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0172.html"
	},
	{
		"displayText": "FreeEntry(entry)",
		"snippet": "FreeEntry(${1:struct MemList *entry})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free many regions of memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020D.html"
	},
	{
		"displayText": "FreeExpansionMem(startSlot, numSlots)",
		"snippet": "FreeExpansionMem(${1:ULONG startSlot}, ${2:ULONG numSlots})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Allocate standard device expansion memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0264.html"
	},
	{
		"displayText": "FreeFileRequest(fileReq)",
		"snippet": "FreeFileRequest(${1:struct FileRequester *fr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free file requester structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005D.html"
	},
	{
		"displayText": "FreeFreeList(freelist)",
		"snippet": "FreeFreeList(${1:struct FreeList *fl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free all memory in a free list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034B.html"
	},
	{
		"displayText": "FreeGadgets(gad)",
		"snippet": "FreeGadgets(${1:struct Gadget *gad})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of gadgets. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0278.html"
	},
	{
		"displayText": "FreeGBuffers(animOb, rastPort, doubleBuffer)",
		"snippet": "FreeGBuffers(${1:struct AnimOb *anOb}, ${2:struct RastPort *rp}, ${3:BOOL db})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate memory obtained by GetGBufers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DB.html"
	},
	{
		"displayText": "FreeIEvents(events)",
		"snippet": "FreeIEvents(${1:struct InputEvent *events})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a chain of input events allocated by InvertString(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003E.html"
	},
	{
		"displayText": "FreeIFF(iffHandle)",
		"snippet": "FreeIFF(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate an IFFHandle structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0366.html"
	},
	{
		"displayText": "FreeListBrowserList(list)",
		"snippet": "FreeListBrowserList(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a list of ListBrowser nodes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0445.html"
	},
	{
		"displayText": "FreeListBrowserNode(node)",
		"snippet": "FreeListBrowserNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0446.html"
	},
	{
		"displayText": "FreeLocalItem(localItem)",
		"snippet": "FreeLocalItem(${1:struct LocalContextItem *localItem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate a local context item structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0367.html"
	},
	{
		"displayText": "FreeMem(memoryBlock, byteSize)",
		"snippet": "FreeMem(${1:APTR memoryBlock}, ${2:ULONG byteSize})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate with knowledge.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020E.html"
	},
	{
		"displayText": "FreeMenus(menu)",
		"snippet": "FreeMenus(${1:struct Menu *menu})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees memory allocated by CreateMenusA(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0279.html"
	},
	{
		"displayText": "FreeMiscResource(unitNum)",
		"snippet": "FreeMiscResource(${1:ULONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a resource available for reallocation.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CF.html"
	},
	{
		"displayText": "FreeNamedObject(object)",
		"snippet": "FreeNamedObject(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Frees a name object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A1.html"
	},
	{
		"displayText": "FreeNVData(data)",
		"snippet": "FreeNVData(${1:APTR data})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release the memory allocated by a function of this library. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DD.html"
	},
	{
		"displayText": "FreePooled(poolHeader, memory, memSize)",
		"snippet": "FreePooled(${1:APTR poolHeader}, ${2:APTR memory}, ${3:ULONG memSize})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free pooled memory. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node020F.html"
	},
	{
		"displayText": "FreePotBits(bits)",
		"snippet": "FreePotBits(${1:ULONG bits})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free allocated bits in the potgo register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0500.html"
	},
	{
		"displayText": "FreeRadioButtonNode(node)",
		"snippet": "FreeRadioButtonNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051E.html"
	},
	{
		"displayText": "FreeRadioButtons(buttons)",
		"snippet": "FreeRadioButtons(${1:struct List *buttons})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a linked list of radiobuttons.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0529.html"
	},
	{
		"displayText": "FreeRaster(plane, width, height)",
		"snippet": "FreeRaster(${1:PLANEPTR plane}, ${2:ULONG width}, ${3:ULONG height})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release an allocated area to the system free memory pool.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DC.html"
	},
	{
		"displayText": "FreeRemember(rememberKey, reallyForget)",
		"snippet": "FreeRemember(${1:struct Remember **rememberKey}, ${2:LONG reallyForget})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free memory allocated by calls to AllocRemember().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B0.html"
	},
	{
		"displayText": "FreeScreenBuffer(screen, scrBuffer)",
		"snippet": "FreeScreenBuffer(${1:struct Screen *sc}, ${2:struct ScreenBuffer *sb})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a ScreenBuffer structure. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B1.html"
	},
	{
		"displayText": "FreeScreenDrawInfo(screen, drawInfo)",
		"snippet": "FreeScreenDrawInfo(${1:struct Screen *scr}, ${2:struct DrawInfo *drawInfo})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Finish using a DrawInfo structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B2.html"
	},
	{
		"displayText": "FreeSignal(signalNum)",
		"snippet": "FreeSignal(${1:LONG signalNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a signal bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0210.html"
	},
	{
		"displayText": "FreeSpeedButtonNode(node)",
		"snippet": "FreeSpeedButtonNode(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056A.html"
	},
	{
		"displayText": "FreeSprite(num)",
		"snippet": "FreeSprite(${1:LONG num})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return sprite for use by others and virtual sprite machine.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DD.html"
	},
	{
		"displayText": "FreeSpriteData(sprite)",
		"snippet": "FreeSpriteData(${1:struct ExtSprite *sp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free sprite data allocated by AllocSpriteData(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DE.html"
	},
	{
		"displayText": "FreeSysRequest(window)",
		"snippet": "FreeSysRequest(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free resources gotten by a call to BuildSysRequest().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B3.html"
	},
	{
		"displayText": "FreeTagItems(tagList)",
		"snippet": "FreeTagItems(${1:struct TagItem *tagList})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free an allocated tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A2.html"
	},
	{
		"displayText": "FreeTrap(trapNum)",
		"snippet": "FreeTrap(${1:LONG trapNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a processor trap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0211.html"
	},
	{
		"displayText": "FreeUnit(unitNum)",
		"snippet": "FreeUnit(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate the disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012D.html"
	},
	{
		"displayText": "FreeVec(memoryBlock)",
		"snippet": "FreeVec(${1:APTR memoryBlock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return AllocVec() memory to the system. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0212.html"
	},
	{
		"displayText": "FreeVisualInfo(visualInfo)",
		"snippet": "FreeVisualInfo(${1:APTR vi})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return any resources taken by GetVisualInfo. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027A.html"
	},
	{
		"displayText": "FreeVPortCopLists(viewPort)",
		"snippet": "FreeVPortCopLists(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Deallocate all intermediate copper lists and their headers from a viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02DF.html"
	},
	{
		"displayText": "FUELGAUGE_GetClass()",
		"snippet": "FUELGAUGE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the fuelgauge class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0272.html"
	},
	{
		"displayText": "FWrite(fileHandle, block, blockLen, number)",
		"snippet": "FWrite(${1:BPTR fh}, ${2:CONST APTR block}, ${3:ULONG blocklen}, ${4:ULONG number})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes a number of blocks to an output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0173.html"
	},
	{
		"displayText": "GadgetMouse(gadget, gadInfo, mousePoint)",
		"snippet": "GadgetMouse(${1:struct Gadget *gad}, ${2:struct GadgetInfo *gInfo}, ${3:WORD *mousePoint})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Calculate gadget-relative mouse position. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B4.html"
	},
	{
		"displayText": "GetAmigaGuideAttr(tag, handle, storage)",
		"snippet": "GetAmigaGuideAttr(${1:Tag tag}, ${2:APTR handle}, ${3:ULONG *storage})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get an AmigaGuide attribute. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000A.html"
	},
	{
		"displayText": "GetAmigaGuideMsg(handle)",
		"snippet": "GetAmigaGuideMsg(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "struct AmigaGuideMsg*",
		"description": "Receive async AmigaGuide message. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000B.html"
	},
	{
		"displayText": "GetAmigaGuideString(id)",
		"snippet": "GetAmigaGuideString(${1:LONG id})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Get an AmigaGuide string. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000C.html"
	},
	{
		"displayText": "GetAPen(rastPort)",
		"snippet": "GetAPen(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the A Pen value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E0.html"
	},
	{
		"displayText": "GetArgStr()",
		"snippet": "GetArgStr()",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Returns the arguments for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0174.html"
	},
	{
		"displayText": "GetAttr(attrID, object, storage)",
		"snippet": "GetAttr(${1:ULONG attrID}, ${2:APTR object}, ${3:ULONG *storage})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire the value of some attribute of an object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B5.html"
	},
	{
		"displayText": "GetAttrs(object, tag1, ...)",
		"snippet": "GetAttrs(${1:Object *obj}, ${2:Tag t}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get multiple object attributes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052A.html"
	},
	{
		"displayText": "GetBitMapAttr(bitMap, attrNum)",
		"snippet": "GetBitMapAttr(${1:CONST struct BitMap *bm}, ${2:ULONG attrNum})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns information about a bitmap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E1.html"
	},
	{
		"displayText": "GetBPen(rastPort)",
		"snippet": "GetBPen(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the B Pen value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E2.html"
	},
	{
		"displayText": "GetCardMap()",
		"snippet": "GetCardMap()",
		"type": "function",
		"leftLabel": "struct CardMemoryMap*",
		"description": "Obtain pointer to CardMemoryMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009B.html"
	},
	{
		"displayText": "GetCatalogStr(catalog, stringNum, defaultString)",
		"snippet": "GetCatalogStr(${1:struct Catalog *catalog}, ${2:LONG stringNum}, ${3:STRPTR defaultString})${4:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Get a string from a message catalog. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0458.html"
	},
	{
		"displayText": "GetCC()",
		"snippet": "GetCC()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get condition codes in a 68010 compatible way.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0213.html"
	},
	{
		"displayText": "GetChooserNodeAttrs(node, ...)",
		"snippet": "GetChooserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C5.html"
	},
	{
		"displayText": "GetChooserNodeAttrsA(node, tags)",
		"snippet": "GetChooserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C5.html"
	},
	{
		"displayText": "GetClickTabNodeAttrs(node, ...)",
		"snippet": "GetClickTabNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D1.html"
	},
	{
		"displayText": "GetClickTabNodeAttrsA(node, tags)",
		"snippet": "GetClickTabNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D1.html"
	},
	{
		"displayText": "GetCode(intuiMsg)",
		"snippet": "GetCode(${1:struct IntuiMessage *msg})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Return the true IDCMP message code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052B.html"
	},
	{
		"displayText": "GetColorMap(entries)",
		"snippet": "GetColorMap(${1:LONG entries})${2:}",
		"type": "function",
		"leftLabel": "struct ColorMap*",
		"description": "Allocate and initialize Colormap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E3.html"
	},
	{
		"displayText": "GetConsoleTask()",
		"snippet": "GetConsoleTask()",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Returns the default console for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0175.html"
	},
	{
		"displayText": "GetCopyNV(appName, itemName, killRequesters)",
		"snippet": "GetCopyNV(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:LONG killRequesters})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Return a copy of an item stored in nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DE.html"
	},
	{
		"displayText": "GetCurrentBinding(currentBinding, bindingSize)",
		"snippet": "GetCurrentBinding(${1:CONST struct CurrentBinding *cb}, ${2:ULONG bindingSize})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Gets static board configuration area.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0265.html"
	},
	{
		"displayText": "GetCurrentDirName(buf, len)",
		"snippet": "GetCurrentDirName(${1:STRPTR buf}, ${2:LONG len})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the current directory name. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0176.html"
	},
	{
		"displayText": "GetDefaultPubScreen(nameBuffer)",
		"snippet": "GetDefaultPubScreen(${1:STRPTR nameBuffer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get name of default public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B6.html"
	},
	{
		"displayText": "GetDefDiskObject(type)",
		"snippet": "GetDefDiskObject(${1:LONG type})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Read default wb disk object from disk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034C.html"
	},
	{
		"displayText": "GetDefPrefs(prefs, size)",
		"snippet": "GetDefPrefs(${1:struct Preferences *p}, ${2:LONG size})${3:}",
		"type": "function",
		"leftLabel": "struct Preferences*",
		"description": "Get a copy of the the Intuition default Preferences.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B7.html"
	},
	{
		"displayText": "GetDeviceProc(name, devProc)",
		"snippet": "GetDeviceProc(${1:CONST_STRPTR name}, ${2:struct DevProc *dp})${3:}",
		"type": "function",
		"leftLabel": "struct DevProc*",
		"description": "Finds a handler to send a message to. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0177.html"
	},
	{
		"displayText": "GetDiskObject(name)",
		"snippet": "GetDiskObject(${1:CONST STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Read in a Workbench disk object from disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034D.html"
	},
	{
		"displayText": "GetDiskObjectNew(name)",
		"snippet": "GetDiskObjectNew(${1:CONST STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Read in a Workbench disk object from disk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034E.html"
	},
	{
		"displayText": "GetDisplayInfoData(handle, buf, size, tagID, displayID)",
		"snippet": "GetDisplayInfoData(${1:CONST DisplayInfoHandle handle}, ${2:APTR buf}, ${3:ULONG size}, ${4:ULONG tagID}, ${5:ULONG displayID})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Query DisplayInfo Record parameters. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E4.html"
	},
	{
		"displayText": "GetDrMd(rastPort)",
		"snippet": "GetDrMd(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the draw mode value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E5.html"
	},
	{
		"displayText": "GetDTAttrs(object, tag1, ...)",
		"snippet": "GetDTAttrs(${1:Object *obj}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010D.html"
	},
	{
		"displayText": "GetDTAttrsA(object, attributes)",
		"snippet": "GetDTAttrsA(${1:Object *obj}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010D.html"
	},
	{
		"displayText": "GetDTMethods(object)",
		"snippet": "GetDTMethods(${1:Object *obj})${2:}",
		"type": "function",
		"leftLabel": "ULONG*",
		"description": "Obtain methods an object supports. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010E.html"
	},
	{
		"displayText": "GetDTString(id)",
		"snippet": "GetDTString(${1:ULONG id})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Obtain a DataTypes string. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node010F.html"
	},
	{
		"displayText": "GetDTTriggerMethods(obj)",
		"snippet": "GetDTTriggerMethods(${1:Object *obj})${2:}",
		"type": "function",
		"leftLabel": "struct DTMethods*",
		"description": "Obtain trigger methods supported by an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0110.html"
	},
	{
		"displayText": "GetExtSprite(sprite, tag1, ...)",
		"snippet": "GetExtSprite(${1:struct ExtSprite *s}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Attempt to get a sprite for the extended sprite manager. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E6.html"
	},
	{
		"displayText": "GetExtSpriteA(sprite, tags)",
		"snippet": "GetExtSpriteA(${1:struct ExtSprite *s}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Attempt to get a sprite for the extended sprite manager. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E6.html"
	},
	{
		"displayText": "GETFILE_GetClass()",
		"snippet": "GETFILE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the file requester class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node028F.html"
	},
	{
		"displayText": "GetFileSysTask()",
		"snippet": "GetFileSysTask()",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Returns the default filesystem for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0178.html"
	},
	{
		"displayText": "GETFONT_GetClass()",
		"snippet": "GETFONT_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the font requester class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0292.html"
	},
	{
		"displayText": "GetGBuffers(anOb, rastPort, doubleBuffer)",
		"snippet": "GetGBuffers(${1:struct AnimOb *anOb}, ${2:struct RastPort *rp}, ${3:BOOL db})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Attempt to allocate ALL buffers of an entire AnimOb.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E7.html"
	},
	{
		"displayText": "GetIconRectangle(rastPort, icon, label, rect, ...)",
		"snippet": "GetIconRectangle(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:struct Rectangle *rect}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query the size of the area an icon renders into. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034F.html"
	},
	{
		"displayText": "GetIconRectangleA(rastPort, icon, label, rect, tags)",
		"snippet": "GetIconRectangleA(${1:struct RastPort *rp}, ${2:CONST struct DiskObject *icon}, ${3:CONST STRPTR label}, ${4:struct Rectangle *rect}, ${5:CONST struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query the size of the area an icon renders into. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node034F.html"
	},
	{
		"displayText": "GetIconTagList(name, tags)",
		"snippet": "GetIconTagList(${1:CONST STRPTR name}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Retrieve an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0350.html"
	},
	{
		"displayText": "GetKey()",
		"snippet": "GetKey()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the currently pressed rawkey code and qualifiers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0465.html"
	},
	{
		"displayText": "GetLanguageSelection()",
		"snippet": "GetLanguageSelection()",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Returns the current language selection. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0466.html"
	},
	{
		"displayText": "GetListBrowserNodeAttrs(node, ...)",
		"snippet": "GetListBrowserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0447.html"
	},
	{
		"displayText": "GetListBrowserNodeAttrsA(node, tags)",
		"snippet": "GetListBrowserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0447.html"
	},
	{
		"displayText": "GetLocaleStr(locale, stringNum)",
		"snippet": "GetLocaleStr(${1:struct Locale *loc}, ${2:ULONG stringNum})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Get a standard string from a locale. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0459.html"
	},
	{
		"displayText": "GetMsg(port)",
		"snippet": "GetMsg(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "struct Message*",
		"description": "Get next message from a message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0214.html"
	},
	{
		"displayText": "GetNVInfo(killRequesters)",
		"snippet": "GetNVInfo(${1:LONG killRequesters})${2:}",
		"type": "function",
		"leftLabel": "struct NVInfo*",
		"description": "Report information on the current nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04DF.html"
	},
	{
		"displayText": "GetNVList(appName, killRequesters)",
		"snippet": "GetNVList(${1:CONST_STRPTR appName}, ${2:LONG killRequesters})${3:}",
		"type": "function",
		"leftLabel": "struct MinList*",
		"description": "Return a list of the items stored in nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E0.html"
	},
	{
		"displayText": "GetPlayerAttrs(player, tag1, ...)",
		"snippet": "GetPlayerAttrs(${1:CONST struct Player *pl}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the attributes of a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0537.html"
	},
	{
		"displayText": "GetPlayerAttrsA(player, tagList)",
		"snippet": "GetPlayerAttrsA(${1:CONST struct Player *pl}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the attributes of a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0537.html"
	},
	{
		"displayText": "GetPrefs(prefs, size)",
		"snippet": "GetPrefs(${1:struct Preferences *prefs}, ${2:LONG size})${3:}",
		"type": "function",
		"leftLabel": "struct Preferences*",
		"description": "Get the current Intuition Preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B8.html"
	},
	{
		"displayText": "GetProgramDir()",
		"snippet": "GetProgramDir()",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Returns a lock on the directory the program was loaded from. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0179.html"
	},
	{
		"displayText": "GetProgramName(buf, len)",
		"snippet": "GetProgramName(${1:STRPTR buf}, ${2:LONG len})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the current program name. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017A.html"
	},
	{
		"displayText": "GetPrompt(buf, len)",
		"snippet": "GetPrompt(${1:STRPTR buf}, ${2:LONG len})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the prompt for the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017B.html"
	},
	{
		"displayText": "GetRadioButtonNodeAttrs(node, ...)",
		"snippet": "GetRadioButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051F.html"
	},
	{
		"displayText": "GetRadioButtonNodeAttrsA(node, tags)",
		"snippet": "GetRadioButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051F.html"
	},
	{
		"displayText": "GetRexxVar(rexxmsg, name, result)",
		"snippet": "GetRexxVar(${1:CONST struct RexxMsg *msg}, ${2:CONST_STRPTR name}, ${3:STRPTR *result})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Gets the value of a variable from a running ARexx program.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node003F.html"
	},
	{
		"displayText": "GetRGB32(colorMap, firstcolor, ncolors, table)",
		"snippet": "GetRGB32(${1:CONST struct ColorMap *cm}, ${2:ULONG firstcolor}, ${3:ULONG ncolors}, ${4:ULONG *table})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set a series of color registers for this Viewport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02E9.html"
	},
	{
		"displayText": "GetRGB4(colorMap, entry)",
		"snippet": "GetRGB4(${1:struct ColorMap *cm}, ${2:LONG entry})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire value of entry in ColorMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EA.html"
	},
	{
		"displayText": "GetScreenData(buffer, size, type, screen)",
		"snippet": "GetScreenData(${1:APTR buffer}, ${2:ULONG size}, ${3:ULONG type}, ${4:CONST struct Screen *scr})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get copy of a screen data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03B9.html"
	},
	{
		"displayText": "GetScreenDrawInfo(screen)",
		"snippet": "GetScreenDrawInfo(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "struct DrawInfo*",
		"description": "Get pointer to rendering information. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BA.html"
	},
	{
		"displayText": "GETSCREENMODE_GetClass()",
		"snippet": "GETSCREENMODE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the screenmode requester class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0295.html"
	},
	{
		"displayText": "GetSpeedButtonNodeAttrs(node, ...)",
		"snippet": "GetSpeedButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056B.html"
	},
	{
		"displayText": "GetSpeedButtonNodeAttrsA(node, tags)",
		"snippet": "GetSpeedButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get attributes about a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056B.html"
	},
	{
		"displayText": "GetSprite(sprite, num)",
		"snippet": "GetSprite(${1:struct SimpleSprite *sprite}, ${2:LONG num})${3:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Attempt to get a sprite for the simple sprite manager.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EC.html"
	},
	{
		"displayText": "GetSysTime(dest)",
		"snippet": "GetSysTime(${1:struct timeval *dest})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the system time. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0577.html"
	},
	{
		"displayText": "GetTagData(tagValue, defaultVal, tagList)",
		"snippet": "GetTagData(${1:Tag tagValue}, ${2:ULONG defaultVal}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain the data corresponding to a tag. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A3.html"
	},
	{
		"displayText": "GetUniqueID()",
		"snippet": "GetUniqueID()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Return a relatively unique number. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A4.html"
	},
	{
		"displayText": "GetUnit(unit)",
		"snippet": "GetUnit(${1:struct DiscResourceUnit *unit})${2:}",
		"type": "function",
		"leftLabel": "struct DiscResourceUnit*",
		"description": "Allocate the disk for a driver.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012E.html"
	},
	{
		"displayText": "GetUnitID(unitNum)",
		"snippet": "GetUnitID(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Find out what type of disk is out there.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012F.html"
	},
	{
		"displayText": "GetVar(name, buffer, size, flags)",
		"snippet": "GetVar(${1:CONST_STRPTR name}, ${2:STRPTR buffer}, ${3:LONG size}, ${4:LONG flags})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns the value of a local or global variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017C.html"
	},
	{
		"displayText": "GetVisualInfo(screen, tag1, ...)",
		"snippet": "GetVisualInfo(${1:struct Screen *scr}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Get information GadTools needs for visuals. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027B.html"
	},
	{
		"displayText": "GetVisualInfoA(screen, tagList)",
		"snippet": "GetVisualInfoA(${1:struct Screen *scr}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Get information GadTools needs for visuals. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027B.html"
	},
	{
		"displayText": "GetVPModeID(viewPort)",
		"snippet": "GetVPModeID(${1:CONST struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get the 32 bit DisplayID from a ViewPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02ED.html"
	},
	{
		"displayText": "GfxAssociate(associateNode, gfxNode)",
		"snippet": "GfxAssociate(${1:CONST APTR associateNode}, ${2:APTR gfxNode})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Associate a graphics extended node with a given pointer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EE.html"
	},
	{
		"displayText": "GfxFree(gfxNode)",
		"snippet": "GfxFree(${1:APTR gfxNode})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a graphics extended data structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02EF.html"
	},
	{
		"displayText": "GfxLookUP(associateNode)",
		"snippet": "GfxLookUP(${1:CONST APTR associateNode})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F0.html"
	},
	{
		"displayText": "GfxNew(gfxNodeType)",
		"snippet": "GfxNew(${1:ULONG gfxNodeType})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate a graphics extended data structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F1.html"
	},
	{
		"displayText": "GiveUnit()",
		"snippet": "GiveUnit()",
		"type": "function",
		"leftLabel": "void",
		"description": "Free the disk back up.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0130.html"
	},
	{
		"displayText": "GLYPH_GetClass()",
		"snippet": "GLYPH_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the glyph class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0298.html"
	},
	{
		"displayText": "GoodID(id)",
		"snippet": "GoodID(${1:LONG id})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Test if an identifier follows the IFF 85 specification. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0368.html"
	},
	{
		"displayText": "GoodType(type)",
		"snippet": "GoodType(${1:LONG type})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Test if a type follows the IFF 85 specification. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0369.html"
	},
	{
		"displayText": "GT_BeginRefresh(win)",
		"snippet": "GT_BeginRefresh(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Begin refreshing friendly to GadTools. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027C.html"
	},
	{
		"displayText": "GT_EndRefresh(window, complete)",
		"snippet": "GT_EndRefresh(${1:struct Window *win}, ${2:LONG complete})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Bnd refreshing friendly to GadTools. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027D.html"
	},
	{
		"displayText": "GT_FilterIMsg(imsg)",
		"snippet": "GT_FilterIMsg(${1:CONST struct IntuiMessage *imsg})${2:}",
		"type": "function",
		"leftLabel": "struct IntuiMessage*",
		"description": "Filter an IntuiMessage through GadTools. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027E.html"
	},
	{
		"displayText": "GT_GetGadgetAttrs(gadget, window, requester, tag1, ...)",
		"snippet": "GT_GetGadgetAttrs(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Request the attributes of a GadTools gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027F.html"
	},
	{
		"displayText": "GT_GetGadgetAttrsA(gadget, window, requester, tagList)",
		"snippet": "GT_GetGadgetAttrsA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Request the attributes of a GadTools gadget. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node027F.html"
	},
	{
		"displayText": "GT_GetIMsg(iport)",
		"snippet": "GT_GetIMsg(${1:struct MsgPort *iport})${2:}",
		"type": "function",
		"leftLabel": "struct IntuiMessage*",
		"description": "Get an IntuiMessage, with GadTools processing. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0280.html"
	},
	{
		"displayText": "GT_PostFilterIMsg(imsg)",
		"snippet": "GT_PostFilterIMsg(${1:struct IntuiMessage *imsg})${2:}",
		"type": "function",
		"leftLabel": "struct IntuiMessage*",
		"description": "Return the unfiltered message after GT_FilterIMsg() was called. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0281.html"
	},
	{
		"displayText": "GT_RefreshWindow(window, req)",
		"snippet": "GT_RefreshWindow(${1:struct Window *win}, ${2:struct Requester *req})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh all GadTools gadgets in a window. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0282.html"
	},
	{
		"displayText": "GT_ReplyIMsg(imsg)",
		"snippet": "GT_ReplyIMsg(${1:struct IntuiMessage *imsg})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Reply a message obtained with GT_GetIMsg(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0283.html"
	},
	{
		"displayText": "GT_SetGadgetAttrs(gadget, window, requester, tag1, ...)",
		"snippet": "GT_SetGadgetAttrs(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the attributes of a GadTools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0284.html"
	},
	{
		"displayText": "GT_SetGadgetAttrsA(gadget, window, requester, tagList)",
		"snippet": "GT_SetGadgetAttrsA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the attributes of a GadTools gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0284.html"
	},
	{
		"displayText": "HelpControl(window, flags)",
		"snippet": "HelpControl(${1:struct Window *win}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Enable/disable Gadget-Help feature. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BB.html"
	},
	{
		"displayText": "HideAllListBrowserChildren(list)",
		"snippet": "HideAllListBrowserChildren(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Hide all children in a ListBrowser.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0449.html"
	},
	{
		"displayText": "HideListBrowserNodeChildren(node)",
		"snippet": "HideListBrowserNodeChildren(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Hide a ListBrowser node's children.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044A.html"
	},
	{
		"displayText": "HookEntry(hook, object, message)",
		"snippet": "HookEntry(${1:struct Hook *hook}, ${2:Object *obj}, ${3:APTR msg})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Assembler to HLL conversion stub for hook entry.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0040.html"
	},
	{
		"displayText": "HotKey(description, port, id)",
		"snippet": "HotKey(${1:CONST_STRPTR description}, ${2:struct MsgPort *port}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "CxObj*",
		"description": "Create a commodity triad. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0041.html"
	},
	{
		"displayText": "IconControl(icon, ...)",
		"snippet": "IconControl(${1:struct DiskObject *icon}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set and get icon and icon.library options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0351.html"
	},
	{
		"displayText": "IconControlA(icon, tags)",
		"snippet": "IconControlA(${1:struct DiskObject *icon}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set and get icon and icon.library options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0351.html"
	},
	{
		"displayText": "IDtoStr(id, buf)",
		"snippet": "IDtoStr(${1:LONG id}, ${2:STRPTR buf})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Convert a longword identifier to a null-terminated string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036A.html"
	},
	{
		"displayText": "IEEEDPAbs(parm)",
		"snippet": "IEEEDPAbs(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute absolute value of IEEE double precision argument.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047E.html"
	},
	{
		"displayText": "IEEEDPAcos(parm)",
		"snippet": "IEEEDPAcos(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arc cosine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048B.html"
	},
	{
		"displayText": "IEEEDPAdd(leftParm, rightParm)",
		"snippet": "IEEEDPAdd(${1:DOUBLE leftParm}, ${2:DOUBLE rightParm})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Add one double precision IEEE number to another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047F.html"
	},
	{
		"displayText": "IEEEDPAsin(parm)",
		"snippet": "IEEEDPAsin(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arcsine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048C.html"
	},
	{
		"displayText": "IEEEDPAtan(parm)",
		"snippet": "IEEEDPAtan(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arctangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048D.html"
	},
	{
		"displayText": "IEEEDPCeil(parm)",
		"snippet": "IEEEDPCeil(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute Ceil function of IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0480.html"
	},
	{
		"displayText": "IEEEDPCmp(leftParm, rightParm)",
		"snippet": "IEEEDPCmp(${1:DOUBLE leftParm}, ${2:DOUBLE rightParm})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two double precision floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0481.html"
	},
	{
		"displayText": "IEEEDPCos(parm)",
		"snippet": "IEEEDPCos(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048E.html"
	},
	{
		"displayText": "IEEEDPCosh(parm)",
		"snippet": "IEEEDPCosh(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the hyperbolic cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node048F.html"
	},
	{
		"displayText": "IEEEDPDiv(dividend, divisor)",
		"snippet": "IEEEDPDiv(${1:DOUBLE dividend}, ${2:DOUBLE divisor})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Divide one double precision IEEE by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0482.html"
	},
	{
		"displayText": "IEEEDPExp(parm)",
		"snippet": "IEEEDPExp(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the exponential of e.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0490.html"
	},
	{
		"displayText": "IEEEDPFieee(single)",
		"snippet": "IEEEDPFieee(${1:FLOAT single})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Convert IEEE single to IEEE double.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0491.html"
	},
	{
		"displayText": "IEEEDPFix(parm)",
		"snippet": "IEEEDPFix(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert IEEE double float to integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0483.html"
	},
	{
		"displayText": "IEEEDPFloor(parm)",
		"snippet": "IEEEDPFloor(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute Floor function of IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0484.html"
	},
	{
		"displayText": "IEEEDPFlt(integer)",
		"snippet": "IEEEDPFlt(${1:LONG integer})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Convert integer to IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0485.html"
	},
	{
		"displayText": "IEEEDPLog(parm)",
		"snippet": "IEEEDPLog(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the natural logarithm of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0492.html"
	},
	{
		"displayText": "IEEEDPLog10(parm)",
		"snippet": "IEEEDPLog10(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute logarithm base 10 of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0493.html"
	},
	{
		"displayText": "IEEEDPMul(factor1, factor2)",
		"snippet": "IEEEDPMul(${1:DOUBLE factor1}, ${2:DOUBLE factor2})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Multiply one double precision IEEE number by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0486.html"
	},
	{
		"displayText": "IEEEDPNeg(parm)",
		"snippet": "IEEEDPNeg(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute negative value of IEEE double precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0487.html"
	},
	{
		"displayText": "IEEEDPPow(exp, arg)",
		"snippet": "IEEEDPPow(${1:DOUBLE exp}, ${2:DOUBLE arg})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Raise a number to another number power.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0494.html"
	},
	{
		"displayText": "IEEEDPSin(parm)",
		"snippet": "IEEEDPSin(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0495.html"
	},
	{
		"displayText": "IEEEDPSincos(pf2, parm)",
		"snippet": "IEEEDPSincos(${1:DOUBLE *pf2}, ${2:DOUBLE parm})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the arc tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0496.html"
	},
	{
		"displayText": "IEEEDPSinh(parm)",
		"snippet": "IEEEDPSinh(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the hyperbolic sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0497.html"
	},
	{
		"displayText": "IEEEDPSqrt(parm)",
		"snippet": "IEEEDPSqrt(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the square root of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0498.html"
	},
	{
		"displayText": "IEEEDPSub(leftParm, rightParm)",
		"snippet": "IEEEDPSub(${1:DOUBLE leftParm}, ${2:DOUBLE rightParm})${3:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Subtract one double precision IEEE number from another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0488.html"
	},
	{
		"displayText": "IEEEDPTan(parm)",
		"snippet": "IEEEDPTan(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0499.html"
	},
	{
		"displayText": "IEEEDPTanh(parm)",
		"snippet": "IEEEDPTanh(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "DOUBLE",
		"description": "Compute the hyperbolic tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049A.html"
	},
	{
		"displayText": "IEEEDPTieee(parm)",
		"snippet": "IEEEDPTieee(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert IEEE double to IEEE single.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049B.html"
	},
	{
		"displayText": "IEEEDPTst(parm)",
		"snippet": "IEEEDPTst(${1:DOUBLE parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare IEEE double precision value to 0.0.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0489.html"
	},
	{
		"displayText": "IEEESPAbs(parm)",
		"snippet": "IEEESPAbs(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute absolute value of IEEE single precision argument.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049D.html"
	},
	{
		"displayText": "IEEESPAcos(parm)",
		"snippet": "IEEESPAcos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arc cosine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AA.html"
	},
	{
		"displayText": "IEEESPAdd(leftParm, rightParm)",
		"snippet": "IEEESPAdd(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Add one single precision IEEE number to another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049E.html"
	},
	{
		"displayText": "IEEESPAsin(parm)",
		"snippet": "IEEESPAsin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arcsine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AB.html"
	},
	{
		"displayText": "IEEESPAtan(parm)",
		"snippet": "IEEESPAtan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arc tangent of number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AC.html"
	},
	{
		"displayText": "IEEESPCeil(parm)",
		"snippet": "IEEESPCeil(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Ceil function of IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node049F.html"
	},
	{
		"displayText": "IEEESPCmp(leftParm, rightParm)",
		"snippet": "IEEESPCmp(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two single precision floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A0.html"
	},
	{
		"displayText": "IEEESPCos(parm)",
		"snippet": "IEEESPCos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AD.html"
	},
	{
		"displayText": "IEEESPCosh(parm)",
		"snippet": "IEEESPCosh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the hyperbolic cosine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AE.html"
	},
	{
		"displayText": "IEEESPDiv(dividend, divisor)",
		"snippet": "IEEESPDiv(${1:FLOAT dividend}, ${2:FLOAT divisor})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Divide one single precision IEEE by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A1.html"
	},
	{
		"displayText": "IEEESPExp(parm)",
		"snippet": "IEEESPExp(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the exponential of e.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04AF.html"
	},
	{
		"displayText": "IEEESPFieee(parm)",
		"snippet": "IEEESPFieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert IEEE single to IEEE single.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B0.html"
	},
	{
		"displayText": "IEEESPFix(parm)",
		"snippet": "IEEESPFix(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert IEEE single float to integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A2.html"
	},
	{
		"displayText": "IEEESPFloor(parm)",
		"snippet": "IEEESPFloor(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Floor function of IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A3.html"
	},
	{
		"displayText": "IEEESPFlt(integer)",
		"snippet": "IEEESPFlt(${1:LONG integer})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert integer to IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A4.html"
	},
	{
		"displayText": "IEEESPLog(parm)",
		"snippet": "IEEESPLog(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the natural logarithm of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B1.html"
	},
	{
		"displayText": "IEEESPLog10(parm)",
		"snippet": "IEEESPLog10(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute logarithm base 10 of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B2.html"
	},
	{
		"displayText": "IEEESPMul(leftParm, rightParm)",
		"snippet": "IEEESPMul(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Multiply one double precision IEEE number by another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A5.html"
	},
	{
		"displayText": "IEEESPNeg(parm)",
		"snippet": "IEEESPNeg(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute negative value of IEEE single precision number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A6.html"
	},
	{
		"displayText": "IEEESPPow(exp, arg)",
		"snippet": "IEEESPPow(${1:FLOAT exp}, ${2:FLOAT arg})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Raise a number to another number power.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B3.html"
	},
	{
		"displayText": "IEEESPSin(parm)",
		"snippet": "IEEESPSin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B4.html"
	},
	{
		"displayText": "IEEESPSincos(cosptr, parm)",
		"snippet": "IEEESPSincos(${1:FLOAT *cosptr}, ${2:FLOAT parm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the arc tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B5.html"
	},
	{
		"displayText": "IEEESPSinh(parm)",
		"snippet": "IEEESPSinh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the hyperbolic sine of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B6.html"
	},
	{
		"displayText": "IEEESPSqrt(parm)",
		"snippet": "IEEESPSqrt(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the square root of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B7.html"
	},
	{
		"displayText": "IEEESPSub(leftParm, rightParm)",
		"snippet": "IEEESPSub(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Subtract one single precision IEEE number from another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A7.html"
	},
	{
		"displayText": "IEEESPTan(parm)",
		"snippet": "IEEESPTan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B8.html"
	},
	{
		"displayText": "IEEESPTanh(parm)",
		"snippet": "IEEESPTanh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute the hyperbolic tangent of a floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04B9.html"
	},
	{
		"displayText": "IEEESPTieee(parm)",
		"snippet": "IEEESPTieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert IEEE single to IEEE single.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BA.html"
	},
	{
		"displayText": "IEEESPTst(parm)",
		"snippet": "IEEESPTst(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare IEEE single precision value to 0.0.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04A8.html"
	},
	{
		"displayText": "IfAmigaXIP(handle)",
		"snippet": "IfAmigaXIP(${1:CONST struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "struct Resident*",
		"description": "Check if a card is an Amiga execute-in-place card.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009C.html"
	},
	{
		"displayText": "Info(lock, parameterBlock)",
		"snippet": "Info(${1:BPTR lock}, ${2:struct InfoData *parameterBlock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns information about the disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017D.html"
	},
	{
		"displayText": "Inhibit(name, onoff)",
		"snippet": "Inhibit(${1:CONST_STRPTR name}, ${2:LONG onoff})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Inhibits access to a filesystem. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017E.html"
	},
	{
		"displayText": "InitArea(areaInfo, vectorBuffer, maxVectors)",
		"snippet": "InitArea(${1:struct AreaInfo *areaInfo}, ${2:APTR vectorBuffer}, ${3:LONG maxVectors})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize vector collection matrix.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F2.html"
	},
	{
		"displayText": "InitBitMap(bitMap, depth, width, height)",
		"snippet": "InitBitMap(${1:struct BitMap *bm}, ${2:LONG depth}, ${3:LONG width}, ${4:LONG height})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize bit map structure with input values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F3.html"
	},
	{
		"displayText": "InitCode(startClass, version)",
		"snippet": "InitCode(${1:ULONG startClass}, ${2:ULONG version})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize resident code modules (internal function)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0215.html"
	},
	{
		"displayText": "InitGels(head, tail, gelsInfo)",
		"snippet": "InitGels(${1:struct VSprite *head}, ${2:struct VSprite *tail}, ${3:struct GelsInfo *gelsInfo})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize a gel list; must be called before using gels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F4.html"
	},
	{
		"displayText": "InitGMasks(animOb)",
		"snippet": "InitGMasks(${1:struct AnimOb *anOb})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize all of the masks of an AnimOb.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F5.html"
	},
	{
		"displayText": "InitIFF(iffHandle, flags, streamHook)",
		"snippet": "InitIFF(${1:struct IFFHandle *iff}, ${2:LONG flags}, ${3:CONST struct Hook *streamHook})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize an IFFHandle structure as a user stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036B.html"
	},
	{
		"displayText": "InitIFFasClip(iffHandle)",
		"snippet": "InitIFFasClip(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize an IFFHandle as a clipboard stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036C.html"
	},
	{
		"displayText": "InitIFFasDOS(iffHandle)",
		"snippet": "InitIFFasDOS(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize an IFFHandle as a DOS stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036D.html"
	},
	{
		"displayText": "InitLayers(layerInfo)",
		"snippet": "InitLayers(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize Layer_Info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0423.html"
	},
	{
		"displayText": "InitMasks(vSprite)",
		"snippet": "InitMasks(${1:struct VSprite *vSprite})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize the BorderLine and CollMask masks of a VSprite.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F6.html"
	},
	{
		"displayText": "InitRastPort(rastPort)",
		"snippet": "InitRastPort(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize raster port structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F7.html"
	},
	{
		"displayText": "InitRequester(requester)",
		"snippet": "InitRequester(${1:struct Requester *req})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize a Requester structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BC.html"
	},
	{
		"displayText": "InitResident(resident, segList)",
		"snippet": "InitResident(${1:CONST struct Resident *res}, ${2:ULONG segList})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Initialize resident module.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0216.html"
	},
	{
		"displayText": "InitSemaphore(sigSem)",
		"snippet": "InitSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize a signal semaphore.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0217.html"
	},
	{
		"displayText": "InitStruct(initTable, memory, size)",
		"snippet": "InitStruct(${1:CONST APTR initTable}, ${2:APTR memory}, ${3:ULONG size})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize memory from a table.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0218.html"
	},
	{
		"displayText": "InitTmpRas(tmpRas, buffer, size)",
		"snippet": "InitTmpRas(${1:struct TmpRas *tmpRas}, ${2:PLANEPTR buffer}, ${3:LONG size})${4:}",
		"type": "function",
		"leftLabel": "struct TmpRas*",
		"description": "Initialize area of local memory for usage by areafill, floodfill, text.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F8.html"
	},
	{
		"displayText": "InitView(view)",
		"snippet": "InitView(${1:struct View *v})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize View structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02F9.html"
	},
	{
		"displayText": "InitVPort(viewPort)",
		"snippet": "InitVPort(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initialize ViewPort structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FA.html"
	},
	{
		"displayText": "Input()",
		"snippet": "Input()",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Identify the program's initial input file handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node017F.html"
	},
	{
		"displayText": "Insert(list, node, pred)",
		"snippet": "Insert(${1:struct List *list}, ${2:struct Node *node}, ${3:struct Node *pred})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert a node into a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0219.html"
	},
	{
		"displayText": "InsertCxObj(headObj, cxObj, pred)",
		"snippet": "InsertCxObj(${1:CxObj *headObj}, ${2:CxObj *co}, ${3:CxObj *pred})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Insert a commodity object in a list after a given object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F0.html"
	},
	{
		"displayText": "InstallClipRegion(layer, region)",
		"snippet": "InstallClipRegion(${1:struct Layer *layer}, ${2:CONST struct Region *region})${3:}",
		"type": "function",
		"leftLabel": "struct Region*",
		"description": "Install clip region in layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0424.html"
	},
	{
		"displayText": "InstallLayerHook(layer, hook)",
		"snippet": "InstallLayerHook(${1:struct Layer *layer}, ${2:struct Hook *hook})${3:}",
		"type": "function",
		"leftLabel": "struct Hook*",
		"description": "Safely install a new Layer->BackFill hook. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0425.html"
	},
	{
		"displayText": "InstallLayerInfoHook(li, hook)",
		"snippet": "InstallLayerInfoHook(${1:struct Layer_Info *li}, ${2:CONST struct Hook *hook})${3:}",
		"type": "function",
		"leftLabel": "struct Hook*",
		"description": "Install a backfill hook for non-layer. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0426.html"
	},
	{
		"displayText": "INTEGER_GetClass()",
		"snippet": "INTEGER_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the integer class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node038D.html"
	},
	{
		"displayText": "InternalLoadSeg(fileHandle, table, funcarray, stack)",
		"snippet": "InternalLoadSeg(${1:BPTR fh}, ${2:BPTR table}, ${3:CONST LONG *funcarray}, ${4:LONG *stack})${5:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Low-level load routine. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0180.html"
	},
	{
		"displayText": "InternalUnLoadSeg(seglist, freefunc)",
		"snippet": "InternalUnLoadSeg(${1:BPTR seglist}, ${2:void (*CONST freefunc})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Unloads a seglist loaded with InternalLoadSeg(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0181.html"
	},
	{
		"displayText": "IntuiTextLength(iText)",
		"snippet": "IntuiTextLength(${1:CONST struct IntuiText *iText})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return the length (pixel-width) of an IntuiText.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BD.html"
	},
	{
		"displayText": "InvertKeyMap(ansiCode, event, keyMap)",
		"snippet": "InvertKeyMap(${1:ULONG ansiCode}, ${2:struct InputEvent *event}, ${3:CONST struct KeyMap *km})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Generate an input event from an ANSI code. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F1.html"
	},
	{
		"displayText": "InvertString(string, keyMap)",
		"snippet": "InvertString(${1:CONST_STRPTR str}, ${2:CONST struct KeyMap *km})${3:}",
		"type": "function",
		"leftLabel": "struct InputEvent*",
		"description": "Produce input events that would generate the given string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0042.html"
	},
	{
		"displayText": "IoErr()",
		"snippet": "IoErr()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return extra information from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0182.html"
	},
	{
		"displayText": "IsFileSystem(name)",
		"snippet": "IsFileSystem(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns whether a Dos handler is a filesystem. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0183.html"
	},
	{
		"displayText": "IsInteractive(file)",
		"snippet": "IsInteractive(${1:BPTR file})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Discover whether a file is \"interactive\".",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0184.html"
	},
	{
		"displayText": "IsRexxMsg(rexxmsg)",
		"snippet": "IsRexxMsg(${1:CONST struct RexxMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Function to determine if a message came from ARexx.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054E.html"
	},
	{
		"displayText": "ItemAddress(menuStrip, menuNumber)",
		"snippet": "ItemAddress(${1:CONST struct Menu *menuStrip}, ${2:ULONG menuNumber})${3:}",
		"type": "function",
		"leftLabel": "struct MenuItem*",
		"description": "Returns the address of the specified MenuItem.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BE.html"
	},
	{
		"displayText": "KCmpStr(a, b)",
		"snippet": "KCmpStr(${1:CONST_STRPTR a}, ${2:CONST_STRPTR b})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compare two null terminated strings.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0124.html"
	},
	{
		"displayText": "KGetChar()",
		"snippet": "KGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0125.html"
	},
	{
		"displayText": "KGetChar()",
		"snippet": "KGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a character from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0125.html"
	},
	{
		"displayText": "KGetNum()",
		"snippet": "KGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0126.html"
	},
	{
		"displayText": "KGetNum()",
		"snippet": "KGetNum()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get a number from the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0126.html"
	},
	{
		"displayText": "KMayGetChar()",
		"snippet": "KMayGetChar()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return a character if present, but don't wait.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0127.html"
	},
	{
		"displayText": "KPrintF(formatString, ...)",
		"snippet": "KPrintF(${1:CONST_STRPTR formatString}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print formatted data to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0128.html"
	},
	{
		"displayText": "KPrintF(formatString, ...)",
		"snippet": "KPrintF(${1:CONST_STRPTR formatString}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print formatted data to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0128.html"
	},
	{
		"displayText": "KPutChar(character)",
		"snippet": "KPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0129.html"
	},
	{
		"displayText": "KPutChar(character)",
		"snippet": "KPutChar(${1:LONG ch})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a character to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0129.html"
	},
	{
		"displayText": "KPutStr(string)",
		"snippet": "KPutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a string to the console.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node012A.html"
	},
	{
		"displayText": "LABEL_GetClass()",
		"snippet": "LABEL_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the label image class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0416.html"
	},
	{
		"displayText": "LAYOUT_GetClass()",
		"snippet": "LAYOUT_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the layout class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043B.html"
	},
	{
		"displayText": "LayoutIcon(icon, screen, ...)",
		"snippet": "LayoutIcon(${1:struct DiskObject *icon}, ${2:struct Screen *scr}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Adapt a palette-mapped icon for display. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0352.html"
	},
	{
		"displayText": "LayoutIconA(icon, screen, tags)",
		"snippet": "LayoutIconA(${1:struct DiskObject *icon}, ${2:struct Screen *scr}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Adapt a palette-mapped icon for display. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0352.html"
	},
	{
		"displayText": "LayoutLimits(gadget, limits, font, screen)",
		"snippet": "LayoutLimits(${1:struct Gadget *gad}, ${2:struct LayoutLimits *limits}, ${3:struct TextFont *font}, ${4:struct Screen *scr})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Basy way to find out max and min size of layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043C.html"
	},
	{
		"displayText": "LayoutMenuItems(firstItem, visualInfo, tag1, ...)",
		"snippet": "LayoutMenuItems(${1:struct MenuItem *firstitem}, ${2:APTR vinfo}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0285.html"
	},
	{
		"displayText": "LayoutMenuItemsA(firstItem, visualInfo, tagList)",
		"snippet": "LayoutMenuItemsA(${1:struct MenuItem *firstitem}, ${2:APTR vinfo}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0285.html"
	},
	{
		"displayText": "LayoutMenus(firstMenu, visualInfo, tag1, ...)",
		"snippet": "LayoutMenus(${1:struct Menu *firstmenu}, ${2:APTR vinfo}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menus and menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0286.html"
	},
	{
		"displayText": "LayoutMenusA(firstMenu, visualInfo, tagList)",
		"snippet": "LayoutMenusA(${1:struct Menu *firstmenu}, ${2:APTR vinfo}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Position all the menus and menu items. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0286.html"
	},
	{
		"displayText": "LBAddNode(gadget, window, requester, node, tag1, ...)",
		"snippet": "LBAddNode(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:ULONG tag}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "V41 listbrowser.gadget LBM_ADDNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052C.html"
	},
	{
		"displayText": "LBAddNodeA(gadget, window, requester, node, tags)",
		"snippet": "LBAddNodeA(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "V41 listbrowser.gadget LBM_ADDNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052C.html"
	},
	{
		"displayText": "LBEditNode(gadget, window, requester, node, tag, ...)",
		"snippet": "LBEditNode(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:ULONG tag}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "V41 listbrowser.gadget LBM_EDITNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052D.html"
	},
	{
		"displayText": "LBEditNodeA(gadget, window, requester, node, tags)",
		"snippet": "LBEditNodeA(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node}, ${5:struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "V41 listbrowser.gadget LBM_EDITNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052D.html"
	},
	{
		"displayText": "LBRemNode(gadget, window, requester, node)",
		"snippet": "LBRemNode(${1:struct Gadget *lb}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct Node *node})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "V41 listbrowser.gadget LBM_REMNODE method stub.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052E.html"
	},
	{
		"displayText": "LendMenus(fromWindow, toWindow)",
		"snippet": "LendMenus(${1:struct Window *from}, ${2:struct Window *to})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lend window's menu action to another window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03BF.html"
	},
	{
		"displayText": "LengthArgstring(argstring)",
		"snippet": "LengthArgstring(${1:CONST_STRPTR argstr})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the length value stored in the argstring.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node054F.html"
	},
	{
		"displayText": "LISTBROWSER_GetClass()",
		"snippet": "LISTBROWSER_GetClass()",
		"type": "function",
		"leftLabel": "struct IClass*",
		"description": "Gets the pointer to the listbrowser class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0440.html"
	},
	{
		"displayText": "LibAllocPooled(poolHeader, memSize)",
		"snippet": "LibAllocPooled(${1:APTR poolHeader}, ${2:ULONG memSize})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Allocate memory with the pool manager. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0043.html"
	},
	{
		"displayText": "LibCreatePool(memFlags, puddleSize, threshSize)",
		"snippet": "LibCreatePool(${1:ULONG memFlags}, ${2:ULONG puddleSize}, ${3:ULONG threshSize})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Generate a private memory pool header. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0044.html"
	},
	{
		"displayText": "LibDeletePool(poolHeader)",
		"snippet": "LibDeletePool(${1:APTR poolHeader})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Drain an entire memory pool. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0045.html"
	},
	{
		"displayText": "LibDoGadgetMethod(gadget, window, requester, tag1, ...)",
		"snippet": "LibDoGadgetMethod(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "DoGadgetMethodA for V37 machines.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052F.html"
	},
	{
		"displayText": "LibDoGadgetMethodA(gadget, window, requester, message)",
		"snippet": "LibDoGadgetMethodA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Msg msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "DoGadgetMethodA for V37 machines.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node052F.html"
	},
	{
		"displayText": "LibFreePooled(poolHeader, memory, memSize)",
		"snippet": "LibFreePooled(${1:APTR poolHeader}, ${2:APTR memory}, ${3:ULONG memSize})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free pooled memory. (V33)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0046.html"
	},
	{
		"displayText": "ListBrowserSelectAll(list)",
		"snippet": "ListBrowserSelectAll(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Select all nodes in a multiselect ListBrowser.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0448.html"
	},
	{
		"displayText": "LoadRGB32(viewPort, table)",
		"snippet": "LoadRGB32(${1:struct ViewPort *vp}, ${2:CONST ULONG *table})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set a series of color registers for this Viewport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FB.html"
	},
	{
		"displayText": "LoadRGB4(viewPort, colors, count)",
		"snippet": "LoadRGB4(${1:struct ViewPort *vp}, ${2:CONST UWORD *colors}, ${3:LONG count})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Load RGB color values from table.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FC.html"
	},
	{
		"displayText": "LoadSeg(name)",
		"snippet": "LoadSeg(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Scatterload a loadable file into memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0185.html"
	},
	{
		"displayText": "LoadView(view)",
		"snippet": "LoadView(${1:struct View *v})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Use a coprocessor instruction list to create the current display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FD.html"
	},
	{
		"displayText": "LocalItemData(localItem)",
		"snippet": "LocalItemData(${1:CONST struct LocalContextItem *li})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Get pointer to user data for local context item. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036E.html"
	},
	{
		"displayText": "Lock(name, type)",
		"snippet": "Lock(${1:CONST_STRPTR name}, ${2:LONG type})${3:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Lock a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0186.html"
	},
	{
		"displayText": "LockAmigaGuideBase(handle)",
		"snippet": "LockAmigaGuideBase(${1:APTR handle})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Lock an AmigaGuide client. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000D.html"
	},
	{
		"displayText": "LockDosList(flags)",
		"snippet": "LockDosList(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Locks the specified Dos Lists for use. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0187.html"
	},
	{
		"displayText": "LockIBase(lockNum)",
		"snippet": "LockIBase(${1:ULONG lockNum})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke semaphore arbitration of IntuitionBase.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C0.html"
	},
	{
		"displayText": "LockLayer(dummy, layer)",
		"snippet": "LockLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lock layer to make changes to ClipRects.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0427.html"
	},
	{
		"displayText": "LockLayerInfo(layerInfo)",
		"snippet": "LockLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lock the LayerInfo structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0428.html"
	},
	{
		"displayText": "LockLayerRom(layer)",
		"snippet": "LockLayerRom(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Lock Layer structure by ROM(gfx lib) code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FE.html"
	},
	{
		"displayText": "LockLayers(layerInfo)",
		"snippet": "LockLayers(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Loadock all layers from graphics output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0429.html"
	},
	{
		"displayText": "LockPubScreen(name)",
		"snippet": "LockPubScreen(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Screen*",
		"description": "Prevent a public screen from closing. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C1.html"
	},
	{
		"displayText": "LockPubScreenList()",
		"snippet": "LockPubScreenList()",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Prevent changes to the system list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C2.html"
	},
	{
		"displayText": "LockRealTime(lockType)",
		"snippet": "LockRealTime(${1:ULONG lockType})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Prevent other tasks from changing internal structures. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0538.html"
	},
	{
		"displayText": "LockRecord(fh, offset, length, mode, timeout)",
		"snippet": "LockRecord(${1:BPTR fh}, ${2:ULONG offset}, ${3:ULONG length}, ${4:ULONG mode}, ${5:ULONG timeout})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Locks a portion of a file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0188.html"
	},
	{
		"displayText": "LockRecords(recArray, timeout)",
		"snippet": "LockRecords(${1:struct RecordLock *recArray}, ${2:ULONG timeout})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Lock a series of records. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0189.html"
	},
	{
		"displayText": "LockRexxBase(resource)",
		"snippet": "LockRexxBase(${1:ULONG resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Obtain a semaphore lock on the RexxBase structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0550.html"
	},
	{
		"displayText": "MakeClass(classID, superClassID, superClass, instanceSize, flags)",
		"snippet": "MakeClass(${1:CONST_STRPTR classID}, ${2:CONST_STRPTR superClassID}, ${3:CONST struct IClass *superClass}, ${4:ULONG instanceSize}, ${5:ULONG flags})${6:}",
		"type": "function",
		"leftLabel": "struct IClass*",
		"description": "Create and initialize a boopsi class. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C3.html"
	},
	{
		"displayText": "MakeDosEntry(name, type)",
		"snippet": "MakeDosEntry(${1:CONST_STRPTR name}, ${2:LONG type})${3:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Creates a DosList structure. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018A.html"
	},
	{
		"displayText": "MakeDosNode(parmPacket)",
		"snippet": "MakeDosNode(${1:CONST APTR parmPacket})${2:}",
		"type": "function",
		"leftLabel": "struct DeviceNode*",
		"description": "Construct dos data structures that a disk needs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0266.html"
	},
	{
		"displayText": "MakeFunctions(target, functionArray, funcDispBase)",
		"snippet": "MakeFunctions(${1:APTR target}, ${2:CONST APTR functionArray}, ${3:CONST APTR funcDispBase})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Construct a function jump table.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021A.html"
	},
	{
		"displayText": "MakeLibrary(funcInit, structInit, libInit)",
		"snippet": "MakeLibrary(${1:CONST APTR funcInit}, ${2:CONST APTR structInit}, ${3:ULONG (*CONST libInit})${4:}",
		"type": "function",
		"leftLabel": "struct Library*",
		"description": "Construct a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021B.html"
	},
	{
		"displayText": "MakeLink(name, dest, soft)",
		"snippet": "MakeLink(${1:CONST_STRPTR name}, ${2:LONG dest}, ${3:LONG soft})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Creates a filesystem link. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018B.html"
	},
	{
		"displayText": "MakeScreen(screen)",
		"snippet": "MakeScreen(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Do an Intuition-integrated MakeVPort() of a screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C4.html"
	},
	{
		"displayText": "MakeVPort(view, viewPort)",
		"snippet": "MakeVPort(${1:struct View *v}, ${2:struct ViewPort *vp})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Generate display copper list for a viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node02FF.html"
	},
	{
		"displayText": "MakeWorkbenchObjectVisible(name, ...)",
		"snippet": "MakeWorkbenchObjectVisible(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Make a particular icon visible. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C0.html"
	},
	{
		"displayText": "MakeWorkbenchObjectVisibleA(name, tags)",
		"snippet": "MakeWorkbenchObjectVisibleA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Make a particular icon visible. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C0.html"
	},
	{
		"displayText": "MapANSI(string, count, buffer, length, keyMap)",
		"snippet": "MapANSI(${1:CONST_STRPTR str}, ${2:LONG count}, ${3:STRPTR buffer}, ${4:LONG length}, ${5:CONST struct KeyMap *km})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Encode an ANSI string into keycodes. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0411.html"
	},
	{
		"displayText": "MapRawKey(event, buffer, length, keyMap)",
		"snippet": "MapRawKey(${1:CONST struct InputEvent *event}, ${2:STRPTR buffer}, ${3:LONG length}, ${4:CONST struct KeyMap *km})${5:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Decode single raw key input event to an ANSI string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0412.html"
	},
	{
		"displayText": "MapTags(tagList, mapList, mapType)",
		"snippet": "MapTags(${1:struct TagItem *tagList}, ${2:CONST struct TagItem *mapList}, ${3:ULONG mapType})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert ti_Tag values in a list via map pairing. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A5.html"
	},
	{
		"displayText": "MatchEnd(anchor)",
		"snippet": "MatchEnd(${1:struct AnchorPath *anchor})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free storage allocated for MatchFirst()/MatchNext(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018C.html"
	},
	{
		"displayText": "MatchFirst(pattern, anchor)",
		"snippet": "MatchFirst(${1:CONST_STRPTR pattern}, ${2:struct AnchorPath *anchor})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Finds file that matches pattern. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018D.html"
	},
	{
		"displayText": "MatchIX(event, ix)",
		"snippet": "MatchIX(${1:CONST struct InputEvent *event}, ${2:CONST IX *ix})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "See if an input event matches an initialized input expression. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F2.html"
	},
	{
		"displayText": "MatchNext(anchor)",
		"snippet": "MatchNext(${1:struct AnchorPath *anchor})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Finds the next file or directory that matches pattern. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018E.html"
	},
	{
		"displayText": "MatchPattern(pattern, string)",
		"snippet": "MatchPattern(${1:CONST_STRPTR pattern}, ${2:STRPTR str})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Checks for a pattern match with a string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node018F.html"
	},
	{
		"displayText": "MatchPatternNoCase(pattern, string)",
		"snippet": "MatchPatternNoCase(${1:CONST_STRPTR pattern}, ${2:STRPTR str})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Checks for a pattern match with a string. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0190.html"
	},
	{
		"displayText": "MatchToolValue(typeString, value)",
		"snippet": "MatchToolValue(${1:CONST STRPTR typeString}, ${2:CONST STRPTR value})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Check a tool type variable for a particular value.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0353.html"
	},
	{
		"displayText": "MaxCli()",
		"snippet": "MaxCli()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Returns the highest CLI process number possibly in use. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0191.html"
	},
	{
		"displayText": "ModeNotAvailable(modeID)",
		"snippet": "ModeNotAvailable(${1:ULONG modeID})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Check to see if a DisplayID isn't available. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0300.html"
	},
	{
		"displayText": "ModifyIDCMP(window, flags)",
		"snippet": "ModifyIDCMP(${1:struct Window *win}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Modify the state of a window's IDCMPFlags.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C5.html"
	},
	{
		"displayText": "ModifyProp(gadget, window, requester, flags, horizPot, vertPot, horizBody, vertBody)",
		"snippet": "ModifyProp(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG flags}, ${5:ULONG horizPot}, ${6:ULONG vertPot}, ${7:ULONG horizBody}, ${8:ULONG vertBody})${9:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Modify the current parameters of a proportional gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C6.html"
	},
	{
		"displayText": "Move(rastPort, x, y)",
		"snippet": "Move(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move graphics pen position.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0301.html"
	},
	{
		"displayText": "MoveLayer(dummy, layer, dx, dy)",
		"snippet": "MoveLayer(0L, ${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Move layer to new position in BitMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042A.html"
	},
	{
		"displayText": "MoveLayerInFrontOf(layer_to_move, other_layer)",
		"snippet": "MoveLayerInFrontOf(${1:struct Layer *layer_to_move}, ${2:struct Layer *other_layer})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Put layer in front of another layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042B.html"
	},
	{
		"displayText": "MoveScreen(screen, dx, dy)",
		"snippet": "MoveScreen(${1:struct Screen *scr}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Attempt to move the screen by the increments provided.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C7.html"
	},
	{
		"displayText": "MoveSizeLayer(layer, dx, dy, dw, dh)",
		"snippet": "MoveSizeLayer(${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG dw}, ${5:LONG dh})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Position/Size layer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042C.html"
	},
	{
		"displayText": "MoveSprite(viewPort, sprite, x, y)",
		"snippet": "MoveSprite(${1:struct ViewPort *vp}, ${2:struct SimpleSprite *sprite}, ${3:LONG x}, ${4:LONG y})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move sprite to a point relative to top of viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0302.html"
	},
	{
		"displayText": "MoveWindow(window, dx, dy)",
		"snippet": "MoveWindow(${1:struct Window *win}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to move a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C8.html"
	},
	{
		"displayText": "MoveWindowInFrontOf(window, behindWindow)",
		"snippet": "MoveWindowInFrontOf(${1:struct Window *win}, ${2:struct Window *behindWin})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Arrange the relative depth of a window. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03C9.html"
	},
	{
		"displayText": "MrgCop(view)",
		"snippet": "MrgCop(${1:struct View *v})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Merge together coprocessor instructions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0303.html"
	},
	{
		"displayText": "NamedObjectName(object)",
		"snippet": "NamedObjectName(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Return the name of the object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A6.html"
	},
	{
		"displayText": "NameFromFH(fileHandle, buffer, len)",
		"snippet": "NameFromFH(${1:BPTR fh}, ${2:STRPTR buffer}, ${3:LONG len})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get the name of an open filehandle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0192.html"
	},
	{
		"displayText": "NameFromLock(lock, buffer, len)",
		"snippet": "NameFromLock(${1:BPTR lock}, ${2:STRPTR buffer}, ${3:LONG len})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns the name of a locked object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0193.html"
	},
	{
		"displayText": "NewDiskObject(type)",
		"snippet": "NewDiskObject(${1:LONG type})${2:}",
		"type": "function",
		"leftLabel": "struct DiskObject*",
		"description": "Create an empty icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0354.html"
	},
	{
		"displayText": "NewDTObject(name, tag1, ...)",
		"snippet": "NewDTObject(${1:APTR name}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an data type object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0111.html"
	},
	{
		"displayText": "NewDTObjectA(name, attributes)",
		"snippet": "NewDTObjectA(${1:APTR name}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create an data type object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0111.html"
	},
	{
		"displayText": "NewFontContents(fontsLock, fontName)",
		"snippet": "NewFontContents(${1:BPTR fontsLock}, ${2:STRPTR fontName})${3:}",
		"type": "function",
		"leftLabel": "struct FontContentsHeader*",
		"description": "Create a FontContents image for a font. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0135.html"
	},
	{
		"displayText": "NewLayerInfo()",
		"snippet": "NewLayerInfo()",
		"type": "function",
		"leftLabel": "struct Layer_Info*",
		"description": "Allocate and Initialize full Layer_Info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042D.html"
	},
	{
		"displayText": "NewList(list)",
		"snippet": "NewList(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Prepare a list structure for use.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0047.html"
	},
	{
		"displayText": "NewLoadSeg(fileName, tags)",
		"snippet": "NewLoadSeg(${1:CONST_STRPTR fileName}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Improved version of LoadSeg for stacksizes. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0194.html"
	},
	{
		"displayText": "NewModifyProp(gadget, window, requester, flags, horizPot, vertPot, horizBody, vertBody, numGad)",
		"snippet": "NewModifyProp(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG flags}, ${5:ULONG horizPot}, ${6:ULONG vertPot}, ${7:ULONG horizBody}, ${8:ULONG vertBody}, ${9:LONG numGad})${10:}",
		"type": "function",
		"leftLabel": "void",
		"description": "ModifyProp(), but with selective refresh.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CA.html"
	},
	{
		"displayText": "NewObject(class, classID, tag1, ...)",
		"snippet": "NewObject(${1:struct IClass *cl}, ${2:CONST_STRPTR classID}, ${3:ULONG tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Create an object from a class. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CB.html"
	},
	{
		"displayText": "NewRegion()",
		"snippet": "NewRegion()",
		"type": "function",
		"leftLabel": "struct Region*",
		"description": "Get an empty region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0304.html"
	},
	{
		"displayText": "NewScaledDiskFont(sourceFont, destTextAttr)",
		"snippet": "NewScaledDiskFont(${1:struct TextFont *sourceFont}, ${2:struct TextAttr *destTextAttr})${3:}",
		"type": "function",
		"leftLabel": "struct DiskFont*",
		"description": "Create a DiskFont scaled from another. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0136.html"
	},
	{
		"displayText": "NextConductor(prevConductor)",
		"snippet": "NextConductor(${1:CONST struct Conductor *prev})${2:}",
		"type": "function",
		"leftLabel": "struct Conductor*",
		"description": "Return the next conductor on realtime.library's conductor list. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0539.html"
	},
	{
		"displayText": "NextDisplayInfo(displayID)",
		"snippet": "NextDisplayInfo(${1:ULONG displayID})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Iterate current displayinfo identifiers. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0305.html"
	},
	{
		"displayText": "NextDosEntry(dlist, flags)",
		"snippet": "NextDosEntry(${1:CONST struct DosList *dlist}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "struct DosList*",
		"description": "Get the next Dos List entry. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0195.html"
	},
	{
		"displayText": "NextObject(object)",
		"snippet": "NextObject(${1:APTR *obj})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Iterate through the object on an Exec list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CC.html"
	},
	{
		"displayText": "NextPubScreen(screen, namebuf)",
		"snippet": "NextPubScreen(${1:CONST struct Screen *scr}, ${2:STRPTR namebuf})${3:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Identify next public screen in the cycle. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CD.html"
	},
	{
		"displayText": "NextTagItem(tagList)",
		"snippet": "NextTagItem(${1:struct TagItem **tagList})${2:}",
		"type": "function",
		"leftLabel": "struct TagItem*",
		"description": "Iterate through a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A7.html"
	},
	{
		"displayText": "ObtainBattSemaphore()",
		"snippet": "ObtainBattSemaphore()",
		"type": "function",
		"leftLabel": "void",
		"description": "Obtain access to nonvolatile ram. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0079.html"
	},
	{
		"displayText": "ObtainBestPen(colorMap, r, g, b, tag1, ...)",
		"snippet": "ObtainBestPen(${1:struct ColorMap *cm}, ${2:ULONG r}, ${3:ULONG g}, ${4:ULONG b}, ${5:ULONG tag1}, ${6:...})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Search for the closest color match, or allocate a new one. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0306.html"
	},
	{
		"displayText": "ObtainBestPenA(colorMap, r, g, b, tags)",
		"snippet": "ObtainBestPenA(${1:struct ColorMap *cm}, ${2:ULONG r}, ${3:ULONG g}, ${4:ULONG b}, ${5:CONST struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Search for the closest color match, or allocate a new one. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0306.html"
	},
	{
		"displayText": "ObtainConfigBinding()",
		"snippet": "ObtainConfigBinding()",
		"type": "function",
		"leftLabel": "void",
		"description": "Try to get permission to bind drivers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0267.html"
	},
	{
		"displayText": "ObtainDataType(type, handle, tag1, ...)",
		"snippet": "ObtainDataType(${1:ULONG type}, ${2:APTR handle}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "struct DataType*",
		"description": "Examines a handle and return its DataType. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0112.html"
	},
	{
		"displayText": "ObtainDataTypeA(type, handle, attributes)",
		"snippet": "ObtainDataTypeA(${1:ULONG type}, ${2:APTR handle}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "struct DataType*",
		"description": "Examines a handle and return its DataType. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0112.html"
	},
	{
		"displayText": "ObtainDTDrawInfo(object, tag1, ...)",
		"snippet": "ObtainDTDrawInfo(${1:Object *obj}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Obtain a DataTypes object for drawing. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0113.html"
	},
	{
		"displayText": "ObtainDTDrawInfoA(object, attributes)",
		"snippet": "ObtainDTDrawInfoA(${1:Object *obj}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Obtain a DataTypes object for drawing. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0113.html"
	},
	{
		"displayText": "ObtainGIRPort(gInfo)",
		"snippet": "ObtainGIRPort(${1:struct GadgetInfo *gInfo})${2:}",
		"type": "function",
		"leftLabel": "struct RastPort*",
		"description": "Set up a RastPort for a custom gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CE.html"
	},
	{
		"displayText": "ObtainInfo(glyphEngine, tag1, ...)",
		"snippet": "ObtainInfo(${1:struct GlyphEngine *glyphEngine}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire tagged font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0087.html"
	},
	{
		"displayText": "ObtainInfoA(glyphEngine, tagList)",
		"snippet": "ObtainInfoA(${1:struct GlyphEngine *glyphEngine}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Inquire tagged font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0087.html"
	},
	{
		"displayText": "ObtainPen(colorMap, index, r, g, b, flags)",
		"snippet": "ObtainPen(${1:struct ColorMap *cm}, ${2:ULONG index}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b}, ${6:LONG flags})${7:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Obtain a free palette entry for use by your program. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0307.html"
	},
	{
		"displayText": "ObtainQuickVector(interruptCode)",
		"snippet": "ObtainQuickVector(${1:APTR interruptCode})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021C.html"
	},
	{
		"displayText": "ObtainSemaphore(sigSem)",
		"snippet": "ObtainSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Gain exclusive access to a semaphore.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021D.html"
	},
	{
		"displayText": "ObtainSemaphoreList(sigSem)",
		"snippet": "ObtainSemaphoreList(${1:struct List *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Get a list of semaphores.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021E.html"
	},
	{
		"displayText": "ObtainSemaphoreShared(sigSem)",
		"snippet": "ObtainSemaphoreShared(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Gain shared access to a semaphore. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node021F.html"
	},
	{
		"displayText": "OffGadget(gadget, window, requester)",
		"snippet": "OffGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Disable the specified gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03CF.html"
	},
	{
		"displayText": "OffMenu(window, menuNumber)",
		"snippet": "OffMenu(${1:struct Window *win}, ${2:ULONG menuNumber})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Disable the given menu or menu item.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D0.html"
	},
	{
		"displayText": "OldOpenLibrary(libName)",
		"snippet": "OldOpenLibrary(${1:CONST_STRPTR libName})${2:}",
		"type": "function",
		"leftLabel": "struct Library*",
		"description": "Obsolete OpenLibrary.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0220.html"
	},
	{
		"displayText": "OnGadget(gadget, window, requester)",
		"snippet": "OnGadget(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Enable the specified gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D1.html"
	},
	{
		"displayText": "OnMenu(window, menuNumber)",
		"snippet": "OnMenu(${1:struct Window *win}, ${2:ULONG menuNumber})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Enable the given menu or menu item.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D2.html"
	},
	{
		"displayText": "Open(name, accessMode)",
		"snippet": "Open(${1:CONST_STRPTR name}, ${2:LONG accessMode})${3:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Open a file for input or output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0196.html"
	},
	{
		"displayText": "OpenAmigaGuide(newAmigaGuide, tag1, ...)",
		"snippet": "OpenAmigaGuide(${1:struct NewAmigaGuide *nag}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open a synchronous AmigaGuide database.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000E.html"
	},
	{
		"displayText": "OpenAmigaGuideA(newAmigaGuide, tags)",
		"snippet": "OpenAmigaGuideA(${1:struct NewAmigaGuide *nag}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open a synchronous AmigaGuide database.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000E.html"
	},
	{
		"displayText": "OpenAmigaGuideAsync(newAmigaGuide, tag1, ...)",
		"snippet": "OpenAmigaGuideAsync(${1:struct NewAmigaGuide *nag}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open an AmigaGuide database async. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000F.html"
	},
	{
		"displayText": "OpenAmigaGuideAsyncA(newAmigaGuide, attributes)",
		"snippet": "OpenAmigaGuideAsyncA(${1:struct NewAmigaGuide *nag}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Open an AmigaGuide database async. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node000F.html"
	},
	{
		"displayText": "OpenCatalog(locale, name, tag1, ...)",
		"snippet": "OpenCatalog(${1:struct Locale *locale}, ${2:STRPTR name}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "struct Catalog*",
		"description": "Open a message catalog. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045B.html"
	},
	{
		"displayText": "OpenClipboard(unitNumber)",
		"snippet": "OpenClipboard(${1:LONG unitNumber})${2:}",
		"type": "function",
		"leftLabel": "struct ClipboardHandle*",
		"description": "Create a handle on a clipboard unit. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node036F.html"
	},
	{
		"displayText": "OpenDevice(devName, unit, ioRequest, flags)",
		"snippet": "OpenDevice(${1:CONST_STRPTR devName}, ${2:ULONG unit}, ${3:struct IORequest *ioReq}, ${4:ULONG flags})${5:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Open the audio device.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0560.html"
	},
	{
		"displayText": "OpenDiskFont(textAttr)",
		"snippet": "OpenDiskFont(${1:struct TextAttr *attr})${2:}",
		"type": "function",
		"leftLabel": "struct TextFont*",
		"description": "Loadoad and get a pointer to a disk font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0137.html"
	},
	{
		"displayText": "OpenEngine()",
		"snippet": "OpenEngine()",
		"type": "function",
		"leftLabel": "struct GlyphEngine*",
		"description": "Acquire engine handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0088.html"
	},
	{
		"displayText": "OpenFont(textAttr)",
		"snippet": "OpenFont(${1:struct TextAttr *attr})${2:}",
		"type": "function",
		"leftLabel": "struct TextFont*",
		"description": "Get a pointer to a system font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0308.html"
	},
	{
		"displayText": "OpenFromLock(lock)",
		"snippet": "OpenFromLock(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Opens a file you have a lock on. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0197.html"
	},
	{
		"displayText": "OpenIFF(iffHandle, rwMode)",
		"snippet": "OpenIFF(${1:struct IFFHandle *iff}, ${2:LONG rwMode})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Prepare an IFFHandle to read or write a new IFF stream.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0370.html"
	},
	{
		"displayText": "OpenLayoutWindowTagList(gadget, screen, tags)",
		"snippet": "OpenLayoutWindowTagList(${1:struct Gadget *gad}, ${2:struct Screen *scr}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Open a window at a suitable size for layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0530.html"
	},
	{
		"displayText": "OpenLibrary(libName, version)",
		"snippet": "OpenLibrary(${1:CONST_STRPTR libName}, ${2:ULONG version})${3:}",
		"type": "function",
		"leftLabel": "struct Library*",
		"description": "Gain access to a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0222.html"
	},
	{
		"displayText": "OpenLocale(name)",
		"snippet": "OpenLocale(${1:STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "struct Locale*",
		"description": "Open a locale. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045C.html"
	},
	{
		"displayText": "OpenMonitor(monitorName, displayID)",
		"snippet": "OpenMonitor(${1:CONST_STRPTR monitorName}, ${2:ULONG displayID})${3:}",
		"type": "function",
		"leftLabel": "struct MonitorSpec*",
		"description": "Open a named MonitorSpec. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0309.html"
	},
	{
		"displayText": "OpenResource(name)",
		"snippet": "OpenResource(${1:CONST_STRPTR resName})${2:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Gain access to a resource.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0223.html"
	},
	{
		"displayText": "OpenScreen(newScreen)",
		"snippet": "OpenScreen(${1:CONST struct NewScreen *scr})${2:}",
		"type": "function",
		"leftLabel": "struct Screen*",
		"description": "Open an Intuition screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D3.html"
	},
	{
		"displayText": "OpenScreenTagList(newScreen, tagList)",
		"snippet": "OpenScreenTagList(${1:CONST struct NewScreen *scr}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct Screen*",
		"description": "OpenScreen() with TagItem extension array. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D4.html"
	},
	{
		"displayText": "OpenWindow(newWindow)",
		"snippet": "OpenWindow(${1:CONST struct NewWindow *win})${2:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "Open an Intuition window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D5.html"
	},
	{
		"displayText": "OpenWindowTagList(newWindow, tagList)",
		"snippet": "OpenWindowTagList(${1:CONST struct NewWindow *win}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "struct Window*",
		"description": "OpenWindow() with TagItem extension. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D6.html"
	},
	{
		"displayText": "OpenWorkBench()",
		"snippet": "OpenWorkBench()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Open the Workbench screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D7.html"
	},
	{
		"displayText": "OpenWorkbenchObject(name, ...)",
		"snippet": "OpenWorkbenchObject(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Open a drawer window or launch a program. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C1.html"
	},
	{
		"displayText": "OpenWorkbenchObjectA(name, tags)",
		"snippet": "OpenWorkbenchObjectA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Open a drawer window or launch a program. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C1.html"
	},
	{
		"displayText": "OrRectRegion(region, rectangle)",
		"snippet": "OrRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d OR operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030A.html"
	},
	{
		"displayText": "OrRegionRegion(srcRegion, destRegion)",
		"snippet": "OrRegionRegion(${1:CONST struct Region *src}, ${2:struct Region *dest})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d OR operation of two regions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030B.html"
	},
	{
		"displayText": "Output()",
		"snippet": "Output()",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Identify the programs' initial output file handle.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0198.html"
	},
	{
		"displayText": "OwnBlitter()",
		"snippet": "OwnBlitter()",
		"type": "function",
		"leftLabel": "void",
		"description": "Get the blitter for private usage.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030C.html"
	},
	{
		"displayText": "OwnCard(handle)",
		"snippet": "OwnCard(${1:struct CardHandle *handle})${2:}",
		"type": "function",
		"leftLabel": "struct CardHandle*",
		"description": "Own credit card registers, and memory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009D.html"
	},
	{
		"displayText": "PackBoolTags(initialFlags, tagList, boolMap)",
		"snippet": "PackBoolTags(${1:ULONG initFlags}, ${2:CONST struct TagItem *tagList}, ${3:CONST struct TagItem *boolMap})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Builds a \"flag\" word from a tag list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A8.html"
	},
	{
		"displayText": "PackStructureTags(pack, packTable, tagList)",
		"snippet": "PackStructureTags(${1:APTR pack}, ${2:CONST ULONG *packTable}, ${3:CONST struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Pack a structure with values from taglist. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05A9.html"
	},
	{
		"displayText": "PAGE_GetClass()",
		"snippet": "PAGE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the Page class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E5.html"
	},
	{
		"displayText": "PAGE_GetClass()",
		"snippet": "PAGE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the Page class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E5.html"
	},
	{
		"displayText": "PALETTE_GetClass()",
		"snippet": "PALETTE_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the palette class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04EB.html"
	},
	{
		"displayText": "ParentChunk(contextNode)",
		"snippet": "ParentChunk(${1:CONST struct ContextNode *cNode})${2:}",
		"type": "function",
		"leftLabel": "struct ContextNode*",
		"description": "Get the nesting context node for the given chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0371.html"
	},
	{
		"displayText": "ParentDir(lock)",
		"snippet": "ParentDir(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Obtain the parent of a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0199.html"
	},
	{
		"displayText": "ParentOfFH(fileHandle)",
		"snippet": "ParentOfFH(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Returns a lock on the parent directory of a file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019A.html"
	},
	{
		"displayText": "ParseDate(locale, date, fmtTemplate, getCharFunc)",
		"snippet": "ParseDate(${1:struct Locale *locale}, ${2:struct DateStamp *date}, ${3:STRPTR fmtTemplate}, ${4:struct Hook *getCharFunc})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Interpret a string according to the date formatting template. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045D.html"
	},
	{
		"displayText": "ParseIFF(iffHandle, control)",
		"snippet": "ParseIFF(${1:struct IFFHandle *iff}, ${2:LONG control})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Parse an IFF file from an IFFHandle structure stream. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0372.html"
	},
	{
		"displayText": "ParseIX(description, ix)",
		"snippet": "ParseIX(${1:CONST_STRPTR descr}, ${2:IX *ix})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Initialize an input expression given a description string. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F3.html"
	},
	{
		"displayText": "ParsePattern(pattern, buffer, buflen)",
		"snippet": "ParsePattern(${1:CONST_STRPTR pattern}, ${2:STRPTR buf}, ${3:LONG buflen})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Create a tokenized string for MatchPattern(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019B.html"
	},
	{
		"displayText": "ParsePatternNoCase(pattern, buffer, buflen)",
		"snippet": "ParsePatternNoCase(${1:CONST_STRPTR pattern}, ${2:UBYTE *buf}, ${3:LONG buflen})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Create a tokenized string for MatchPatternNoCase(). (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019C.html"
	},
	{
		"displayText": "PathPart(path)",
		"snippet": "PathPart(${1:CONST_STRPTR path})${2:}",
		"type": "function",
		"leftLabel": "STRPTR",
		"description": "Returns a pointer to the end of the next-to-last. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019D.html"
	},
	{
		"displayText": "PeekQualifier()",
		"snippet": "PeekQualifier()",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Get the input device's current qualifiers. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node038A.html"
	},
	{
		"displayText": "PENMAP_GetClass()",
		"snippet": "PENMAP_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the penmap class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04F9.html"
	},
	{
		"displayText": "Permit()",
		"snippet": "Permit()",
		"type": "function",
		"leftLabel": "void",
		"description": "Permit task rescheduling.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0224.html"
	},
	{
		"displayText": "PointInImage(point, image)",
		"snippet": "PointInImage(${1:ULONG point}, ${2:struct Image *img})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Tests whether an image \"contains\" a point. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D8.html"
	},
	{
		"displayText": "PolyDraw(rastPort, count, polyTable)",
		"snippet": "PolyDraw(${1:struct RastPort *rp}, ${2:LONG count}, ${3:CONST WORD *polyTable})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Draw lines from table of (x,y) values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030D.html"
	},
	{
		"displayText": "PopChunk(iffHandle)",
		"snippet": "PopChunk(${1:struct IFFHandle *iff})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Pop top context node off context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0373.html"
	},
	{
		"displayText": "PrintDTObject(object, window, requester, data, ...)",
		"snippet": "PrintDTObject(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG data}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Call the DTM_PRINT method on a separate process. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0114.html"
	},
	{
		"displayText": "PrintDTObjectA(object, window, requester, message)",
		"snippet": "PrintDTObjectA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct dtPrint *msg})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Call the DTM_PRINT method on a separate process. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0114.html"
	},
	{
		"displayText": "printf(formatString, ...)",
		"snippet": "printf(${1:CONST_STRPTR fmt}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Print a formatted output line to the standard output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0048.html"
	},
	{
		"displayText": "PrintFault(code, header)",
		"snippet": "PrintFault(${1:LONG code}, ${2:CONST_STRPTR header})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Returns the text associated with a DOS error code. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019E.html"
	},
	{
		"displayText": "PrintIText(rastPort, iText, left, top)",
		"snippet": "PrintIText(${1:struct RastPort *rp}, ${2:CONST struct IntuiText *iText}, ${3:LONG left}, ${4:LONG top})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Print text described by the IntuiText argument.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03D9.html"
	},
	{
		"displayText": "Procure(sigSem, bidMsg)",
		"snippet": "Procure(${1:struct SignalSemaphore *sigSem}, ${2:struct SemaphoreMessage *bidMsg})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Bid for a semaphore. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0225.html"
	},
	{
		"displayText": "PropChunk(iffHandle, type, id)",
		"snippet": "PropChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Specify a property chunk to store. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0374.html"
	},
	{
		"displayText": "PropChunks(iffHandle, propArray, numPairs)",
		"snippet": "PropChunks(${1:struct IFFHandle *iff}, ${2:CONST LONG *propArray}, ${3:LONG numPairs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare many property chunks at once. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0375.html"
	},
	{
		"displayText": "PubScreenStatus(screen, statusFlags)",
		"snippet": "PubScreenStatus(${1:struct Screen *scr}, ${2:ULONG statFlags})${3:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Change status flags for a public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DA.html"
	},
	{
		"displayText": "PushChunk(iffHandle, type, id, size)",
		"snippet": "PushChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id}, ${4:LONG size})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Push a new context node on the context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0376.html"
	},
	{
		"displayText": "PutDefDiskObject(diskObject)",
		"snippet": "PutDefDiskObject(${1:CONST struct DiskObject *dObj})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Write disk object as the default for its type. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0355.html"
	},
	{
		"displayText": "PutDiskObject(name, diskObject)",
		"snippet": "PutDiskObject(${1:CONST STRPTR name}, ${2:CONST struct DiskObject *dObj})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Write out a DiskObject to disk.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0356.html"
	},
	{
		"displayText": "PutIconTagList(name, icon, tags)",
		"snippet": "PutIconTagList(${1:CONST STRPTR name}, ${2:CONST struct DiskObject *icon}, ${3:CONST struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Store an icon. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0357.html"
	},
	{
		"displayText": "PutMsg(port, message)",
		"snippet": "PutMsg(${1:struct MsgPort *port}, ${2:struct Message *msg})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a message to a message port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0226.html"
	},
	{
		"displayText": "PutStr(string)",
		"snippet": "PutStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes a string the the default output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node019F.html"
	},
	{
		"displayText": "QBlit(blit)",
		"snippet": "QBlit(${1:struct bltnode *blit})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Queue up a request for blitter usage.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030E.html"
	},
	{
		"displayText": "QBSBlit(blit)",
		"snippet": "QBSBlit(${1:struct bltnode *blit})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Synchronize the blitter request with the video beam.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node030F.html"
	},
	{
		"displayText": "QueryKeys(queryArray, arraySize)",
		"snippet": "QueryKeys(${1:struct KeyQuery *queryArray}, ${2:ULONG arraySize})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return the states for a set of keys. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0467.html"
	},
	{
		"displayText": "QueryOverscan(displayID, rectangle, oScanType)",
		"snippet": "QueryOverscan(${1:ULONG displayID}, ${2:struct Rectangle *rect}, ${3:LONG oScanType})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Inquire about a standard overscan region. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DB.html"
	},
	{
		"displayText": "RADIOBUTTON_GetClass()",
		"snippet": "RADIOBUTTON_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the radiobutton class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node051C.html"
	},
	{
		"displayText": "RadioButtons(label1, ...)",
		"snippet": "RadioButtons(${1:STRPTR label1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of radiobuttons.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0531.html"
	},
	{
		"displayText": "RadioButtonsA(labels[])",
		"snippet": "RadioButtonsA(${1:STRPTR *labels})${2:}",
		"type": "function",
		"leftLabel": "struct List*",
		"description": "Make a linked list of radiobuttons.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0531.html"
	},
	{
		"displayText": "RangeRand(maxValue)",
		"snippet": "RangeRand(${1:ULONG maxValue})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Generate a random number within a specific integer range.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0049.html"
	},
	{
		"displayText": "RawDoFmt(formatString, dataStream, putChProc)",
		"snippet": "RawDoFmt(${1:CONST_STRPTR fmt}, ${2:CONST APTR dataStream}, ${3:void (*CONST putChProc})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Format data into a character stream.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0227.html"
	},
	{
		"displayText": "RawKeyConvert(events, buffer, length, keyMap)",
		"snippet": "RawKeyConvert(${1:CONST struct InputEvent *events}, ${2:STRPTR buffer}, ${3:LONG length}, ${4:CONST struct KeyMap *keyMap})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Decode raw input classes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0104.html"
	},
	{
		"displayText": "Read(fileHandle, buffer, length)",
		"snippet": "Read(${1:BPTR fh}, ${2:APTR buffer}, ${3:LONG length})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read bytes of data from a file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A0.html"
	},
	{
		"displayText": "ReadArgs(arg_template, array, args)",
		"snippet": "ReadArgs(${1:CONST_STRPTR arg_template}, ${2:LONG *array}, ${3:struct RDArgs *args})${4:}",
		"type": "function",
		"leftLabel": "struct RDArgs*",
		"description": "Parse the command line input. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A1.html"
	},
	{
		"displayText": "ReadBattClock()",
		"snippet": "ReadBattClock()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Read time from clock chip. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0075.html"
	},
	{
		"displayText": "ReadBattMem(buffer, offset, length)",
		"snippet": "ReadBattMem(${1:APTR buffer}, ${2:ULONG offset}, ${3:ULONG length})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Read a bitstring from nonvolatile ram. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node007A.html"
	},
	{
		"displayText": "ReadCardStatus()",
		"snippet": "ReadCardStatus()",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Read credit card status register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009E.html"
	},
	{
		"displayText": "ReadChunkBytes(iffHandle, buffer, numBytes)",
		"snippet": "ReadChunkBytes(${1:struct IFFHandle *iff}, ${2:APTR buf}, ${3:LONG numBytes})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read bytes from the current chunk into a buffer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0377.html"
	},
	{
		"displayText": "ReadChunkRecords(iffHandle, buffer, bytesPerRecord, numRecords)",
		"snippet": "ReadChunkRecords(${1:struct IFFHandle *iff}, ${2:APTR buf}, ${3:LONG bytesPerRecord}, ${4:LONG numRecords})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read record elements from the current chunk into a buffer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0378.html"
	},
	{
		"displayText": "ReadEClock(dest)",
		"snippet": "ReadEClock(${1:struct EClockVal *dest})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get the current value of the E-Clock. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0578.html"
	},
	{
		"displayText": "ReadExpansionByte(board, offset)",
		"snippet": "ReadExpansionByte(${1:CONST APTR board}, ${2:ULONG offset})${3:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Read a byte nybble by nybble.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0268.html"
	},
	{
		"displayText": "ReadExpansionRom(board, configDev)",
		"snippet": "ReadExpansionRom(${1:CONST APTR board}, ${2:struct ConfigDev *configDev})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Read a boards configuration ROM space.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0269.html"
	},
	{
		"displayText": "ReadItem(name, maxchars, cSource)",
		"snippet": "ReadItem(${1:CONST_STRPTR name}, ${2:LONG maxchars}, ${3:struct CSource *cSource})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reads a single argument/name from command line. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A2.html"
	},
	{
		"displayText": "ReadJoyPort(port)",
		"snippet": "ReadJoyPort(${1:ULONG port})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Return the state of the selected joy/mouse port. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0468.html"
	},
	{
		"displayText": "ReadLink(port, lock, path, buffer, size)",
		"snippet": "ReadLink(${1:struct MsgPort *port}, ${2:BPTR lock}, ${3:CONST_STRPTR path}, ${4:STRPTR buffer}, ${5:ULONG size})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reads the path for a soft filesystem link. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A3.html"
	},
	{
		"displayText": "ReadPixel(rastPort, x, y)",
		"snippet": "ReadPixel(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Read the pen number of a pixel. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0310.html"
	},
	{
		"displayText": "ReadPixelArray8(rastPort, xStart, yStart, xStop, yStop, array, tempRP)",
		"snippet": "ReadPixelArray8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG xStop}, ${5:ULONG yStop}, ${6:UBYTE *array}, ${7:struct RastPort *tempRP})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read the pen number of a rectangular array of pixels. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0311.html"
	},
	{
		"displayText": "ReadPixelLine8(rastPort, xStart, yStart, width, array, tempRP)",
		"snippet": "ReadPixelLine8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG width}, ${5:UBYTE *array}, ${6:struct RastPort *tempRP})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Read the pen number of a horizontal line of pixels. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0312.html"
	},
	{
		"displayText": "ReadUnitID(unitNum)",
		"snippet": "ReadUnitID(${1:LONG unitNum})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Reread and return the type of drive. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0131.html"
	},
	{
		"displayText": "RectFill(rastPort, xMin, yMin, xMax, yMax)",
		"snippet": "RectFill(${1:struct RastPort *rp}, ${2:LONG xMin}, ${3:LONG yMin}, ${4:LONG xMax}, ${5:LONG yMax})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Fill a rectangular region in a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0313.html"
	},
	{
		"displayText": "RefreshDTObject(object, window, requester, tag1, ...)",
		"snippet": "RefreshDTObject(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh a datatypes object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0115.html"
	},
	{
		"displayText": "RefreshDTObjectA(object, window, requester, attributes)",
		"snippet": "RefreshDTObjectA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct TagItem *attrs})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh a datatypes object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0115.html"
	},
	{
		"displayText": "RefreshGadgets(gadgets, window, requester)",
		"snippet": "RefreshGadgets(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh (redraw) the gadget display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DC.html"
	},
	{
		"displayText": "RefreshGList(gadgets, window, requester, numGad)",
		"snippet": "RefreshGList(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:LONG numGad})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh (redraw) a chosen number of gadgets.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DD.html"
	},
	{
		"displayText": "RefreshPageGadget(gadget, object, window, requester)",
		"snippet": "RefreshPageGadget(${1:struct Gadget *gad}, ${2:Object *obj}, ${3:struct Window *win}, ${4:struct Requester *req})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Refresh gadget in a paged layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E6.html"
	},
	{
		"displayText": "RefreshTagItemClones(clone, original)",
		"snippet": "RefreshTagItemClones(${1:struct TagItem *clone}, ${2:CONST struct TagItem *orig})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Rejuvenate a clone from the original. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AA.html"
	},
	{
		"displayText": "RefreshWindowFrame(window)",
		"snippet": "RefreshWindowFrame(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to redraw your window border.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DE.html"
	},
	{
		"displayText": "Relabel(drive, newname)",
		"snippet": "Relabel(${1:CONST_STRPTR drive}, ${2:CONST_STRPTR newname})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the volume name of a volume. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A4.html"
	},
	{
		"displayText": "ReleaseBattSemaphore()",
		"snippet": "ReleaseBattSemaphore()",
		"type": "function",
		"leftLabel": "void",
		"description": "Allow nonvolatile ram to others. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node007B.html"
	},
	{
		"displayText": "ReleaseCard(handle, flags)",
		"snippet": "ReleaseCard(${1:struct CardHandle *handle}, ${2:ULONG flags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release ownership of credit card.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node009F.html"
	},
	{
		"displayText": "ReleaseConfigBinding()",
		"snippet": "ReleaseConfigBinding()",
		"type": "function",
		"leftLabel": "void",
		"description": "Allow others to bind to drivers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026A.html"
	},
	{
		"displayText": "ReleaseDataType(datatype)",
		"snippet": "ReleaseDataType(${1:struct DataType *dt})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a DataType structure. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0116.html"
	},
	{
		"displayText": "ReleaseDTDrawInfo(object, handle)",
		"snippet": "ReleaseDTDrawInfo(${1:Object *obj}, ${2:APTR handle})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a DataTypes object from drawing. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0117.html"
	},
	{
		"displayText": "ReleaseGIRPort(rastPort)",
		"snippet": "ReleaseGIRPort(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a custom gadget RastPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03DF.html"
	},
	{
		"displayText": "ReleaseInfo(glyphEngine, tag1, ...)",
		"snippet": "ReleaseInfo(${1:struct GlyphEngine *glyphEngine}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Release data obtained with ObtainInfo().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0089.html"
	},
	{
		"displayText": "ReleaseInfoA(glyphEngine, tagList)",
		"snippet": "ReleaseInfoA(${1:struct GlyphEngine *ge}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Release data obtained with ObtainInfoA().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0089.html"
	},
	{
		"displayText": "ReleaseNamedObject(object)",
		"snippet": "ReleaseNamedObject(${1:struct NamedObject *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Free a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AB.html"
	},
	{
		"displayText": "ReleasePen(colorMap, index)",
		"snippet": "ReleasePen(${1:struct ColorMap *cm}, ${2:ULONG index})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release an allocated palette entry to the free pool. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0314.html"
	},
	{
		"displayText": "ReleaseSemaphore(sigSem)",
		"snippet": "ReleaseSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make signal semaphore available to others.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0228.html"
	},
	{
		"displayText": "ReleaseSemaphoreList(sigSem)",
		"snippet": "ReleaseSemaphoreList(${1:struct List *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a list of semaphores available.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0229.html"
	},
	{
		"displayText": "RemakeDisplay()",
		"snippet": "RemakeDisplay()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remake the entire Intuition display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E0.html"
	},
	{
		"displayText": "RemAssignList(name, lock)",
		"snippet": "RemAssignList(${1:CONST_STRPTR name}, ${2:BPTR lock})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove an entry from a multi-dir assign. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A5.html"
	},
	{
		"displayText": "RemConfigDev(configDev)",
		"snippet": "RemConfigDev(${1:struct ConfigDev *cDev})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a ConfigDev structure from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026B.html"
	},
	{
		"displayText": "RemDevice(device)",
		"snippet": "RemDevice(${1:struct Device *dev})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a device from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022A.html"
	},
	{
		"displayText": "RemDosEntry(dosList)",
		"snippet": "RemDosEntry(${1:struct DosList *list})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Removes a Dos List entry from it's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A6.html"
	},
	{
		"displayText": "RemFont(textFont)",
		"snippet": "RemFont(${1:struct TextFont *font})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a font from the system list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0316.html"
	},
	{
		"displayText": "RemHead(list)",
		"snippet": "RemHead(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Remove the head node from a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022B.html"
	},
	{
		"displayText": "RemIBob(bob, rastPort, viewPort)",
		"snippet": "RemIBob(${1:struct Bob *bob}, ${2:struct RastPort *rp}, ${3:struct ViewPort *vp})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Immediately remove a Bob from the gel list and the RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0317.html"
	},
	{
		"displayText": "RemICRVector(resource, iCRBit, interrupt)",
		"snippet": "RemICRVector(${1:struct Library *resource}, ${2:LONG iCRBit}, ${3:struct Interrupt *intrpt})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Detach an interrupt handler from a CIA bit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CA.html"
	},
	{
		"displayText": "RemIntServer(intNumber, interrupt)",
		"snippet": "RemIntServer(${1:LONG intNumber}, ${2:struct Interrupt *intrpt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove an interrupt server from a server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022C.html"
	},
	{
		"displayText": "RemKBInt(intHandle)",
		"snippet": "RemKBInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a previously installed keyboard interrupt. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0469.html"
	},
	{
		"displayText": "RemLibrary(library)",
		"snippet": "RemLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a library from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022D.html"
	},
	{
		"displayText": "RemMemHandler(memHandler)",
		"snippet": "RemMemHandler(${1:struct Interrupt *memHandler})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove low memory handler from exec. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022E.html"
	},
	{
		"displayText": "RemNamedObject(object, message)",
		"snippet": "RemNamedObject(${1:struct NamedObject *obj}, ${2:struct Message *msg})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a named object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AC.html"
	},
	{
		"displayText": "Remove(node)",
		"snippet": "Remove(${1:struct Node *node})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a node from a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node022F.html"
	},
	{
		"displayText": "RemoveAmigaGuideHost(key, tag1, ...)",
		"snippet": "RemoveAmigaGuideHost(${1:APTR key}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0010.html"
	},
	{
		"displayText": "RemoveAmigaGuideHostA(key, attributes)",
		"snippet": "RemoveAmigaGuideHostA(${1:APTR key}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove a dynamic node host. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0010.html"
	},
	{
		"displayText": "RemoveAppIcon(appIcon)",
		"snippet": "RemoveAppIcon(${1:struct AppIcon *icon})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove an icon from Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C2.html"
	},
	{
		"displayText": "RemoveAppMenuItem(appMenuItem)",
		"snippet": "RemoveAppMenuItem(${1:struct AppMenuItem *item})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove a menu item from Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C3.html"
	},
	{
		"displayText": "RemoveAppWindow(appWindow)",
		"snippet": "RemoveAppWindow(${1:struct AppWindow *win})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove a window from Workbench's list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C4.html"
	},
	{
		"displayText": "RemoveAppWindowDropZone(appWindow, dropZone)",
		"snippet": "RemoveAppWindowDropZone(${1:struct AppWindow *win}, ${2:struct AppWindowDropZone *dZone})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Remove a drop zone from an AppWindow.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C5.html"
	},
	{
		"displayText": "RemoveClass(class)",
		"snippet": "RemoveClass(${1:struct IClass *cl})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make a public boopsi class unavailable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E1.html"
	},
	{
		"displayText": "RemoveCxObj(cxObject)",
		"snippet": "RemoveCxObj(${1:CxObj *obj})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a commodity object from a list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F4.html"
	},
	{
		"displayText": "RemoveDTObject(window, object)",
		"snippet": "RemoveDTObject(${1:struct Window *win}, ${2:Object *obj})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Remove an object from a window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0118.html"
	},
	{
		"displayText": "RemoveGadget(window, gadget)",
		"snippet": "RemoveGadget(${1:struct Window *win}, ${2:struct Gadget *gad})${3:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Remove a gadget from a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E2.html"
	},
	{
		"displayText": "RemoveGList(window, gadget, numGad)",
		"snippet": "RemoveGList(${1:struct Window *win}, ${2:struct Gadget *gad}, ${3:LONG numGad})${4:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Remove a sublist of gadgets from a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E3.html"
	},
	{
		"displayText": "RemPort(port)",
		"snippet": "RemPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a message port from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0230.html"
	},
	{
		"displayText": "RemResource(resource)",
		"snippet": "RemResource(${1:APTR resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a resource from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0231.html"
	},
	{
		"displayText": "RemSegment(segment)",
		"snippet": "RemSegment(${1:struct Segment *seg})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Removes a resident segment from the resident list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A7.html"
	},
	{
		"displayText": "RemSemaphore(sigSem)",
		"snippet": "RemSemaphore(${1:struct SignalSemaphore *sigSem})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a signal semaphore from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0232.html"
	},
	{
		"displayText": "RemTail(list)",
		"snippet": "RemTail(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "struct Node*",
		"description": "Remove the tail node from a list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0233.html"
	},
	{
		"displayText": "RemTask(task)",
		"snippet": "RemTask(${1:struct Task *task})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a task from the system.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0234.html"
	},
	{
		"displayText": "RemTimerInt(intHandle)",
		"snippet": "RemTimerInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a previously installed timer interrupt. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046A.html"
	},
	{
		"displayText": "RemTOF(isrvstr)",
		"snippet": "RemTOF(${1:struct Isrvstr *i})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a task from the VBlank interrupt server chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004A.html"
	},
	{
		"displayText": "RemVBlankInt(intHandle)",
		"snippet": "RemVBlankInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a previously installed vertical blank routine.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046B.html"
	},
	{
		"displayText": "RemVSprite(vSprite)",
		"snippet": "RemVSprite(${1:struct VSprite *sprite})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove a VSprite from the current gel list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0318.html"
	},
	{
		"displayText": "Rename(oldName, newName)",
		"snippet": "Rename(${1:CONST_STRPTR oldName}, ${2:CONST_STRPTR newName})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Rename a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A8.html"
	},
	{
		"displayText": "ReplyAmigaGuideMsg(amigaGuideMsg)",
		"snippet": "ReplyAmigaGuideMsg(${1:struct AmigaGuideMsg *msg})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Reply to an AmigaGuide message. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0011.html"
	},
	{
		"displayText": "ReplyMsg(message)",
		"snippet": "ReplyMsg(${1:struct Message *msg})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Put a message to its reply port.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0235.html"
	},
	{
		"displayText": "ReplyPkt(dosPacket, result1, result2)",
		"snippet": "ReplyPkt(${1:struct DosPacket *packet}, ${2:LONG res1}, ${3:LONG res2})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Replies a packet to the person who sent it to you. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01A9.html"
	},
	{
		"displayText": "ReportMouse(switch, window)",
		"snippet": "ReportMouse(${1:BOOL switch}, ${2:struct Window *win})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Tell Intuition whether to report mouse movement.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E4.html"
	},
	{
		"displayText": "Request(requester, window)",
		"snippet": "Request(${1:struct Requester *req}, ${2:struct Window *win})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Activate a requester.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E5.html"
	},
	{
		"displayText": "RequestFile(fileRequester)",
		"snippet": "RequestFile(${1:struct FileRequester *req})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Request user to select files. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node005E.html"
	},
	{
		"displayText": "ResetBattClock()",
		"snippet": "ResetBattClock()",
		"type": "function",
		"leftLabel": "void",
		"description": "Reset the clock chip. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0076.html"
	},
	{
		"displayText": "ResetMenuStrip(window, menu)",
		"snippet": "ResetMenuStrip(${1:struct Window *win}, ${2:struct Menu *men})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Re-attach a menu strip to a window. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E6.html"
	},
	{
		"displayText": "RethinkDisplay()",
		"snippet": "RethinkDisplay()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Grand manipulation of the entire Intuition display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E7.html"
	},
	{
		"displayText": "RethinkLayout(gadget, window, requester, refresh)",
		"snippet": "RethinkLayout(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:LONG refresh})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Relayout and render the layout. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node043D.html"
	},
	{
		"displayText": "RL_CloseResource(resourceFile)",
		"snippet": "RL_CloseResource(${1:RESOURCEFILE resfile})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Close and free a resource object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053F.html"
	},
	{
		"displayText": "RL_DisposeGroup(resourceFile, object)",
		"snippet": "RL_DisposeGroup(${1:RESOURCEFILE resfile}, ${2:Object **obj})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Dispose a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0540.html"
	},
	{
		"displayText": "RL_DisposeObject(resourceFile, object)",
		"snippet": "RL_DisposeObject(${1:RESOURCEFILE resfile}, ${2:Object *obj})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Dispose an object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0541.html"
	},
	{
		"displayText": "RL_GetObjectArray(resourceFile, object, id)",
		"snippet": "RL_GetObjectArray(${1:RESOURCEFILE resfile}, ${2:Object *obj}, ${3:RESOURCEID id})${4:}",
		"type": "function",
		"leftLabel": "Object**",
		"description": "Get a pointer to a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0542.html"
	},
	{
		"displayText": "RL_NewGroup(resourceFile, id, ...)",
		"snippet": "RL_NewGroup(${1:RESOURCEFILE resfile}, ${2:RESOURCEID id}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "Object**",
		"description": "Allocate a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0543.html"
	},
	{
		"displayText": "RL_NewGroupA(resourceFile, id, tagList)",
		"snippet": "RL_NewGroupA(${1:RESOURCEFILE resfile}, ${2:RESOURCEID id}, ${3:struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "Object**",
		"description": "Allocate a group of objects. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0543.html"
	},
	{
		"displayText": "RL_NewObject(resourceFile, resid, ...)",
		"snippet": "RL_NewObject(${1:RESOURCEFILE resfile}, ${2:RESOURCEID resid}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create a new object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0544.html"
	},
	{
		"displayText": "RL_NewObjectA(resourceFile, resid, tags)",
		"snippet": "RL_NewObjectA(${1:RESOURCEFILE resfile}, ${2:RESOURCEID resid}, ${3:struct TagItem *tags})${4:}",
		"type": "function",
		"leftLabel": "Object*",
		"description": "Create a new object. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0544.html"
	},
	{
		"displayText": "RL_OpenResource(resourceFile, screen, catalog)",
		"snippet": "RL_OpenResource(${1:APTR resource}, ${2:struct Screen *scr}, ${3:struct Catalog *catalog})${4:}",
		"type": "function",
		"leftLabel": "RESOURCEFILE",
		"description": "Open a resource. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0545.html"
	},
	{
		"displayText": "RL_SetResourceScreen(resourceFile, screen)",
		"snippet": "RL_SetResourceScreen(${1:RESOURCEFILE resfile}, ${2:struct Screen *scr})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets or clears the screen. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0546.html"
	},
	{
		"displayText": "RouteCxMsg(cxMessage, cxObject)",
		"snippet": "RouteCxMsg(${1:CxMsg *cxm}, ${2:CxObj *co})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the next destination of a commodity message. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F5.html"
	},
	{
		"displayText": "RunCommand(seg, stack, paramptr, paramlen)",
		"snippet": "RunCommand(${1:BPTR seg}, ${2:LONG stack}, ${3:CONST_STRPTR paramptr}, ${4:LONG paramlen})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Runs a program using the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AA.html"
	},
	{
		"displayText": "SameDevice(lock1, lock2)",
		"snippet": "SameDevice(${1:BPTR lock1}, ${2:BPTR lock2})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Are two locks are on partitions of the device?. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AB.html"
	},
	{
		"displayText": "SameLock(lock1, lock2)",
		"snippet": "SameLock(${1:BPTR lock1}, ${2:BPTR lock2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Returns whether two locks are on the same object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AC.html"
	},
	{
		"displayText": "ScalerDiv(factor, numerator, denominator)",
		"snippet": "ScalerDiv(${1:ULONG factor}, ${2:ULONG numerator}, ${3:ULONG denominator})${4:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Get the scaling result that BitMapScale would. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0319.html"
	},
	{
		"displayText": "ScreenDepth(screen, flags, reserved)",
		"snippet": "ScreenDepth(${1:struct Screen *scr}, ${2:ULONG flags}, NULL)${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Depth arrange a screen with extra control. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E8.html"
	},
	{
		"displayText": "ScreenPosition(screen, flags, x1, y1, x2, y2)",
		"snippet": "ScreenPosition(${1:struct Screen *scr}, ${2:ULONG flags}, ${3:LONG x1}, ${4:LONG y1}, ${5:LONG x2}, ${6:LONG y2})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move screens with greater control. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03E9.html"
	},
	{
		"displayText": "ScreenToBack(screen)",
		"snippet": "ScreenToBack(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Send the specified screen to the back of the display.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EA.html"
	},
	{
		"displayText": "ScreenToFront(screen)",
		"snippet": "ScreenToFront(${1:struct Screen *scr})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Make the specified screen the frontmost.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EB.html"
	},
	{
		"displayText": "SCROLLER_GetClass()",
		"snippet": "SCROLLER_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the scroller class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0554.html"
	},
	{
		"displayText": "ScrollLayer(dummy, layer, dx, dy)",
		"snippet": "ScrollLayer(0L, ${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Scroll around in a superbitmap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042E.html"
	},
	{
		"displayText": "ScrollRaster(rastPort, dx, dy, xMin, yMin, xMax, yMax)",
		"snippet": "ScrollRaster(${1:struct RastPort *rp}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG xMin}, ${5:LONG yMin}, ${6:LONG xMax}, ${7:LONG yMax})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move bits in rectangle in raster.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031A.html"
	},
	{
		"displayText": "ScrollRasterBF(rastPort, dx, dy, xMin, yMin, xMax, yMax)",
		"snippet": "ScrollRasterBF(${1:struct RastPort *rp}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG xMin}, ${5:LONG yMin}, ${6:LONG xMax}, ${7:LONG yMax})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Move bits in rectangle in raster, filling with EraseRect(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031B.html"
	},
	{
		"displayText": "ScrollVPort(viewPort)",
		"snippet": "ScrollVPort(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Reinterpret RasInfo in ViewPort to reflect the current Offset values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031C.html"
	},
	{
		"displayText": "ScrollWindowRaster(window, dx, dy, xMin, yMin, xMax, yMax)",
		"snippet": "ScrollWindowRaster(${1:struct Window *win}, ${2:LONG dx}, ${3:LONG dy}, ${4:LONG xMin}, ${5:LONG yMin}, ${6:LONG xMax}, ${7:LONG yMax})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Intuition-friendly ScrollRasterBF(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EC.html"
	},
	{
		"displayText": "SDivMod32(dividend, divisor)",
		"snippet": "SDivMod32(${1:LONG dividend}, ${2:LONG divisor})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "signed 32 by 32 bit division and modulus. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AD.html"
	},
	{
		"displayText": "Seek(fileHandle, position, offset)",
		"snippet": "Seek(${1:BPTR fh}, ${2:LONG position}, ${3:LONG offset})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the current position for reading and writing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AD.html"
	},
	{
		"displayText": "SelectInput(fileHandle)",
		"snippet": "SelectInput(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Select a filehandle as the default input channel. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AE.html"
	},
	{
		"displayText": "SelectOutput(fileHandle)",
		"snippet": "SelectOutput(${1:BPTR fh})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Select a filehandle as the default output channel. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01AF.html"
	},
	{
		"displayText": "SendAmigaGuideCmd(handle, command, tag1, ...)",
		"snippet": "SendAmigaGuideCmd(${1:APTR handle}, ${2:STRPTR cmd}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Send a command string to AmigaGuide. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0012.html"
	},
	{
		"displayText": "SendAmigaGuideCmdA(handle, command, attributes)",
		"snippet": "SendAmigaGuideCmdA(${1:APTR handle}, ${2:STRPTR cmd}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Send a command string to AmigaGuide. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0012.html"
	},
	{
		"displayText": "SendAmigaGuideContext(handle, tag1, ...)",
		"snippet": "SendAmigaGuideContext(${1:APTR handle}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Align an AmigaGuide system on the context ID. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0013.html"
	},
	{
		"displayText": "SendAmigaGuideContextA(handle, attributes)",
		"snippet": "SendAmigaGuideContextA(${1:APTR handle}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Align an AmigaGuide system on the context ID. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0013.html"
	},
	{
		"displayText": "SendIO(ioRequest)",
		"snippet": "SendIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Initiate an I/O command.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0236.html"
	},
	{
		"displayText": "SendPkt(dosPacket, port, replyPort)",
		"snippet": "SendPkt(${1:struct DosPacket *dp}, ${2:struct MsgPort *port}, ${3:struct MsgPort *replyPort})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sends a packet to a handler. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B0.html"
	},
	{
		"displayText": "SetABPenDrMd(rastPort, aPen, bPen, drawMode)",
		"snippet": "SetABPenDrMd(${1:struct RastPort *rp}, ${2:ULONG aPen}, ${3:ULONG bPen}, ${4:ULONG drawMode})${5:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set pen colors and draw mode for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031D.html"
	},
	{
		"displayText": "SetAmigaGuideAttrs(handle, tag1, ...)",
		"snippet": "SetAmigaGuideAttrs(${1:APTR handle}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set an AmigaGuide attribute. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0014.html"
	},
	{
		"displayText": "SetAmigaGuideAttrsA(handle, attributes)",
		"snippet": "SetAmigaGuideAttrsA(${1:APTR handle}, ${2:struct TagItem *attrs})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set an AmigaGuide attribute. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0014.html"
	},
	{
		"displayText": "SetAmigaGuideContext(handle, id, tag1, ...)",
		"snippet": "SetAmigaGuideContext(${1:APTR handle}, ${2:ULONG id}, ${3:Tag tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the context ID for an AmigaGuide system. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0015.html"
	},
	{
		"displayText": "SetAmigaGuideContextA(handle, id, attributes)",
		"snippet": "SetAmigaGuideContextA(${1:APTR handle}, ${2:ULONG id}, ${3:struct TagItem *attrs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the context ID for an AmigaGuide system. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0015.html"
	},
	{
		"displayText": "SetAPen(rastPort, pen)",
		"snippet": "SetAPen(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the primary pen for a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031E.html"
	},
	{
		"displayText": "SetArgStr(string)",
		"snippet": "SetArgStr(${1:CONST_STRPTR str})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the arguments for the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B1.html"
	},
	{
		"displayText": "SetAttrs(object, tag1, ...)",
		"snippet": "SetAttrs(${1:APTR obj}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for an object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03ED.html"
	},
	{
		"displayText": "SetAttrsA(object, tagList)",
		"snippet": "SetAttrsA(${1:APTR obj}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for an object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03ED.html"
	},
	{
		"displayText": "SetBPen(rastPort, pen)",
		"snippet": "SetBPen(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set secondary pen for a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node031F.html"
	},
	{
		"displayText": "SetChipRev(chipRev)",
		"snippet": "SetChipRev(${1:ULONG chipRev})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Turns on the features of a Chip Set. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0320.html"
	},
	{
		"displayText": "SetChooserNodeAttrs(node, ...)",
		"snippet": "SetChooserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C6.html"
	},
	{
		"displayText": "SetChooserNodeAttrsA(node, tags)",
		"snippet": "SetChooserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a Chooser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00C6.html"
	},
	{
		"displayText": "SetClickTabNodeAttrs(node, ...)",
		"snippet": "SetClickTabNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D2.html"
	},
	{
		"displayText": "SetClickTabNodeAttrsA(node, tags)",
		"snippet": "SetClickTabNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ClickTab node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00D2.html"
	},
	{
		"displayText": "SetCollision(vectorNum, routine)",
		"snippet": "SetCollision(${1:ULONG vectorNum}, ${2:void (*routine})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set a pointer to a user collision routine.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0321.html"
	},
	{
		"displayText": "SetComment(name, comment)",
		"snippet": "SetComment(${1:CONST_STRPTR name}, ${2:CONST_STRPTR comment})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change a files' comment string.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B2.html"
	},
	{
		"displayText": "SetConductorState(player, state, time)",
		"snippet": "SetConductorState(${1:struct Player *player}, ${2:ULONG state}, ${3:LONG time})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the play state of a player's conductor. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053A.html"
	},
	{
		"displayText": "SetConsoleTask(task)",
		"snippet": "SetConsoleTask(${1:CONST struct MsgPort *task})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Sets the default console for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B3.html"
	},
	{
		"displayText": "SetCurrentBinding(currentBinding, bindingSize)",
		"snippet": "SetCurrentBinding(${1:struct CurrentBinding *currentBinding}, ${2:ULONG bindingSize})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sets static board configuration area.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026C.html"
	},
	{
		"displayText": "SetCurrentDirName(name)",
		"snippet": "SetCurrentDirName(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the directory name for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B4.html"
	},
	{
		"displayText": "SetCxObjPri(cxObject, priority)",
		"snippet": "SetCxObjPri(${1:CxObj *co}, ${2:LONG pri})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the priority of a commodity object. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F6.html"
	},
	{
		"displayText": "SetDefaultPubScreen(name)",
		"snippet": "SetDefaultPubScreen(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Choose a new default public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EE.html"
	},
	{
		"displayText": "SetDMRequest(window, requester)",
		"snippet": "SetDMRequest(${1:struct Window *win}, ${2:struct Requester *req})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the DMRequest of a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03EF.html"
	},
	{
		"displayText": "SetDrMd(restPort, drawMode)",
		"snippet": "SetDrMd(${1:struct RastPort *rp}, ${2:ULONG drawMode})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set drawing mode for a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0322.html"
	},
	{
		"displayText": "SetDTAttrs(object, window, requester, tag1, ...)",
		"snippet": "SetDTAttrs(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:Tag tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0119.html"
	},
	{
		"displayText": "SetDTAttrsA(object, window, requester, attributes)",
		"snippet": "SetDTAttrsA(${1:Object *obj}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:struct TagItem *attrs})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set attributes for an object. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0119.html"
	},
	{
		"displayText": "SetEditHook(hook)",
		"snippet": "SetEditHook(${1:struct Hook *hook})${2:}",
		"type": "function",
		"leftLabel": "struct Hook*",
		"description": "Set global processing for string gadgets. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F0.html"
	},
	{
		"displayText": "SetExcept(newSignals, signalSet)",
		"snippet": "SetExcept(${1:ULONG newSignals}, ${2:ULONG signalSet})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Define certain signals to cause exceptions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0237.html"
	},
	{
		"displayText": "SetFileDate(name, date)",
		"snippet": "SetFileDate(${1:CONST_STRPTR name}, ${2:CONST struct DateStamp *date})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the modification date for a file or dir. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B5.html"
	},
	{
		"displayText": "SetFileSize(fileHandle, pos, mode)",
		"snippet": "SetFileSize(${1:BPTR fh}, ${2:LONG pos}, ${3:LONG mode})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the size of a file. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B6.html"
	},
	{
		"displayText": "SetFileSysTask(task)",
		"snippet": "SetFileSysTask(${1:CONST struct MsgPort *task})${2:}",
		"type": "function",
		"leftLabel": "struct MsgPort*",
		"description": "Sets the default filesystem for the process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B7.html"
	},
	{
		"displayText": "SetFilter(filter, text)",
		"snippet": "SetFilter(${1:CxObj *filter}, ${2:CONST_STRPTR text})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the matching condition of a commodity filter. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F7.html"
	},
	{
		"displayText": "SetFilterIX(filter, ix)",
		"snippet": "SetFilterIX(${1:CxObj *filter}, ${2:CONST IX *ix})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change the matching condition of a commodity filter. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F8.html"
	},
	{
		"displayText": "SetFont(restPort, textFont)",
		"snippet": "SetFont(${1:struct RastPort *rp}, ${2:CONST struct TextFont *font})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the text font and attributes in a RastPort.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0323.html"
	},
	{
		"displayText": "SetFunction(library, funcOffset, newFunction)",
		"snippet": "SetFunction(${1:struct Library *lib}, ${2:LONG funcOffset}, ${3:APTR newFunction})${4:}",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Change a function vector in a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0238.html"
	},
	{
		"displayText": "SetGadgetAttrs(gadget, window, requester, tag1, ...)",
		"snippet": "SetGadgetAttrs(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:ULONG tag1}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for a boopsi gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F1.html"
	},
	{
		"displayText": "SetGadgetAttrsA(gadget, window, requester, tagList)",
		"snippet": "SetGadgetAttrsA(${1:struct Gadget *gad}, ${2:struct Window *win}, ${3:struct Requester *req}, ${4:CONST struct TagItem *tagList})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Specify attribute values for a boopsi gadget. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F1.html"
	},
	{
		"displayText": "SetICR(resource, mask)",
		"snippet": "SetICR(${1:struct Library *resource}, ${2:LONG mask})${3:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Cause, clear and sample ICR interrupts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00CB.html"
	},
	{
		"displayText": "SetInfo(glyphEngine, tag1, ...)",
		"snippet": "SetInfo(${1:struct GlyphEngine *ge}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008A.html"
	},
	{
		"displayText": "SetInfoA(glyphEngine, tagList)",
		"snippet": "SetInfoA(${1:struct GlyphEngine *ge}, ${2:struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set font and/or glyph metrics.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node008A.html"
	},
	{
		"displayText": "SetIntVector(intNumber, interrupt)",
		"snippet": "SetIntVector(${1:LONG intNumber}, ${2:CONST struct Interrupt *interrupt})${3:}",
		"type": "function",
		"leftLabel": "struct Interrupt*",
		"description": "Set a new handler for a system interrupt vector.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0239.html"
	},
	{
		"displayText": "SetIoErr(result)",
		"snippet": "SetIoErr(${1:LONG result})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the value returned by IoErr(). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B8.html"
	},
	{
		"displayText": "SetJoyPortAttrs(portNumber, tag1, ...)",
		"snippet": "SetJoyPortAttrs(${1:ULONG portNumber}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the attributes of a port. (V40.27)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046C.html"
	},
	{
		"displayText": "SetJoyPortAttrsA(portNumber, tagList)",
		"snippet": "SetJoyPortAttrsA(${1:ULONG portNumber}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Change the attributes of a port. (V40.27)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046C.html"
	},
	{
		"displayText": "SetKeyMapDefault(keyMap)",
		"snippet": "SetKeyMapDefault(${1:CONST struct KeyMap *km})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the current default keymap. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0413.html"
	},
	{
		"displayText": "SetListBrowserNodeAttrs(node, ...)",
		"snippet": "SetListBrowserNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044B.html"
	},
	{
		"displayText": "SetListBrowserNodeAttrsA(node, tags)",
		"snippet": "SetListBrowserNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044B.html"
	},
	{
		"displayText": "SetLocalItemPurge(localItem, purgeHook)",
		"snippet": "SetLocalItemPurge(${1:struct LocalContextItem *localItem}, ${2:CONST struct Hook *purgeHook})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set purge vector for a local context item. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0379.html"
	},
	{
		"displayText": "SetMaxPen(rastPort, maxpen)",
		"snippet": "SetMaxPen(${1:struct RastPort *rp}, ${2:ULONG maxpen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set maximum pen value for a rastport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0324.html"
	},
	{
		"displayText": "SetMenuStrip(window, menu)",
		"snippet": "SetMenuStrip(${1:struct Window *win}, ${2:struct Menu *menu})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Attach a menu strip to a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F2.html"
	},
	{
		"displayText": "SetMode(fileHandle, mode)",
		"snippet": "SetMode(${1:BPTR fh}, ${2:LONG mode})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set the current behavior of a handler. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01B9.html"
	},
	{
		"displayText": "SetMouseQueue(window, queueLength)",
		"snippet": "SetMouseQueue(${1:struct Window *win}, ${2:ULONG queueLength})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change limit on pending mouse messages. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F3.html"
	},
	{
		"displayText": "SetNVProtection(appName, itemName, mask, killRequesters)",
		"snippet": "SetNVProtection(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:LONG mask}, ${4:LONG killRequesters})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the protection flags. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E1.html"
	},
	{
		"displayText": "SetOutlinePen(rastPort, pen)",
		"snippet": "SetOutlinePen(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set the Outline Pen value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0326.html"
	},
	{
		"displayText": "SetOwner(name, owner_info)",
		"snippet": "SetOwner(${1:CONST_STRPTR name}, ${2:LONG owner_info})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set owner information for a file or directory. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BA.html"
	},
	{
		"displayText": "SetPageGadgetAttrs(gadget, object, window, requester, ...)",
		"snippet": "SetPageGadgetAttrs(${1:struct Gadget *gad}, ${2:Object *obj}, ${3:struct Window *win}, ${4:struct Requester *req}, ${5:...})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set gadget attributes in a paged layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E7.html"
	},
	{
		"displayText": "SetPageGadgetAttrsA(gadget, object, window, requester, tags)",
		"snippet": "SetPageGadgetAttrsA(${1:struct Gadget *gad}, ${2:Object *obj}, ${3:struct Window *win}, ${4:struct Requester *req}, ${5:struct TagItem *tags})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set gadget attributes in a paged layout.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E7.html"
	},
	{
		"displayText": "SetPlayerAttrs(player, tag1, ...)",
		"snippet": "SetPlayerAttrs(${1:struct Player *player}, ${2:Tag tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the attributes of a player. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053B.html"
	},
	{
		"displayText": "SetPointer(window, pointer, height, width, xOffset, yOffset)",
		"snippet": "SetPointer(${1:struct Window *win}, ${2:UWORD *pointer}, ${3:LONG height}, ${4:LONG width}, ${5:LONG xOffset}, ${6:LONG yOffset})${7:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Specify a pointer sprite image for a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F4.html"
	},
	{
		"displayText": "SetPrefs(preferences, size, inform)",
		"snippet": "SetPrefs(${1:CONST struct Preferences *prefs}, ${2:LONG size}, ${3:LONG inform})${4:}",
		"type": "function",
		"leftLabel": "struct Preferences*",
		"description": "Set Intuition preferences data.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F5.html"
	},
	{
		"displayText": "SetProgramDir(lock)",
		"snippet": "SetProgramDir(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "BPTR",
		"description": "Sets the directory returned by GetProgramDir. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BB.html"
	},
	{
		"displayText": "SetProgramName(name)",
		"snippet": "SetProgramName(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the name of the program being run. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BC.html"
	},
	{
		"displayText": "SetPrompt(name)",
		"snippet": "SetPrompt(${1:CONST_STRPTR name})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets the CLI/shell prompt for the current process. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BD.html"
	},
	{
		"displayText": "SetProtection(name, protect)",
		"snippet": "SetProtection(${1:CONST_STRPTR name}, ${2:LONG protect})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set protection for a file or directory.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BE.html"
	},
	{
		"displayText": "SetPubScreenModes(modes)",
		"snippet": "SetPubScreenModes(${1:ULONG modes})${2:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Establish global public screen behavior. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F6.html"
	},
	{
		"displayText": "SetRadioButtonNodeAttrs(node, ...)",
		"snippet": "SetRadioButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0520.html"
	},
	{
		"displayText": "SetRadioButtonNodeAttrsA(node, tags)",
		"snippet": "SetRadioButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a RadioButton node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0520.html"
	},
	{
		"displayText": "SetRast(rastPort, pen)",
		"snippet": "SetRast(${1:struct RastPort *rp}, ${2:ULONG pen})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set an entire drawing area to a specified color.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0327.html"
	},
	{
		"displayText": "SetRexxVar(rexxmsg, name, value, length)",
		"snippet": "SetRexxVar(${1:struct RexxMsg *msg}, ${2:CONST_STRPTR name}, ${3:CONST_STRPTR value}, ${4:LONG length})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Sets the value of a variable of a running ARexx program.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004B.html"
	},
	{
		"displayText": "SetRGB32(viewPort, colorReg, r, g, b)",
		"snippet": "SetRGB32(${1:struct ViewPort *vp}, ${2:ULONG cReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this Viewport. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0328.html"
	},
	{
		"displayText": "SetRGB32CM(colorMap, colorReg, r, g, b)",
		"snippet": "SetRGB32CM(${1:struct ColorMap *cm}, ${2:ULONG cReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this ColorMap. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0329.html"
	},
	{
		"displayText": "SetRGB4(viewPort, colorReg, r, g, b)",
		"snippet": "SetRGB4(${1:struct ViewPort *vp}, ${2:LONG colorReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032A.html"
	},
	{
		"displayText": "SetRGB4CM(colorMap, colorReg, r, g, b)",
		"snippet": "SetRGB4CM(${1:struct ColorMap *cm}, ${2:LONG colorReg}, ${3:ULONG r}, ${4:ULONG g}, ${5:ULONG b})${6:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set one color register for this ColorMap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032B.html"
	},
	{
		"displayText": "SetSignal(newSignals, signalSet)",
		"snippet": "SetSignal(${1:ULONG newSignals}, ${2:ULONG signalSet})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Define the state of this task's signals.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023A.html"
	},
	{
		"displayText": "SetSoftStyle(rastPort, style, enable)",
		"snippet": "SetSoftStyle(${1:struct RastPort *rp}, ${2:ULONG style}, ${3:ULONG enable})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set the soft style of the current font.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032D.html"
	},
	{
		"displayText": "SetSpeedButtonNodeAttrs(node, ...)",
		"snippet": "SetSpeedButtonNodeAttrs(${1:struct Node *node}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056C.html"
	},
	{
		"displayText": "SetSpeedButtonNodeAttrsA(node, tags)",
		"snippet": "SetSpeedButtonNodeAttrsA(${1:struct Node *node}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set attributes of a SpeedBar node. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056C.html"
	},
	{
		"displayText": "SetSR(newSR, mask)",
		"snippet": "SetSR(${1:ULONG newSR}, ${2:ULONG mask})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Get and/or set processor status register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023B.html"
	},
	{
		"displayText": "SetSuperAttrs(class, object, tag1, ...)",
		"snippet": "SetSuperAttrs(${1:struct IClass *cl}, ${2:Object *obj}, ${3:ULONG tag1}, ${4:...})${5:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Invoke OM_SET method on superclass with varargs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004C.html"
	},
	{
		"displayText": "SetTaskPri(task, priority)",
		"snippet": "SetTaskPri(${1:struct Task *task}, ${2:LONG priority})${3:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Get and set the priority of a task.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023C.html"
	},
	{
		"displayText": "SetTranslate(translator, events)",
		"snippet": "SetTranslate(${1:CxObj *translator}, ${2:struct InputEvent *events})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Replace a translator object's translation list. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node00F9.html"
	},
	{
		"displayText": "SetVar(name, buffer, size, flags)",
		"snippet": "SetVar(${1:CONST_STRPTR name}, ${2:CONST_STRPTR buffer}, ${3:LONG size}, ${4:LONG flags})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Sets a local or environment variable. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01BF.html"
	},
	{
		"displayText": "SetVBuf(fileHandle, buffer, type, size)",
		"snippet": "SetVBuf(${1:BPTR fh}, ${2:STRPTR buf}, ${3:LONG type}, ${4:LONG size})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Set buffering modes and size. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C0.html"
	},
	{
		"displayText": "SetWindowPointer(window, tag1, ...)",
		"snippet": "SetWindowPointer(${1:struct Window *win}, ${2:ULONG tag1}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Select a pointer for your window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F7.html"
	},
	{
		"displayText": "SetWindowPointerA(window, tagList)",
		"snippet": "SetWindowPointerA(${1:struct Window *win}, ${2:CONST struct TagItem *tagList})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Select a pointer for your window. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F7.html"
	},
	{
		"displayText": "SetWindowTitles(window, windowTitle, screenTitle)",
		"snippet": "SetWindowTitles(${1:struct Window *win}, ${2:CONST_STRPTR windowTitle}, ${3:CONST_STRPTR screenTitle})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the window's titles for both window and screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F8.html"
	},
	{
		"displayText": "SetWriteMask(rastPort, mask)",
		"snippet": "SetWriteMask(${1:struct RastPort *rp}, ${2:ULONG mask})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Set the pixel write mask value for a RastPort. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032E.html"
	},
	{
		"displayText": "ShowAllListBrowserChildren(list)",
		"snippet": "ShowAllListBrowserChildren(${1:struct List *list})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Show all children in a ListBrowser.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044C.html"
	},
	{
		"displayText": "ShowListBrowserNodeChildren(node, depth)",
		"snippet": "ShowListBrowserNodeChildren(${1:struct Node *node}, ${2:LONG depth})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Show children of a ListBrowser node.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node044D.html"
	},
	{
		"displayText": "ShowTitle(screen, showIt)",
		"snippet": "ShowTitle(${1:struct Screen *scr}, ${2:LONG showIt})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the screen title bar display mode.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03F9.html"
	},
	{
		"displayText": "Signal(task, signalSet)",
		"snippet": "Signal(${1:struct Task *task}, ${2:ULONG signalSet})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Signal a task.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023D.html"
	},
	{
		"displayText": "SizeLayer(dummy, layer, dx, dy)",
		"snippet": "SizeLayer(0L, ${1:struct Layer *layer}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the size of this nonbackdrop layer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node042F.html"
	},
	{
		"displayText": "SizeWindow(window, dx, dy)",
		"snippet": "SizeWindow(${1:struct Window *win}, ${2:LONG dx}, ${3:LONG dy})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to size a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FA.html"
	},
	{
		"displayText": "SMult32(arg1, arg2)",
		"snippet": "SMult32(${1:LONG arg1}, ${2:LONG arg2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "signed 32 by 32 bit multiply with 32 bit result. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AE.html"
	},
	{
		"displayText": "SMult64(arg1, arg2)",
		"snippet": "SMult64(${1:LONG arg1}, ${2:LONG arg2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "signed 32 by 32 bit multiply with 64 bit result. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05AF.html"
	},
	{
		"displayText": "SortGList(rastPort)",
		"snippet": "SortGList(${1:struct RastPort *rp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Sort the current gel list, ordering its y,x coordinates.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node032F.html"
	},
	{
		"displayText": "SPAbs(parm)",
		"snippet": "SPAbs(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the absolute value of the fast floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0471.html"
	},
	{
		"displayText": "SPAcos(parm)",
		"snippet": "SPAcos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the arccosine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BC.html"
	},
	{
		"displayText": "SPAdd(leftParm, rightParm)",
		"snippet": "SPAdd(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Add two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0472.html"
	},
	{
		"displayText": "SPAsin(parm)",
		"snippet": "SPAsin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the arcsine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BD.html"
	},
	{
		"displayText": "SPAtan(parm)",
		"snippet": "SPAtan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the arctangent of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BE.html"
	},
	{
		"displayText": "SPCeil(parm)",
		"snippet": "SPCeil(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Ceil function of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0473.html"
	},
	{
		"displayText": "SPCmp(leftParm, rightParm)",
		"snippet": "SPCmp(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compares two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0474.html"
	},
	{
		"displayText": "SPCos(parm)",
		"snippet": "SPCos(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the cosine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04BF.html"
	},
	{
		"displayText": "SPCosh(parm)",
		"snippet": "SPCosh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the hyperbolic cosine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C0.html"
	},
	{
		"displayText": "SPDiv(leftParm, rightParm)",
		"snippet": "SPDiv(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Divide two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0475.html"
	},
	{
		"displayText": "SPEEDBAR_GetClass()",
		"snippet": "SPEEDBAR_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the speedbar class. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0568.html"
	},
	{
		"displayText": "SPExp(parm)",
		"snippet": "SPExp(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the exponential (e**X) of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C1.html"
	},
	{
		"displayText": "SPFieee(parm)",
		"snippet": "SPFieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert single precision ieee to FFP number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C2.html"
	},
	{
		"displayText": "SPFix(parm)",
		"snippet": "SPFix(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert fast floating point number to integer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0476.html"
	},
	{
		"displayText": "SPFloor(parm)",
		"snippet": "SPFloor(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Compute Floor function of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0477.html"
	},
	{
		"displayText": "SPFlt(integer)",
		"snippet": "SPFlt(${1:LONG integer})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert integer number to fast floating point.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0478.html"
	},
	{
		"displayText": "SplitName(name, separator, buf, oldpos, size)",
		"snippet": "SplitName(${1:CONST_STRPTR name}, ${2:ULONG separator}, ${3:STRPTR buf}, ${4:LONG oldpos}, ${5:LONG size})${6:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Splits out a component of a pathname into a buffer. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C1.html"
	},
	{
		"displayText": "SPLog(parm)",
		"snippet": "SPLog(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the natural logarithm of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C3.html"
	},
	{
		"displayText": "SPLog10(parm)",
		"snippet": "SPLog10(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the naperian logarithm(base 10) of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C4.html"
	},
	{
		"displayText": "SPMul(leftParm, rightParm)",
		"snippet": "SPMul(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Multiply two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0479.html"
	},
	{
		"displayText": "SPNeg(parm)",
		"snippet": "SPNeg(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Negate the supplied floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047A.html"
	},
	{
		"displayText": "SPPow(power, arg)",
		"snippet": "SPPow(${1:FLOAT power}, ${2:FLOAT arg})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Raise a number to a power.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C5.html"
	},
	{
		"displayText": "sprintf(buffer, formatString, ...)",
		"snippet": "sprintf(${1:CONST_STRPTR buf}, ${2:CONST_STRPTR fmt}, ${3:...})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Format a C-like string into a string buffer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004D.html"
	},
	{
		"displayText": "SPSin(parm)",
		"snippet": "SPSin(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the sine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C6.html"
	},
	{
		"displayText": "SPSincos(cosResult, parm)",
		"snippet": "SPSincos(${1:FLOAT *cosResult}, ${2:FLOAT parm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the sine and cosine of a number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C7.html"
	},
	{
		"displayText": "SPSinh(parm)",
		"snippet": "SPSinh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the hyperbolic sine of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C8.html"
	},
	{
		"displayText": "SPSqrt(parm)",
		"snippet": "SPSqrt(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the square root of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04C9.html"
	},
	{
		"displayText": "SPSub(leftParm, rightParm)",
		"snippet": "SPSub(${1:FLOAT leftParm}, ${2:FLOAT rightParm})${3:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Subtract two floating point numbers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047B.html"
	},
	{
		"displayText": "SPTan(parm)",
		"snippet": "SPTan(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the tangent of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CA.html"
	},
	{
		"displayText": "SPTanh(parm)",
		"snippet": "SPTanh(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Obtain the hyperbolic tangent of the floating point number.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CB.html"
	},
	{
		"displayText": "SPTieee(parm)",
		"snippet": "SPTieee(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "FLOAT",
		"description": "Convert FFP number to single precision ieee.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04CC.html"
	},
	{
		"displayText": "SPTst(parm)",
		"snippet": "SPTst(${1:FLOAT parm})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Compares a float against zero (0.0).",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node047C.html"
	},
	{
		"displayText": "StackSwap(newStack)",
		"snippet": "StackSwap(${1:struct StackSwapStruct *newStack})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "EXEC supported method of replacing task's stack. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023E.html"
	},
	{
		"displayText": "StartNotify(notify)",
		"snippet": "StartNotify(${1:struct NotifyRequest *notify})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Starts notification on a file or directory. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C2.html"
	},
	{
		"displayText": "StartTimerInt(intHandle, timeInterval, continuous)",
		"snippet": "StartTimerInt(${1:APTR intHandle}, ${2:ULONG timeInterval}, ${3:LONG continuous})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Start the timer associated with the timer interrupt.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046D.html"
	},
	{
		"displayText": "StopChunk(iffHandle, type, id)",
		"snippet": "StopChunk(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare a chunk which should cause ParseIFF to return. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037A.html"
	},
	{
		"displayText": "StopChunks(iffHandle, propArray, numPairs)",
		"snippet": "StopChunks(${1:struct IFFHandle *iff}, ${2:CONST LONG *propArray}, ${3:LONG numPairs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare many stop chunks at once. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037B.html"
	},
	{
		"displayText": "StopOnExit(iffHandle, type, id)",
		"snippet": "StopOnExit(${1:struct IFFHandle *iff}, ${2:LONG type}, ${3:LONG id})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Declare a stop condition for exiting a chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037C.html"
	},
	{
		"displayText": "StopTimerInt(intHandle)",
		"snippet": "StopTimerInt(${1:APTR intHandle})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Stop the timer associated with the timer interrupt.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046E.html"
	},
	{
		"displayText": "StoreItemInContext(iffHandle, localItem, contextNode)",
		"snippet": "StoreItemInContext(${1:struct IFFHandle *iff}, ${2:struct LocalContextItem *localItem}, ${3:struct ContextNode *contextNode})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Store local context item in given context node. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037D.html"
	},
	{
		"displayText": "StoreLocalItem(iffHandle, localItem, position)",
		"snippet": "StoreLocalItem(${1:struct IFFHandle *iff}, ${2:struct LocalContextItem *localItem}, ${3:LONG position})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Insert a local context item into the context stack. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037E.html"
	},
	{
		"displayText": "StoreNV(appName, itemName, data, length, killRequesters)",
		"snippet": "StoreNV(${1:CONST_STRPTR appName}, ${2:CONST_STRPTR itemName}, ${3:CONST APTR data}, ${4:ULONG length}, ${5:LONG killReqs})${6:}",
		"type": "function",
		"leftLabel": "UWORD",
		"description": "Store data in nonvolatile storage. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node04E2.html"
	},
	{
		"displayText": "StrConvert(locale, string, buffer, bufferSize, type)",
		"snippet": "StrConvert(${1:struct Locale *locale}, ${2:STRPTR str}, ${3:APTR buf}, ${4:ULONG bufSize}, ${5:ULONG type})${6:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Transform a string according to collation information.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045E.html"
	},
	{
		"displayText": "STRING_GetClass()",
		"snippet": "STRING_GetClass()",
		"type": "function",
		"leftLabel": "Class*",
		"description": "Gets the pointer to the string class.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node056F.html"
	},
	{
		"displayText": "Stricmp(string1, string2)",
		"snippet": "Stricmp(${1:CONST_STRPTR str1}, ${2:CONST_STRPTR str2})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Case-insensitive string comparison. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B0.html"
	},
	{
		"displayText": "StripFont(font)",
		"snippet": "StripFont(${1:struct TextFont *font})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Remove the tf_Extension from a font. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0330.html"
	},
	{
		"displayText": "StrnCmp(locale, string1, string2, length, type)",
		"snippet": "StrnCmp(${1:struct Locale *locale}, ${2:STRPTR str1}, ${3:STRPTR str2}, ${4:LONG length}, ${5:ULONG type})${6:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Loadocalized string comparison. (V38)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node045F.html"
	},
	{
		"displayText": "Strnicmp(string1, string2, length)",
		"snippet": "Strnicmp(${1:CONST_STRPTR str1}, ${2:CONST_STRPTR str2}, ${3:LONG length})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Length-limited case-insensitive string compare. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B1.html"
	},
	{
		"displayText": "StrToDate(datetime)",
		"snippet": "StrToDate(${1:struct DateTime *datetime})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Converts a string to a DateStamp. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C3.html"
	},
	{
		"displayText": "StrToLong(string, value)",
		"snippet": "StrToLong(${1:CONST_STRPTR str}, ${2:LONG *value})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "String to long value  (decimal). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C4.html"
	},
	{
		"displayText": "SubTime(destination, source)",
		"snippet": "SubTime(${1:struct timeval *dest}, ${2:CONST struct timeval *src})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Subtract one time request from another.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0579.html"
	},
	{
		"displayText": "SumKickData()",
		"snippet": "SumKickData()",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Compute the checksum for the Kickstart delta list.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node023F.html"
	},
	{
		"displayText": "SumLibrary(library)",
		"snippet": "SumLibrary(${1:struct Library *lib})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Compute and check the checksum on a library.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0240.html"
	},
	{
		"displayText": "SuperState()",
		"snippet": "SuperState()",
		"type": "function",
		"leftLabel": "APTR",
		"description": "Bnter supervisor state with user stack.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0241.html"
	},
	{
		"displayText": "Supervisor(userFunction)",
		"snippet": "Supervisor(${1:ULONG (*CONST userFunction})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Trap to a short supervisor mode function.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0242.html"
	},
	{
		"displayText": "SwapBitsRastPortClipRect(rastPort, clipRect)",
		"snippet": "SwapBitsRastPortClipRect(${1:struct RastPort *rp}, ${2:struct ClipRect *cr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Swap bits between common bitmap and obscured ClipRect.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0430.html"
	},
	{
		"displayText": "SyncSBitMap(layer)",
		"snippet": "SyncSBitMap(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Syncronize Super BitMap with whatever is in the standard Layer bounds.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0331.html"
	},
	{
		"displayText": "SysReqHandler(window, idcmp, waitInput)",
		"snippet": "SysReqHandler(${1:struct Window *win}, ${2:ULONG *idcmp}, ${3:LONG waitInput})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Handle system requester input. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FB.html"
	},
	{
		"displayText": "SystemControl(tag1, ...)",
		"snippet": "SystemControl(${1:Tag tag1}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Method for selectively disabling OS features. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046F.html"
	},
	{
		"displayText": "SystemControlA(tagList)",
		"snippet": "SystemControlA(${1:CONST struct TagItem *tagList})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Method for selectively disabling OS features. (V40)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node046F.html"
	},
	{
		"displayText": "SystemTagList(command, tags)",
		"snippet": "SystemTagList(${1:CONST_STRPTR command}, ${2:CONST struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Have a shell execute a command line. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C5.html"
	},
	{
		"displayText": "TagInArray(tagValue, tagArray)",
		"snippet": "TagInArray(${1:Tag tagValue}, ${2:CONST Tag *tagArray})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Check if a tag value appears in an array of tag values.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B2.html"
	},
	{
		"displayText": "Text(rastPort, string, count)",
		"snippet": "Text(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:ULONG count})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write text characters (no formatting).",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0332.html"
	},
	{
		"displayText": "TextExtent(rastPort, string, count, textExtent)",
		"snippet": "TextExtent(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:LONG count}, ${4:struct TextExtent *te})${5:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Determine raster extent of text data. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0333.html"
	},
	{
		"displayText": "TextFit(rastPort, string, strLen, textExtent, constrainingExtent, strDirection, constrainingBitWidth, constrainingBitHeight)",
		"snippet": "TextFit(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:ULONG strLen}, ${4:CONST struct TextExtent *te}, ${5:CONST struct TextExtent *constExt}, ${6:LONG strDirection}, ${7:ULONG constBitWidth}, ${8:ULONG constBitHeight})${9:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Count characters that will fit in a given extent. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0334.html"
	},
	{
		"displayText": "TextLength(rastPort, string, count)",
		"snippet": "TextLength(${1:struct RastPort *rp}, ${2:CONST_STRPTR str}, ${3:ULONG count})${4:}",
		"type": "function",
		"leftLabel": "WORD",
		"description": "Determine raster length of text data.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0335.html"
	},
	{
		"displayText": "ThinLayerInfo(layerInfo)",
		"snippet": "ThinLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Convert 1.1 LayerInfo to 1.0 LayerInfo.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0431.html"
	},
	{
		"displayText": "TimedDisplayAlert(alertNumber, string, height, time)",
		"snippet": "TimedDisplayAlert(${1:ULONG alertNum}, ${2:CONST_STRPTR str}, ${3:ULONG height}, ${4:ULONG time})${5:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Display an alert with automatic time-out. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FC.html"
	},
	{
		"displayText": "TimeDelay(unit, seconds, microceconds)",
		"snippet": "TimeDelay(${1:LONG unit}, ${2:ULONG secs}, ${3:ULONG microsecs})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Return after a period of time has elapsed.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node004F.html"
	},
	{
		"displayText": "ToLower(character)",
		"snippet": "ToLower(${1:ULONG ch})${2:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Convert a character to lower case. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B3.html"
	},
	{
		"displayText": "ToUpper(character)",
		"snippet": "ToUpper(${1:ULONG ch})${2:}",
		"type": "function",
		"leftLabel": "UBYTE",
		"description": "Convert a character to upper case. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B4.html"
	},
	{
		"displayText": "Translate(inputString, inputLength, outputBuffer, bufferSize)",
		"snippet": "Translate(${1:CONST_STRPTR inputStr}, ${2:LONG inputLen}, ${3:STRPTR outputBuf}, ${4:LONG bufSize})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Convert an English string into narrator device phonemes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0591.html"
	},
	{
		"displayText": "TypeOfMem(address)",
		"snippet": "TypeOfMem(${1:CONST APTR address})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Determine attributes of a given memory address.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0243.html"
	},
	{
		"displayText": "UDivMod32(dividend, divisor)",
		"snippet": "UDivMod32(${1:ULONG dividend}, ${2:ULONG divisor})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "unsigned 32 by 32 bit division and modulus. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B5.html"
	},
	{
		"displayText": "UMult32(arg1, arg2)",
		"snippet": "UMult32(${1:ULONG arg1}, ${2:ULONG arg2})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "unsigned 32 by 32 bit multiply with 32 bit result. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B6.html"
	},
	{
		"displayText": "UMult64(arg1, arg2)",
		"snippet": "UMult64(${1:ULONG arg1}, ${2:ULONG arg2})${3:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "unsigned 32 by 32 bit multiply with 64 bit result. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B7.html"
	},
	{
		"displayText": "UnGetC(fileHandle, character)",
		"snippet": "UnGetC(${1:BPTR fh}, ${2:LONG ch})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Makes a char available for reading again.  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C6.html"
	},
	{
		"displayText": "UnLoadSeg(seglist)",
		"snippet": "UnLoadSeg(${1:BPTR seglist})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unload a seglist previously loaded by LoadSeg().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C7.html"
	},
	{
		"displayText": "UnLock(lock)",
		"snippet": "UnLock(${1:BPTR lock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock a directory or file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C8.html"
	},
	{
		"displayText": "UnlockAmigaGuideBase(key)",
		"snippet": "UnlockAmigaGuideBase(${1:LONG key})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock an AmigaGuide client. (V34)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0016.html"
	},
	{
		"displayText": "UnLockDosList(flags)",
		"snippet": "UnLockDosList(${1:ULONG flags})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlocks the Dos List. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01C9.html"
	},
	{
		"displayText": "UnlockIBase(ibLock)",
		"snippet": "UnlockIBase(${1:ULONG ibLock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Surrender an Intuition lock gotten by LockIBase().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FD.html"
	},
	{
		"displayText": "UnlockLayer(layer)",
		"snippet": "UnlockLayer(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock layer and allow graphics routines to use it.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0432.html"
	},
	{
		"displayText": "UnlockLayerInfo(layerInfo)",
		"snippet": "UnlockLayerInfo(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock the LayerInfo structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0433.html"
	},
	{
		"displayText": "UnlockLayerRom(layer)",
		"snippet": "UnlockLayerRom(${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock Layer structure by ROM(gfx lib) code.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0336.html"
	},
	{
		"displayText": "UnlockLayers(layerInfo)",
		"snippet": "UnlockLayers(${1:struct Layer_Info *li})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock all layers from graphics output.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0434.html"
	},
	{
		"displayText": "UnlockPubScreen(name, screen)",
		"snippet": "UnlockPubScreen(${1:CONST_STRPTR name}, ${2:struct Screen *scr})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release lock on a public screen. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FE.html"
	},
	{
		"displayText": "UnlockPubScreenList()",
		"snippet": "UnlockPubScreenList()",
		"type": "function",
		"leftLabel": "void",
		"description": "Release public screen list semaphore. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node03FF.html"
	},
	{
		"displayText": "UnlockRealTime(lock)",
		"snippet": "UnlockRealTime(${1:APTR lock})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Unlock internal lists. (V37)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node053C.html"
	},
	{
		"displayText": "UnLockRecord(fileHandle, offset, length)",
		"snippet": "UnLockRecord(${1:BPTR fh}, ${2:ULONG offset}, ${3:ULONG length})${4:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Unlock a record. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CA.html"
	},
	{
		"displayText": "UnLockRecords(recArray)",
		"snippet": "UnLockRecords(${1:struct RecordLock *recArray})${2:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Unlock a list of records. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CB.html"
	},
	{
		"displayText": "UnlockRexxBase(resource)",
		"snippet": "UnlockRexxBase(${1:ULONG resource})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a semaphore lock on the RexxBase structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0551.html"
	},
	{
		"displayText": "UnpackStructureTags(pack, packTable, tagList)",
		"snippet": "UnpackStructureTags(${1:CONST APTR pack}, ${2:CONST ULONG *packTable}, ${3:struct TagItem *tagList})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Unpack a structure to values in taglist. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05B8.html"
	},
	{
		"displayText": "UpfrontLayer(dummy, layer)",
		"snippet": "UpfrontLayer(0L, ${1:struct Layer *layer})${2:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Put layer in front of all other layers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0435.html"
	},
	{
		"displayText": "UserState(sysStack)",
		"snippet": "UserState(${1:APTR sysStack})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Return to user state with user stack.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0244.html"
	},
	{
		"displayText": "Vacate(sigSem, bidMsg)",
		"snippet": "Vacate(${1:struct SignalSemaphore *sigSem}, ${2:struct SemaphoreMessage *bidMsg})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Release a bidMessage from Procure(). (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0245.html"
	},
	{
		"displayText": "VBeamPos()",
		"snippet": "VBeamPos()",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Get vertical beam position at this instant.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0337.html"
	},
	{
		"displayText": "VFPrintf(fileHandle, formatString, args)",
		"snippet": "VFPrintf(${1:BPTR fh}, ${2:CONST_STRPTR fmt}, ${3:CONST APTR args})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Format and print a string to a file  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CC.html"
	},
	{
		"displayText": "VFWritef(fileHandle, formatString, args)",
		"snippet": "VFWritef(${1:BPTR fh}, ${2:CONST_STRPTR fmt}, ${3:CONST LONG *args})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write a BCPL formatted string to a file  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CD.html"
	},
	{
		"displayText": "VideoControl(colorMap, tags)",
		"snippet": "VideoControl(${1:struct ColorMap *cm}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Modify the operation of a ViewPort's ColorMap. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0338.html"
	},
	{
		"displayText": "ViewAddress()",
		"snippet": "ViewAddress()",
		"type": "function",
		"leftLabel": "struct View*",
		"description": "Return the address of the Intuition View structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0400.html"
	},
	{
		"displayText": "ViewPortAddress(window)",
		"snippet": "ViewPortAddress(${1:CONST struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "struct ViewPort*",
		"description": "Return the address of a window's viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0401.html"
	},
	{
		"displayText": "VPrintf(formatString, args)",
		"snippet": "VPrintf(${1:CONST_STRPTR fmt}, ${2:CONST APTR args})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Format and print string  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CE.html"
	},
	{
		"displayText": "Wait(signalSet)",
		"snippet": "Wait(${1:ULONG signalSet})${2:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Wait for one or more signals.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0246.html"
	},
	{
		"displayText": "WaitBlit()",
		"snippet": "WaitBlit()",
		"type": "function",
		"leftLabel": "void",
		"description": "Wait for the blitter to be finished before proceeding.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0339.html"
	},
	{
		"displayText": "WaitBOVP(viewPort)",
		"snippet": "WaitBOVP(${1:struct ViewPort *vp})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Wait till vertical beam reached bottom of this viewport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033A.html"
	},
	{
		"displayText": "WaitForChar(fileHandle, timeout)",
		"snippet": "WaitForChar(${1:BPTR fh}, ${2:LONG timeout})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Determine if chars arrive within a time limit.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01CF.html"
	},
	{
		"displayText": "WaitIO(ioRequest)",
		"snippet": "WaitIO(${1:struct IORequest *ioReq})${2:}",
		"type": "function",
		"leftLabel": "BYTE",
		"description": "Wait for completion of an I/O request.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0247.html"
	},
	{
		"displayText": "WaitPkt()",
		"snippet": "WaitPkt()",
		"type": "function",
		"leftLabel": "struct DosPacket*",
		"description": "Waits for a packet to arrive at your pr_MsgPort. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D0.html"
	},
	{
		"displayText": "WaitPort(port)",
		"snippet": "WaitPort(${1:struct MsgPort *port})${2:}",
		"type": "function",
		"leftLabel": "struct Message*",
		"description": "Wait for a given port to be non-empty.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0248.html"
	},
	{
		"displayText": "WaitTOF()",
		"snippet": "WaitTOF()",
		"type": "function",
		"leftLabel": "void",
		"description": "Wait for the top of the next video frame.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033B.html"
	},
	{
		"displayText": "WBenchToBack()",
		"snippet": "WBenchToBack()",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Send the Workbench screen in back of all screens.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0402.html"
	},
	{
		"displayText": "WBenchToFront()",
		"snippet": "WBenchToFront()",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Bring the Workbench screen in front of all screens.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0403.html"
	},
	{
		"displayText": "WBInfo(lock, name, screen)",
		"snippet": "WBInfo(${1:BPTR lock}, ${2:STRPTR name}, ${3:struct Screen *scr})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Bring up the Information requester. (V39)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C6.html"
	},
	{
		"displayText": "WhichLayer(layerInfo, x, y)",
		"snippet": "WhichLayer(${1:struct Layer_Info *li}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "struct Layer*",
		"description": "Return the topmost Layer in a coordinate.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0436.html"
	},
	{
		"displayText": "WindowLimits(window, widthMin, heightMin, widthMax, heightMax)",
		"snippet": "WindowLimits(${1:struct Window *win}, ${2:LONG widthMin}, ${3:LONG heightMin}, ${4:ULONG widthMax}, ${5:ULONG heightMax})${6:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Set the minimum and maximum limits of a window.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0404.html"
	},
	{
		"displayText": "WindowToBack(window)",
		"snippet": "WindowToBack(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to send a window behind others.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0405.html"
	},
	{
		"displayText": "WindowToFront(window)",
		"snippet": "WindowToFront(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Ask Intuition to bring a window to the front.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0406.html"
	},
	{
		"displayText": "WorkbenchControl(name, ...)",
		"snippet": "WorkbenchControl(${1:STRPTR name}, ${2:...})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query or modify Workbench and icon options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C7.html"
	},
	{
		"displayText": "WorkbenchControlA(name, tags)",
		"snippet": "WorkbenchControlA(${1:STRPTR name}, ${2:struct TagItem *tags})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Query or modify Workbench and icon options. (V44)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05C7.html"
	},
	{
		"displayText": "Write(fileHandle, buffer, length)",
		"snippet": "Write(${1:BPTR fh}, ${2:CONST APTR buffer}, ${3:LONG length})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write bytes of data to a file.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D1.html"
	},
	{
		"displayText": "WriteBattClock(time)",
		"snippet": "WriteBattClock(${1:ULONG time})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Set the time on the clock chip. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0077.html"
	},
	{
		"displayText": "WriteBattMem(buffer, offset, length)",
		"snippet": "WriteBattMem(${1:CONST APTR buf}, ${2:ULONG offset}, ${3:ULONG length})${4:}",
		"type": "function",
		"leftLabel": "ULONG",
		"description": "Write a bitstring to nonvolatile ram. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node007C.html"
	},
	{
		"displayText": "WriteChars(buffer, length)",
		"snippet": "WriteChars(${1:CONST_STRPTR buf}, ${2:ULONG buflen})${3:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Writes bytes to the the default output  (buffered). (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node01D2.html"
	},
	{
		"displayText": "WriteChunkBytes(iffHandle, buffer, numBytes)",
		"snippet": "WriteChunkBytes(${1:struct IFFHandle *iff}, ${2:CONST APTR buf}, ${3:LONG numBytes})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write data from a buffer into the current chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node037F.html"
	},
	{
		"displayText": "WriteChunkRecords(iffHandle, buffer, bytesPerRecord, numRecords)",
		"snippet": "WriteChunkRecords(${1:struct IFFHandle *iff}, ${2:CONST APTR buf}, ${3:LONG bytesPerRec}, ${4:LONG numRecs})${5:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write records from a buffer to the current chunk. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0380.html"
	},
	{
		"displayText": "WriteChunkyPixels(rastPort, xStart, yStart, xStop, yStop, array, bytesPerRow)",
		"snippet": "WriteChunkyPixels(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG xStop}, ${5:ULONG yStop}, ${6:CONST UBYTE *array}, ${7:LONG bytesPerRow})${8:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write the pen number of a rectangular array of pixels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033C.html"
	},
	{
		"displayText": "WriteExpansionByte(board, offset, byte)",
		"snippet": "WriteExpansionByte(${1:APTR board}, ${2:ULONG offset}, ${3:ULONG byte})${4:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write a byte nybble by nybble.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node026D.html"
	},
	{
		"displayText": "WritePixel(rastPort, x, y)",
		"snippet": "WritePixel(${1:struct RastPort *rp}, ${2:LONG x}, ${3:LONG y})${4:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Change the pen num of one specific pixel.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033D.html"
	},
	{
		"displayText": "WritePixelArray8(rastPort, xStart, yStart, xStop, yStop, array, tempRP)",
		"snippet": "WritePixelArray8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG xStop}, ${5:ULONG yStop}, ${6:UBYTE *array}, ${7:struct RastPort *tempRP})${8:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write the pen number of a rectangular array of pixels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033E.html"
	},
	{
		"displayText": "WritePixelLine8(rastPort, xStart, yStart, width, array, tempRP)",
		"snippet": "WritePixelLine8(${1:struct RastPort *rp}, ${2:ULONG xStart}, ${3:ULONG yStart}, ${4:ULONG width}, ${5:UBYTE *array}, ${6:struct RastPort *tempRP})${7:}",
		"type": "function",
		"leftLabel": "LONG",
		"description": "Write the pen number of a horizontal line of pixels.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node033F.html"
	},
	{
		"displayText": "WritePotgo(word, mask)",
		"snippet": "WritePotgo(${1:ULONG word}, ${2:ULONG mask})${3:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Write to the hardware potgo register.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0501.html"
	},
	{
		"displayText": "XorRectRegion(region, rectangle)",
		"snippet": "XorRectRegion(${1:struct Region *region}, ${2:CONST struct Rectangle *rectangle})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d XOR operation of rectangle with region.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0340.html"
	},
	{
		"displayText": "XorRegionRegion(srcRegion, destRegion)",
		"snippet": "XorRegionRegion(${1:CONST struct Region *src}, ${2:struct Region *dest})${3:}",
		"type": "function",
		"leftLabel": "BOOL",
		"description": "Perform 2d XOR operation of two regions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0341.html"
	},
	{
		"displayText": "ZipWindow(window)",
		"snippet": "ZipWindow(${1:struct Window *win})${2:}",
		"type": "function",
		"leftLabel": "void",
		"description": "Change window to \"alternate\" position and dimensions. (V36)",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0407.html"
	},
	{
		"displayText": "AChain",
		"type": "struct",
		"description": "DOS pattern matching anchor chain.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D0.html#line98"
	},
	{
		"displayText": "adtFrame",
		"type": "struct",
		"description": "Message struct for anim datatype methods.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D1.html#line206"
	},
	{
		"displayText": "adtNewFormatFrame",
		"type": "struct",
		"description": "Message struct for anim datatype methods.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D1.html#line228"
	},
	{
		"displayText": "adtStart",
		"type": "struct",
		"description": "Message struct for anim datatype methods.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D1.html#line256"
	},
	{
		"displayText": "AmigaGuideHost",
		"type": "struct",
		"description": "Callback hook structure for AmigaGuideHost.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D2.html#line144"
	},
	{
		"displayText": "AmigaGuideMsg",
		"type": "struct",
		"description": "AmigaGuide message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D2.html#line88"
	},
	{
		"displayText": "AnalogSignalInterval",
		"type": "struct",
		"description": "Monitorspec structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D3.html#line151"
	},
	{
		"displayText": "AnchorPath",
		"type": "struct",
		"description": "DOS pattern-matching structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D0.html#line51"
	},
	{
		"displayText": "AnimComp",
		"type": "struct",
		"description": "Animation Component structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D4.html#line167"
	},
	{
		"displayText": "AnimHeader",
		"type": "struct",
		"description": "AnimHeader structure that describes an ANIM frame.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D1.html#line100"
	},
	{
		"displayText": "AnimOb",
		"type": "struct",
		"description": "Anim object data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D4.html#line203"
	},
	{
		"displayText": "apExecute",
		"type": "struct",
		"description": "ARexx AM_EXECUTE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D5.html#line97"
	},
	{
		"displayText": "AppIcon",
		"type": "struct",
		"description": "workbench.library private structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line162"
	},
	{
		"displayText": "AppIconRenderMsg",
		"type": "struct",
		"description": "AppIcon render hook data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line362"
	},
	{
		"displayText": "AppMenu",
		"type": "struct",
		"description": "workbench.library private structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line159"
	},
	{
		"displayText": "AppMenuItem",
		"type": "struct",
		"description": "workbench.library private structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line159"
	},
	{
		"displayText": "AppMessage",
		"type": "struct",
		"description": "Workbench application message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line115"
	},
	{
		"displayText": "AppWindow",
		"type": "struct",
		"description": "workbench.library private structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line160"
	},
	{
		"displayText": "AppWindowDropZone",
		"type": "struct",
		"description": "workbench.library private structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html"
	},
	{
		"displayText": "AppWindowDropZoneMsg",
		"type": "struct",
		"description": "workbench.library private structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line383"
	},
	{
		"displayText": "AreaInfo",
		"type": "struct",
		"description": "AreaInfo structure for a rastport.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D7.html#line20"
	},
	{
		"displayText": "ARexxCmd",
		"type": "struct",
		"description": "Structure for ARexx commands.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D5.html#line113"
	},
	{
		"displayText": "ArticleDisposition",
		"type": "struct",
		"description": "Structure for article retrieval folder routing callback.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D8.html#line115"
	},
	{
		"displayText": "AslPrefs",
		"type": "struct",
		"description": "ASL preferences structure.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "AslSemaphore",
		"type": "struct",
		"description": "ASL semaphore structure.",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "AssignList",
		"type": "struct",
		"description": "Structure for multi-directory assigns.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line406"
	},
	{
		"displayText": "AvailFonts",
		"type": "struct",
		"description": "Structure for available fonts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DA.html#line95"
	},
	{
		"displayText": "AvailFontsHeader",
		"type": "struct",
		"description": "Structure for available fonts buffer.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DA.html#line105"
	},
	{
		"displayText": "AVLNode",
		"type": "struct",
		"description": "",
		"descriptionMoreURL": ""
	},
	{
		"displayText": "BadBlockBlock",
		"type": "struct",
		"description": "Structure for bad-block/good-block pairs lists in RDB.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DB.html#line136"
	},
	{
		"displayText": "BadBlockEntry",
		"type": "struct",
		"description": "Structure for every BadBlock entry pairs in RDB.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DB.html#line131"
	},
	{
		"displayText": "BitMap",
		"type": "struct",
		"description": "gfx.library BitMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DC.html#line45"
	},
	{
		"displayText": "BitMapHeader",
		"type": "struct",
		"description": "Picture datatype Bitmap header structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DD.html#line203"
	},
	{
		"displayText": "BitScaleArgs",
		"type": "struct",
		"description": "Arguments structure for BitMapScale()",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DE.html#line16"
	},
	{
		"displayText": "bltnode",
		"type": "struct",
		"description": "Structure for blit queue.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DF.html#line87"
	},
	{
		"displayText": "Bob",
		"type": "struct",
		"description": "Blitter Object data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D4.html#line138"
	},
	{
		"displayText": "BoolInfo",
		"type": "struct",
		"description": "Data structure needed by an Extended Boolean Gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line513"
	},
	{
		"displayText": "bootblock",
		"type": "struct",
		"description": "HDWrench bootblock structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FA.html"
	},
	{
		"displayText": "BootNode",
		"type": "struct",
		"description": "expansion.library boot node structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E1.html#line32"
	},
	{
		"displayText": "Border",
		"type": "struct",
		"description": "Border structure used by DrawBorder().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line683"
	},
	{
		"displayText": "CardHandle",
		"type": "struct",
		"description": "card.resource data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E2.html#line29"
	},
	{
		"displayText": "CardMemoryMap",
		"type": "struct",
		"description": "card.resource data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E2.html#line44"
	},
	{
		"displayText": "Catalog",
		"type": "struct",
		"description": "locale.library catalog structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E3.html#line245"
	},
	{
		"displayText": "CDInfo",
		"type": "struct",
		"description": "cd.device CD Information structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E4.html#line132"
	},
	{
		"displayText": "CDXL",
		"type": "struct",
		"description": "Item structure for CD Transfer Lists.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E4.html#line225"
	},
	{
		"displayText": "CIA",
		"type": "struct",
		"description": "Complex Interface Adapter structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E5.html#line28"
	},
	{
		"displayText": "ClassLibrary",
		"type": "struct",
		"description": "Library data structure for BOOPSI class libraries.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E6.html#line104"
	},
	{
		"displayText": "ClipboardHandle",
		"type": "struct",
		"description": "Structure returned by OpenClipboard().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E8.html#line147"
	},
	{
		"displayText": "ClipboardUnitPartial",
		"type": "struct",
		"description": "clipboard.device unit structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E9.html#line33"
	},
	{
		"displayText": "ClipHookMsg",
		"type": "struct",
		"description": "clipboard.device hook message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E9.html#line62"
	},
	{
		"displayText": "ClipRect",
		"type": "struct",
		"description": "layers.library private data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EA.html#line56"
	},
	{
		"displayText": "CliProcList",
		"type": "struct",
		"description": "dos.library private data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line273"
	},
	{
		"displayText": "ClockData",
		"type": "struct",
		"description": "Data structure for date conversion routines.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EB.html#line23"
	},
	{
		"displayText": "CollectionItem",
		"type": "struct",
		"description": "iffparse.library Collection node item.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E8.html#line132"
	},
	{
		"displayText": "collTable",
		"type": "struct",
		"description": "gels.library 16 collision procedure addresses.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D4.html#line264"
	},
	{
		"displayText": "ColorFontColors",
		"type": "struct",
		"description": "graphics.library color font colors.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EC.html#line142"
	},
	{
		"displayText": "ColorMap",
		"type": "struct",
		"description": "Viewport ColorMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05ED.html#line142"
	},
	{
		"displayText": "ColorRegister",
		"type": "struct",
		"description": "picture.datatype RGB color structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DD.html#line223"
	},
	{
		"displayText": "ColorSpec",
		"type": "struct",
		"description": "intuition.library RGB color structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line1445"
	},
	{
		"displayText": "ColorTextFont",
		"type": "struct",
		"description": "graphics.library colored Text font structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EC.html#line149"
	},
	{
		"displayText": "CommandLineInterface",
		"type": "struct",
		"description": "Additional data structures for CLI started processes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line313"
	},
	{
		"displayText": "Conductor",
		"type": "struct",
		"description": "realtime.library private data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F0.html#line57"
	},
	{
		"displayText": "ConfigDev",
		"type": "struct",
		"description": "Data structure for installed expansion boards.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F1.html#line31"
	},
	{
		"displayText": "ContextNode",
		"type": "struct",
		"description": "A node associated with a context on the iff_Stack.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E8.html#line84"
	},
	{
		"displayText": "ConUnit",
		"type": "struct",
		"description": "console.device unit structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F2.html#line52"
	},
	{
		"displayText": "copinit",
		"type": "struct",
		"description": "copper.library private structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F3.html#line99"
	},
	{
		"displayText": "CopIns",
		"type": "struct",
		"description": "Copper instructions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F3.html#line23"
	},
	{
		"displayText": "CopList",
		"type": "struct",
		"description": "Copper list structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F3.html#line61"
	},
	{
		"displayText": "CopyBeginMsg",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "CopyDataMsg",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "CopyEndMsg",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "CountryPrefs",
		"type": "struct",
		"description": "locale.library country preference structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F4.html#line31"
	},
	{
		"displayText": "cprlist",
		"type": "struct",
		"description": "Structure of cprlist that points to list that hardware actually executes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F3.html#line54"
	},
	{
		"displayText": "CSource",
		"type": "struct",
		"description": "Input source structure for ReadItem().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F5.html#line60"
	},
	{
		"displayText": "CurrentBinding",
		"type": "struct",
		"description": "Driver binding structure for expansion boards.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F1.html#line60"
	},
	{
		"displayText": "Custom",
		"type": "struct",
		"description": "Custom chipset registers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F6.html#line24"
	},
	{
		"displayText": "DataType",
		"type": "struct",
		"description": "DataType structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F7.html#line174"
	},
	{
		"displayText": "DataTypeHeader",
		"type": "struct",
		"description": "DataType header structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F7.html#line39"
	},
	{
		"displayText": "DateStamp",
		"type": "struct",
		"description": "DateStamp structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F8.html#line51"
	},
	{
		"displayText": "DateTime",
		"type": "struct",
		"description": "Data structure for StrtoDate() and DatetoStr().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F9.html#line24"
	},
	{
		"displayText": "DBufInfo",
		"type": "struct",
		"description": "Double-buffering structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05ED.html#line278"
	},
	{
		"displayText": "DBufPacket",
		"type": "struct",
		"description": "Structure for extra info buffer needed when double-buffering.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D4.html#line234"
	},
	{
		"displayText": "DefaultsArray",
		"type": "struct",
		"description": "hdwrench.library defaults array structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FA.html#line168"
	},
	{
		"displayText": "DeleteBeginMsg",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "DeleteDataMsg",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "DeleteEndMsg",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "Device",
		"type": "struct",
		"description": "device.library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FB.html#line23"
	},
	{
		"displayText": "DeviceData",
		"type": "struct",
		"description": "Printer device data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FC.html#line42"
	},
	{
		"displayText": "DeviceList",
		"type": "struct",
		"description": "Structure representing a volume.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line341"
	},
	{
		"displayText": "DeviceNode",
		"type": "struct",
		"description": "Structure is for a dos device.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FD.html#line95"
	},
	{
		"displayText": "DeviceTData",
		"type": "struct",
		"description": "Device tuple data used by DeviceTuple().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E2.html#line37"
	},
	{
		"displayText": "DevInfo",
		"type": "struct",
		"description": "Device structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line355"
	},
	{
		"displayText": "DevProc",
		"type": "struct",
		"description": "Structure returned by GetDeviceProc().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line420"
	},
	{
		"displayText": "DiagArea",
		"type": "struct",
		"description": "Expansion board diagnostic area structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FE.html#line234"
	},
	{
		"displayText": "DimensionInfo",
		"type": "struct",
		"description": "Data structure for display dimensions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FF.html#line120"
	},
	{
		"displayText": "DiscResource",
		"type": "struct",
		"description": "Disk resouce data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0600.html#line47"
	},
	{
		"displayText": "DiscResourceUnit",
		"type": "struct",
		"description": "Disk resouce unit data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0600.html#line40"
	},
	{
		"displayText": "DiskFontHeader",
		"type": "struct",
		"description": "Disk font header structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DA.html#line62"
	},
	{
		"displayText": "DiskObject",
		"type": "struct",
		"description": "Data structure for Workbench icons.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line64"
	},
	{
		"displayText": "DiskResource",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "DisplayInfo",
		"type": "struct",
		"description": "Data structure for display modes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FF.html#line52"
	},
	{
		"displayText": "DisplayMode",
		"type": "struct",
		"description": "List item for display modes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0601.html#line319"
	},
	{
		"displayText": "DosEnvec",
		"type": "struct",
		"description": "Disk environment vector structure for disk geometries.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FD.html#line22"
	},
	{
		"displayText": "DosInfo",
		"type": "struct",
		"description": "Dos info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line283"
	},
	{
		"displayText": "DosLibrary",
		"type": "struct",
		"description": "DOS library structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line236"
	},
	{
		"displayText": "DosList",
		"type": "struct",
		"description": "Combined structure for devices, assigned directories, volumes.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line371"
	},
	{
		"displayText": "DosPacket",
		"type": "struct",
		"description": "Structure for EXEC Messages used by DOS.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line107"
	},
	{
		"displayText": "DrawerData",
		"type": "struct",
		"description": "Drawer window snapshot data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line41"
	},
	{
		"displayText": "DrawInfo",
		"type": "struct",
		"description": "Data structure for rendering information of a screen.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0602.html#line65"
	},
	{
		"displayText": "DrawList",
		"type": "struct",
		"description": "drawlist.image BOOPSI class data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0603.html#line67"
	},
	{
		"displayText": "DriveGeometry",
		"type": "struct",
		"description": "trackdisk.device drive geometry structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0604.html#line134"
	},
	{
		"displayText": "DRPSourceMsg",
		"type": "struct",
		"description": "Message structure for DRPA_SourceHook (printer.device).",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line314"
	},
	{
		"displayText": "dtDraw",
		"type": "struct",
		"description": "datatype.class DTM_DRAW method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line429"
	},
	{
		"displayText": "dtFrameBox",
		"type": "struct",
		"description": "datatype.class DTM_FRAMEBOX method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line358"
	},
	{
		"displayText": "dtGeneral",
		"type": "struct",
		"description": "datatype.class method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line343"
	},
	{
		"displayText": "dtGoto",
		"type": "struct",
		"description": "datatype.class DTM_GOTO method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line373"
	},
	{
		"displayText": "DTHookContext",
		"type": "struct",
		"description": "DataTypes comparision hook context.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F7.html#line123"
	},
	{
		"displayText": "DTMethod",
		"type": "struct",
		"description": "Datatype method structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line272"
	},
	{
		"displayText": "dtPrint",
		"type": "struct",
		"description": "datatype.class DTM_PRINT method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line420"
	},
	{
		"displayText": "dtSelect",
		"type": "struct",
		"description": "datatype.class DTM_SELECT method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line350"
	},
	{
		"displayText": "DTSpecialInfo",
		"type": "struct",
		"description": "Gadget SpecialInfo structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line234"
	},
	{
		"displayText": "dtTrigger",
		"type": "struct",
		"description": "datatype.class DTM_TRIGGER method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line382"
	},
	{
		"displayText": "dtWrite",
		"type": "struct",
		"description": "datatype.class DTM_WRITE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line443"
	},
	{
		"displayText": "EasyStruct",
		"type": "struct",
		"description": "Argument data structure for EasyRequest().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line1456"
	},
	{
		"displayText": "EClockVal",
		"type": "struct",
		"description": "timer.device E-Clock time value struct.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Devices_Manual_guide/node00BF.html#line31"
	},
	{
		"displayText": "ErrorString",
		"type": "struct",
		"description": "A structure for holding dos error messages.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line226"
	},
	{
		"displayText": "ExAllControl",
		"type": "struct",
		"description": "Control structure passed to ExAll().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0608.html#line69"
	},
	{
		"displayText": "ExAllData",
		"type": "struct",
		"description": "Structure ExAll() results are returned in.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0608.html#line44"
	},
	{
		"displayText": "ExecBase",
		"type": "struct",
		"description": "Exec library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0609.html#line33"
	},
	{
		"displayText": "ExpansionBase",
		"type": "struct",
		"description": "Expansion library base structure",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E1.html#line43"
	},
	{
		"displayText": "ExpansionControl",
		"type": "struct",
		"description": "Expansion board control structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FE.html#line68"
	},
	{
		"displayText": "ExpansionRom",
		"type": "struct",
		"description": "Data structure for expansion board ROMs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FE.html#line45"
	},
	{
		"displayText": "ExtendedNode",
		"type": "struct",
		"description": "Extended graphics node structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060A.html#line16"
	},
	{
		"displayText": "ExtGadget",
		"type": "struct",
		"description": "Extended Gadget structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line262"
	},
	{
		"displayText": "ExtIntuiMessage",
		"type": "struct",
		"description": "Extended IntuiMessage structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line821"
	},
	{
		"displayText": "ExtNewScreen",
		"type": "struct",
		"description": "Intuition Extended Screen structure",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0602.html#line512"
	},
	{
		"displayText": "ExtNewWindow",
		"type": "struct",
		"description": "Intuition Extended Window structure",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line1156"
	},
	{
		"displayText": "ExtSprite",
		"type": "struct",
		"description": "Extended Sprite structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060B.html#line26"
	},
	{
		"displayText": "FileHandle",
		"type": "struct",
		"description": "File handle structure returned by Open().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line88"
	},
	{
		"displayText": "FileInfoBlock",
		"type": "struct",
		"description": "Data structure returned by Examine().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F8.html#line60"
	},
	{
		"displayText": "FileLock",
		"type": "struct",
		"description": "Lock structure returned by Lock().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line455"
	},
	{
		"displayText": "FileRequester",
		"type": "struct",
		"description": "ASL File Requester data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0601.html#line66"
	},
	{
		"displayText": "FileSysEntry",
		"type": "struct",
		"description": "Environment vector for filesystems.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060C.html#line30"
	},
	{
		"displayText": "FileSysHeaderBlock",
		"type": "struct",
		"description": "Header struct for filesystems in RDB.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DB.html#line174"
	},
	{
		"displayText": "FileSysResource",
		"type": "struct",
		"description": "File system resource item structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060C.html#line24"
	},
	{
		"displayText": "FileSysStartupMsg",
		"type": "struct",
		"description": "File system startup message for exec.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FD.html#line80"
	},
	{
		"displayText": "FolderIndex",
		"type": "struct",
		"description": "Folder indexing public data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D8.html#line161"
	},
	{
		"displayText": "FontContents",
		"type": "struct",
		"description": "diskfont.library font contents structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DA.html#line26"
	},
	{
		"displayText": "FontContentsHeader",
		"type": "struct",
		"description": "diskfont.library font contents header structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DA.html#line52"
	},
	{
		"displayText": "FontPrefs",
		"type": "struct",
		"description": "Font preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060D.html#line36"
	},
	{
		"displayText": "FontRequester",
		"type": "struct",
		"description": "ASL Font Requester data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0601.html#line186"
	},
	{
		"displayText": "FrameInfo",
		"type": "struct",
		"description": "Datatype object frame info struct.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0606.html#line315"
	},
	{
		"displayText": "FreeList",
		"type": "struct",
		"description": "A list of MemList structures to be freed.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line85"
	},
	{
		"displayText": "Gadget",
		"type": "struct",
		"description": "Intiution gadget structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line213"
	},
	{
		"displayText": "GadgetInfo",
		"type": "struct",
		"description": "Information passed to BOOPSI gadget hook functions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060E.html#line24"
	},
	{
		"displayText": "GamePortTrigger",
		"type": "struct",
		"description": "Information needed for gameport trigger.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060F.html#line35"
	},
	{
		"displayText": "GelsInfo",
		"type": "struct",
		"description": "Argument structure for InitGels().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D7.html#line38"
	},
	{
		"displayText": "GfxBase",
		"type": "struct",
		"description": "graphics.library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0612.html#line25"
	},
	{
		"displayText": "GlyphEngine",
		"type": "struct",
		"description": "Glyph library handle returned by OpenEngine().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0613.html#line25"
	},
	{
		"displayText": "GlyphMap",
		"type": "struct",
		"description": "GlyphMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0613.html#line33"
	},
	{
		"displayText": "GlyphWidthEntry",
		"type": "struct",
		"description": "Glyph width item structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0613.html#line50"
	},
	{
		"displayText": "gpDomain",
		"type": "struct",
		"description": "gadget class GM_DOMAIN method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line475"
	},
	{
		"displayText": "gpGoInactive",
		"type": "struct",
		"description": "gadget class GM_GOINACTIVE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line435"
	},
	{
		"displayText": "gpHitTest",
		"type": "struct",
		"description": "gadget class GM_HITTEST method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line343"
	},
	{
		"displayText": "gpInput",
		"type": "struct",
		"description": "gadget class GM_HANDLEINPUT method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line392"
	},
	{
		"displayText": "gpKeyGoInactive",
		"type": "struct",
		"description": "gadget class GM_KEYGOACTIVE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line537"
	},
	{
		"displayText": "gpKeyInput",
		"type": "struct",
		"description": "gadget class GM_KEYGOACTIVE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line521"
	},
	{
		"displayText": "gpKeyTest",
		"type": "struct",
		"description": "gadget class GM_KEYTEST method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line502"
	},
	{
		"displayText": "gpLayout",
		"type": "struct",
		"description": "gadget class GM_LAYOUT method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line459"
	},
	{
		"displayText": "gpRender",
		"type": "struct",
		"description": "gadget class GM_RENDER method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0615.html#line376"
	},
	{
		"displayText": "HDWLibrary",
		"type": "struct",
		"description": "HDWrench library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FA.html#line27"
	},
	{
		"displayText": "HintInfo",
		"type": "struct",
		"description": "Static Array of help hints.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0652.html"
	},
	{
		"displayText": "Hook",
		"type": "struct",
		"description": "Hook function structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0617.html#line27"
	},
	{
		"displayText": "IBox",
		"type": "struct",
		"description": "A data structure common in V36 Intuition processing.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line895"
	},
	{
		"displayText": "IClass",
		"type": "struct",
		"description": "BOOPSI class structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E6.html#line35"
	},
	{
		"displayText": "IconIdentifyMsg",
		"type": "struct",
		"description": "For use with the file identification hook.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0618.html#line255"
	},
	{
		"displayText": "IconSelectMsg",
		"type": "struct",
		"description": "The message your icon selection change hook is invoked with.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line398"
	},
	{
		"displayText": "IControlPrefs",
		"type": "struct",
		"description": "IControl preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0619.html#line30"
	},
	{
		"displayText": "IENewTablet",
		"type": "struct",
		"description": "Input event new Tablet structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061A.html#line137"
	},
	{
		"displayText": "IEPointerPixel",
		"type": "struct",
		"description": "Input event pointer pixel position structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061A.html#line96"
	},
	{
		"displayText": "IEPointerTablet",
		"type": "struct",
		"description": "Input event pointer tablet position structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061A.html#line116"
	},
	{
		"displayText": "IFFHandle",
		"type": "struct",
		"description": "Structure associated with an active IFF stream.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E8.html#line43"
	},
	{
		"displayText": "IFFStreamCmd",
		"type": "struct",
		"description": "iffparse.library stream handler message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E8.html#line65"
	},
	{
		"displayText": "Image",
		"type": "struct",
		"description": "Intuition image structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line704"
	},
	{
		"displayText": "impDomainFrame",
		"type": "struct",
		"description": "image.class IM_DOMAINFRAME method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061B.html#line288"
	},
	{
		"displayText": "impDraw",
		"type": "struct",
		"description": "image.class IM_DRAW method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061B.html#line223"
	},
	{
		"displayText": "impErase",
		"type": "struct",
		"description": "image.class IM_ERASE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061B.html#line246"
	},
	{
		"displayText": "impFrameBox",
		"type": "struct",
		"description": "image.class IM_FRAMEBOX method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061B.html#line210"
	},
	{
		"displayText": "impHitTest",
		"type": "struct",
		"description": "image.class IM_HITTEST method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061B.html#line265"
	},
	{
		"displayText": "InfoData",
		"type": "struct",
		"description": "Dos.library return structure for Info().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F8.html#line146"
	},
	{
		"displayText": "InputEvent",
		"type": "struct",
		"description": "Input event structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061A.html#line256"
	},
	{
		"displayText": "InputPrefs",
		"type": "struct",
		"description": "Input preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061C.html#line34"
	},
	{
		"displayText": "InputXpression",
		"type": "struct",
		"description": "commodities.library IX structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0632.html#line74"
	},
	{
		"displayText": "Interrupt",
		"type": "struct",
		"description": "Interrupt structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061D.html#line21"
	},
	{
		"displayText": "IntuiMessage",
		"type": "struct",
		"description": "IntuiMessage structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line762"
	},
	{
		"displayText": "IntuiText",
		"type": "struct",
		"description": "IntuiText structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line655"
	},
	{
		"displayText": "IntuitionBase",
		"type": "struct",
		"description": "intuition.library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061E.html#line65"
	},
	{
		"displayText": "IntVector",
		"type": "struct",
		"description": "Private exec.library interrupt vector structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061D.html#line28"
	},
	{
		"displayText": "IOAudio",
		"type": "struct",
		"description": "audio.device Audio IO structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061F.html#line44"
	},
	{
		"displayText": "IoBuff",
		"type": "struct",
		"description": "rexx.library I/O buffer list structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0620.html#line23"
	},
	{
		"displayText": "IOClipReq",
		"type": "struct",
		"description": "clipboard.device I/O request structure returned by CreateExtIO().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E9.html#line40"
	},
	{
		"displayText": "IODRPReq",
		"type": "struct",
		"description": "printer.device I/O request structure for PRD_DUMPRPORT.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line173"
	},
	{
		"displayText": "IODRPTagsReq",
		"type": "struct",
		"description": "printer.device I/O request structure for PRD_DUMPRPORTTAGS.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line196"
	},
	{
		"displayText": "IOExtPar",
		"type": "struct",
		"description": "parallel.device extended I/O request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Devices_Manual_guide/node0010.html#line7"
	},
	{
		"displayText": "IOExtSer",
		"type": "struct",
		"description": "serial.device extended I/O request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Devices_Manual_guide/node009C.html#line7"
	},
	{
		"displayText": "IOExtTD",
		"type": "struct",
		"description": "trackdisk.device extended I/O request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0604.html#line116"
	},
	{
		"displayText": "IOPArray",
		"type": "struct",
		"description": "paralel.device structure for terminators.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_2._guide/node004A.html"
	},
	{
		"displayText": "IOPrefsReq",
		"type": "struct",
		"description": "printer.device private I/O request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line399"
	},
	{
		"displayText": "IOPrtCmdReq",
		"type": "struct",
		"description": "printer.device I/O request structure for PRD_PRTCOMMAND.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line155"
	},
	{
		"displayText": "IOPrtErrReq",
		"type": "struct",
		"description": "printer.device I/O request structure for PRD_SETERRHOOK.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line361"
	},
	{
		"displayText": "IOPrtPrefsReq",
		"type": "struct",
		"description": "printer.device I/O request structure for PRD_EDITPREFS.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line339"
	},
	{
		"displayText": "IORequest",
		"type": "struct",
		"description": "Basic I/O request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0621.html#line17"
	},
	{
		"displayText": "IOStdReq",
		"type": "struct",
		"description": "Standard I/O request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0621.html#line26"
	},
	{
		"displayText": "IOTArray",
		"type": "struct",
		"description": "serial.device structure for terminators.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_2._guide/node004B.html"
	},
	{
		"displayText": "Isrvstr",
		"type": "struct",
		"description": "Structure used by AddTOFTask().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0622.html#line17"
	},
	{
		"displayText": "KeyMap",
		"type": "struct",
		"description": "KeyMap structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0623.html#line20"
	},
	{
		"displayText": "KeyMapNode",
		"type": "struct",
		"description": "KeyMap node structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0623.html#line31"
	},
	{
		"displayText": "KeyMapResource",
		"type": "struct",
		"description": "KeyMap resource structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0623.html#line37"
	},
	{
		"displayText": "KeyQuery",
		"type": "struct",
		"description": "lowlevel.library structure for use with QueryKeys().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0624.html#line29"
	},
	{
		"displayText": "Layer",
		"type": "struct",
		"description": "Layer structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EA.html#line26"
	},
	{
		"displayText": "Layer_Info",
		"type": "struct",
		"description": "Layer info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0625.html#line30"
	},
	{
		"displayText": "Library",
		"type": "struct",
		"description": "Library Base Structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0626.html#line33"
	},
	{
		"displayText": "Line",
		"type": "struct",
		"description": "Line structure in text objects.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0627.html#line42"
	},
	{
		"displayText": "List",
		"type": "struct",
		"description": "Exec list structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0628.html#line19"
	},
	{
		"displayText": "LoadSegBlock",
		"type": "struct",
		"description": "Drive initialization description block structure in RDB.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DB.html#line207"
	},
	{
		"displayText": "LocalContextItem",
		"type": "struct",
		"description": "iffparse.library local context item structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E8.html#line103"
	},
	{
		"displayText": "Locale",
		"type": "struct",
		"description": "locale.library locale structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E3.html#line117"
	},
	{
		"displayText": "LocaleBase",
		"type": "struct",
		"description": "locale.library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E3.html#line106"
	},
	{
		"displayText": "LocalePrefs",
		"type": "struct",
		"description": "Locale preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F4.html#line83"
	},
	{
		"displayText": "LocalVar",
		"type": "struct",
		"description": "Local dos variable structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0629.html#line24"
	},
	{
		"displayText": "LVDrawMsg",
		"type": "struct",
		"description": "gadtools.library listview.class LV_DRAW method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062A.html#line444"
	},
	{
		"displayText": "MathIEEEBase",
		"type": "struct",
		"description": "MathIEEE.library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062B.html#line18"
	},
	{
		"displayText": "MathIEEEResource",
		"type": "struct",
		"description": "MathIEEE.library resource structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062C.html#line32"
	},
	{
		"displayText": "MemChunk",
		"type": "struct",
		"description": "Memory chunk structure used in MemHeaders.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062D.html#line19"
	},
	{
		"displayText": "MemEntry",
		"type": "struct",
		"description": "Memory structure for every entry in MemLists.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062D.html#line39"
	},
	{
		"displayText": "MemHandlerData",
		"type": "struct",
		"description": "Memory alloc. request info structure for Exec memory handler.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062D.html#line89"
	},
	{
		"displayText": "MemHeader",
		"type": "struct",
		"description": "Argument structure for Allocate().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062D.html#line27"
	},
	{
		"displayText": "MemList",
		"type": "struct",
		"description": "Memory structure for AllocEntry().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062D.html#line55"
	},
	{
		"displayText": "Menu",
		"type": "struct",
		"description": "Intuition menu structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line59"
	},
	{
		"displayText": "MenuItem",
		"type": "struct",
		"description": "Intuition menu item structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line87"
	},
	{
		"displayText": "Message",
		"type": "struct",
		"description": "Exec message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062E.html#line46"
	},
	{
		"displayText": "MinList",
		"type": "struct",
		"description": "Exec MinList structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0628.html#line30"
	},
	{
		"displayText": "MinNode",
		"type": "struct",
		"description": "Exec MinNode structure for MinLists.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062F.html#line30"
	},
	{
		"displayText": "MonitorInfo",
		"type": "struct",
		"description": "Display info for monitors.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FF.html#line137"
	},
	{
		"displayText": "MonitorSpec",
		"type": "struct",
		"description": "Monitor specifications structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D3.html#line24"
	},
	{
		"displayText": "mouth_rb",
		"type": "struct",
		"description": "narrator.device read request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0630.html#line128"
	},
	{
		"displayText": "MsgPort",
		"type": "struct",
		"description": "Exec message port structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062E.html#line27"
	},
	{
		"displayText": "NamedObject",
		"type": "struct",
		"description": "Structure returned by AllocNamedObjectA().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0631.html#line24"
	},
	{
		"displayText": "NameInfo",
		"type": "struct",
		"description": "Structure for display mode names.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FF.html#line163"
	},
	{
		"displayText": "narrator_rb",
		"type": "struct",
		"description": "narrator.device write request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0630.html#line93"
	},
	{
		"displayText": "NewAmigaGuide",
		"type": "struct",
		"description": "New Amiga Guide data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D2.html#line102"
	},
	{
		"displayText": "NewBroker",
		"type": "struct",
		"description": "commodities.library New Broker structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0632.html#line39"
	},
	{
		"displayText": "NewGadget",
		"type": "struct",
		"description": "gadtools.library New Gadget structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062A.html#line82"
	},
	{
		"displayText": "NewMenu",
		"type": "struct",
		"description": "gadtools.library New Menu structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062A.html#line113"
	},
	{
		"displayText": "NewScreen",
		"type": "struct",
		"description": "Intuition New Screen structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0602.html#line476"
	},
	{
		"displayText": "NewWindow",
		"type": "struct",
		"description": "Intuition New Window structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line1086"
	},
	{
		"displayText": "NexxStr",
		"type": "struct",
		"description": "Structure for internal Rexx argument strings.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0633.html#line40"
	},
	{
		"displayText": "Node",
		"type": "struct",
		"description": "Node structure for Exec lists.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node062F.html#line21"
	},
	{
		"displayText": "NotifyMessage",
		"type": "struct",
		"description": "Dos notification message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0634.html#line38"
	},
	{
		"displayText": "NotifyRequest",
		"type": "struct",
		"description": "Dos notification request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0634.html#line50"
	},
	{
		"displayText": "NVEntry",
		"type": "struct",
		"description": "nonvolatile.library item structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0635.html#line38"
	},
	{
		"displayText": "NVInfo",
		"type": "struct",
		"description": "nonvolatile.library info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0635.html#line28"
	},
	{
		"displayText": "OldDrawerData",
		"type": "struct",
		"description": "Workbench.library pre V36 drawer window snapshot data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D6.html#line33"
	},
	{
		"displayText": "opAddTail",
		"type": "struct",
		"description": "Intuition object class OM_ADDTAIL method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0636.html#line115"
	},
	{
		"displayText": "opExpungeNode",
		"type": "struct",
		"description": "Intuition object class HM_EXPUNGE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D2.html#line232"
	},
	{
		"displayText": "opFindHost",
		"type": "struct",
		"description": "amigaguide.library HM_FINDNODE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D2.html#line189"
	},
	{
		"displayText": "opGet",
		"type": "struct",
		"description": "Intuition object class OM_GET method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0636.html#line106"
	},
	{
		"displayText": "opMember",
		"type": "struct",
		"description": "Intuition object class OM_ADDMEMBER method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0636.html#line122"
	},
	{
		"displayText": "opNodeIO",
		"type": "struct",
		"description": "amigaguide.library HM_OPENNODE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D2.html#line201"
	},
	{
		"displayText": "opSet",
		"type": "struct",
		"description": "Intuition object class OM_SET method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0636.html#line76"
	},
	{
		"displayText": "opUpdate",
		"type": "struct",
		"description": "Intuition object class OM_UPDATE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0636.html#line86"
	},
	{
		"displayText": "orRequest",
		"type": "struct",
		"description": "Requester class RM_OPENREQ method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0637.html#line166"
	},
	{
		"displayText": "OverscanPrefs",
		"type": "struct",
		"description": "Overscan preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0638.html#line36"
	},
	{
		"displayText": "PaletteExtra",
		"type": "struct",
		"description": "graphics.library extra palette information structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05ED.html#line142"
	},
	{
		"displayText": "PalettePrefs",
		"type": "struct",
		"description": "Palette preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0639.html#line34"
	},
	{
		"displayText": "PartitionBlock",
		"type": "struct",
		"description": "Partition identifier block structure in RDB.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DB.html#line150"
	},
	{
		"displayText": "pdtBlitPixelArray",
		"type": "struct",
		"description": "Picture datatype class PDTM_WRITEPIXELARRAY method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DD.html#line169"
	},
	{
		"displayText": "pdtScale",
		"type": "struct",
		"description": "OS4 Picture datatype class PDTM_SCALE method message structure.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amigadevhelp/phpwebdev.php?keyword=pictureclass.h&funcgroup=AmigaOS&action=Search"
	},
	{
		"displayText": "PGX",
		"type": "struct",
		"description": "Private extra data structure for propgadets.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060E.html#line68"
	},
	{
		"displayText": "Player",
		"type": "struct",
		"description": "realtime.library Player structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F0.html#line105"
	},
	{
		"displayText": "pmState",
		"type": "struct",
		"description": "realtime.library PM_STATE method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F0.html#line173"
	},
	{
		"displayText": "pmTime",
		"type": "struct",
		"description": "realtime.library PM_TICK method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F0.html#line166"
	},
	{
		"displayText": "PointerPrefs",
		"type": "struct",
		"description": "Pointer preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063A.html#line28"
	},
	{
		"displayText": "PPCBase",
		"type": "struct",
		"description": "PPC library base structure.",
		"descriptionMoreURL": "http://cd.textfiles.com/amigaacs/amigaacs199706/Utilities/CommercialDemos/WarpUP-WarpOS/include/powerpc/powerpc.h"
	},
	{
		"displayText": "Preferences",
		"type": "struct",
		"description": "Old-style preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063B.html#line57"
	},
	{
		"displayText": "PrefHeader",
		"type": "struct",
		"description": "File format structure for preference headers.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063C.html#line31"
	},
	{
		"displayText": "PrinterData",
		"type": "struct",
		"description": "PrinterData structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FC.html#line103"
	},
	{
		"displayText": "PrinterDeviceUnitPrefs",
		"type": "struct",
		"description": "Descriptor for printer device units.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063D.html#line98"
	},
	{
		"displayText": "PrinterExtendedData",
		"type": "struct",
		"description": "Extended Printer data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FC.html#line275"
	},
	{
		"displayText": "PrinterGfxPrefs",
		"type": "struct",
		"description": "PrinterGfx preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063E.html#line30"
	},
	{
		"displayText": "PrinterPSPrefs",
		"type": "struct",
		"description": "PrinterPS preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063F.html#line30"
	},
	{
		"displayText": "PrinterSegment",
		"type": "struct",
		"description": "Printer segment structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FC.html#line441"
	},
	{
		"displayText": "PrinterTxtPrefs",
		"type": "struct",
		"description": "PrinterTxt preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063D.html#line29"
	},
	{
		"displayText": "PrinterUnitPrefs",
		"type": "struct",
		"description": "Information needed to open printer units.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063D.html#line87"
	},
	{
		"displayText": "Process",
		"type": "struct",
		"description": "AmigaDOS process structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line36"
	},
	{
		"displayText": "PropInfo",
		"type": "struct",
		"description": "Data structure for proportional gadgets.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line537"
	},
	{
		"displayText": "PrtDriverPreferences",
		"type": "struct",
		"description": "Data structure for printer driver specific preferences.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FC.html#line459"
	},
	{
		"displayText": "PrtErrMsg",
		"type": "struct",
		"description": "printer.device error message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0605.html#line383"
	},
	{
		"displayText": "PubScreenNode",
		"type": "struct",
		"description": "Public screen structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0602.html#line548"
	},
	{
		"displayText": "QCode",
		"type": "struct",
		"description": "cd.device Q-Code packet structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E4.html#line284"
	},
	{
		"displayText": "QueryHeader",
		"type": "struct",
		"description": "Display mode Query Header structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FF.html#line44"
	},
	{
		"displayText": "RasInfo",
		"type": "struct",
		"description": "Information structure about the raster bitmap.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_2._guide/node00B8.html#line106"
	},
	{
		"displayText": "PrtInfo",
		"type": "struct",
		"description": "printer.device printer info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_2._guide/node003B.html#line33"
	},
	{
		"displayText": "RastPort",
		"type": "struct",
		"description": "Raster port structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D7.html#line53"
	},
	{
		"displayText": "RDArgs",
		"type": "struct",
		"description": "Data structure for Dos function ReadArgs().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F5.html#line94"
	},
	{
		"displayText": "RealTimeBase",
		"type": "struct",
		"description": "realtime.library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F0.html#line203"
	},
	{
		"displayText": "RecordLock",
		"type": "struct",
		"description": "Data structure used by LockRecord().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0641.html#line26"
	},
	{
		"displayText": "Rect32",
		"type": "struct",
		"description": "graphics.library 32bit rectangle struct.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DC.html#line32"
	},
	{
		"displayText": "Rectangle",
		"type": "struct",
		"description": "graphics.library rectangle struct.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DC.html#line26"
	},
	{
		"displayText": "Region",
		"type": "struct",
		"description": "graphics.library region struct.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0642.html#line26"
	},
	{
		"displayText": "RegionRectangle",
		"type": "struct",
		"description": "graphics.library region rectangle struct.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0642.html#line20"
	},
	{
		"displayText": "Remember",
		"type": "struct",
		"description": "Intuition memmory allocation remember structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line1429"
	},
	{
		"displayText": "ReqToolsBase",
		"type": "struct",
		"description": "reqtools.library base structure.",
		"descriptionMoreURL": "http://www.ummon.eu/Amiga/API/Library/ReqTools.Library/structures/ReqToolsBase.html"
	},
	{
		"displayText": "Requester",
		"type": "struct",
		"description": "Intuition requester structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line143"
	},
	{
		"displayText": "Resident",
		"type": "struct",
		"description": "Structure for resident modules.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0643.html#line17"
	},
	{
		"displayText": "RexxArg",
		"type": "struct",
		"description": "Structure for Rexx argument strings.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0633.html#line85"
	},
	{
		"displayText": "RexxMsg",
		"type": "struct",
		"description": "Exec message structure for communication with Rexx programs.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0633.html#line97"
	},
	{
		"displayText": "RexxMsgPort",
		"type": "struct",
		"description": "Message port structure for Rexx messages.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0620.html#line62"
	},
	{
		"displayText": "RexxRsrc",
		"type": "struct",
		"description": "Rexx global resource structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0633.html#line160"
	},
	{
		"displayText": "RexxTask",
		"type": "struct",
		"description": "Rexx task structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0633.html#line185"
	},
	{
		"displayText": "RGBTable",
		"type": "struct",
		"description": "Pointer prefs RGB color structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node063A.html#line52"
	},
	{
		"displayText": "RigidDiskBlock",
		"type": "struct",
		"description": "Rigid Disk Block structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DB.html#line64"
	},
	{
		"displayText": "RMSF",
		"type": "struct",
		"description": "cd.device position info structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E4.html#line193"
	},
	{
		"displayText": "RootNode",
		"type": "struct",
		"description": "Dos library root node structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line251"
	},
	{
		"displayText": "rw_return",
		"type": "struct",
		"description": "HDWrench disk read write return structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FA.html"
	},
	{
		"displayText": "RxsLib",
		"type": "struct",
		"description": "The REXX systems library structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0644.html#line24"
	},
	{
		"displayText": "SatisfyMsg",
		"type": "struct",
		"description": "clipboard.device satisfy post message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E9.html#line56"
	},
	{
		"displayText": "Screen",
		"type": "struct",
		"description": "Intuition Screen structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0602.html#line132"
	},
	{
		"displayText": "ScreenBuffer",
		"type": "struct",
		"description": "Double buffer info returned by AllocScreenBuffer().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0602.html#line644"
	},
	{
		"displayText": "ScreenModePrefs",
		"type": "struct",
		"description": "Screen Mode Preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0645.html#line30"
	},
	{
		"displayText": "ScreenModeRequester",
		"type": "struct",
		"description": "ASL Screen Mode Requester data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0601.html#line286"
	},
	{
		"displayText": "SCSICmd",
		"type": "struct",
		"description": "scsi.device command structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0646.html#line92"
	},
	{
		"displayText": "Segment",
		"type": "struct",
		"description": "Structure for a segment in Dos resident lists.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line298"
	},
	{
		"displayText": "Semaphore",
		"type": "struct",
		"description": "INFO",
		"descriptionMoreURL": "LINK"
	},
	{
		"displayText": "SemaphoreMessage",
		"type": "struct",
		"description": "Semaphore procure message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0647.html#line50"
	},
	{
		"displayText": "SemaphoreRequest",
		"type": "struct",
		"description": "Private structure used by ObtainSemaphore().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0647.html#line32"
	},
	{
		"displayText": "SerialPrefs",
		"type": "struct",
		"description": "Serial preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0648.html#line30"
	},
	{
		"displayText": "ServerProgressData",
		"type": "struct",
		"description": "aml.library structure for progress callbacks.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D8.html#line65"
	},
	{
		"displayText": "SetupCleanupHookMsg",
		"type": "struct",
		"description": "OS4 workbench.library The message your setup/cleanup hook gets invoked with.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amigadevhelp/phpwebdev.php?keyword=workbench.h&funcgroup=AmigaOS&action=Search"
	},
	{
		"displayText": "SGWork",
		"type": "struct",
		"description": "Intuition string gadget hook structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0649.html#line30"
	},
	{
		"displayText": "SignalSemaphore",
		"type": "struct",
		"description": "Exec Signal Semaphore data structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0647.html#line39"
	},
	{
		"displayText": "SimpleSprite",
		"type": "struct",
		"description": "Simple sprite structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node060B.html#line18"
	},
	{
		"displayText": "SoftIntList",
		"type": "struct",
		"description": "Exec private soft intterupt structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node061D.html#line35"
	},
	{
		"displayText": "SoundPrefs",
		"type": "struct",
		"description": "Sound preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node064A.html#line30"
	},
	{
		"displayText": "SpecialMonitor",
		"type": "struct",
		"description": "Special Monitor structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D3.html#line157"
	},
	{
		"displayText": "SrcNode",
		"type": "struct",
		"description": "Structure for Rexx segment arrays.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0633.html#line225"
	},
	{
		"displayText": "StackSwapStruct",
		"type": "struct",
		"description": "Structure used in Exec funtion StackSwap().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node064B.html#line51"
	},
	{
		"displayText": "StandardPacket",
		"type": "struct",
		"description": "AmigaDOS standard packet structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D9.html#line138"
	},
	{
		"displayText": "StoredProperty",
		"type": "struct",
		"description": "iffparse.library local context item structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E8.html#line118"
	},
	{
		"displayText": "StringExtend",
		"type": "struct",
		"description": "Intuition extended string gadget structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0649.html#line16"
	},
	{
		"displayText": "StringInfo",
		"type": "struct",
		"description": "Data structure for the intuition string gadget.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line609"
	},
	{
		"displayText": "TabletData",
		"type": "struct",
		"description": "Tablet data structure in ExtIntuiMessages.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line1651"
	},
	{
		"displayText": "TabletHookData",
		"type": "struct",
		"description": "Tablet hook structure in ExtIntuiMessages.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line1688"
	},
	{
		"displayText": "TagItem",
		"type": "struct",
		"description": "TagItem structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node064C.html#line31"
	},
	{
		"displayText": "Task",
		"type": "struct",
		"description": "Exec Task structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node064B.html#line23"
	},
	{
		"displayText": "TAvailFonts",
		"type": "struct",
		"description": "Structure for available fonts.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DA.html#line100"
	},
	{
		"displayText": "TDU_PublicUnit",
		"type": "struct",
		"description": "trackdisk.device public portion of the unit structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0604.html#line237"
	},
	{
		"displayText": "TextAttr",
		"type": "struct",
		"description": "graphics.library Text attributes structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EC.html#line64"
	},
	{
		"displayText": "TextExtent",
		"type": "struct",
		"description": "Structure returned by TextExtend().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EC.html#line163"
	},
	{
		"displayText": "TextFont",
		"type": "struct",
		"description": "diskfont.library font structure returned by OpenFont().",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EC.html#line88"
	},
	{
		"displayText": "TextFontExtension",
		"type": "struct",
		"description": "diskfont.library extended TextFont structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EC.html#line118"
	},
	{
		"displayText": "TextInputMsg",
		"type": "struct",
		"description": "OS4 workbench.library The messages your text input.hook is invoked with.",
		"descriptionMoreURL": "http://amiga.sourceforge.net/amigadevhelp/phpwebdev.php?keyword=workbench.h&funcgroup=AmigaOS&action=Search"
	},
	{
		"displayText": "TFontContents",
		"type": "struct",
		"description": "diskfont.library font contents structure with tags.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DA.html#line33"
	},
	{
		"displayText": "timerequest",
		"type": "struct",
		"description": "timer.device I/O request structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0607.html#line39"
	},
	{
		"displayText": "timeval",
		"type": "struct",
		"description": "timer.device time value struct.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0607.html#line29"
	},
	{
		"displayText": "TmpRas",
		"type": "struct",
		"description": "Memory buffer structure for RastPort functions.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D7.html#line31"
	},
	{
		"displayText": "TOCEntry",
		"type": "struct",
		"description": "cd.device TOC entry structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E4.html#line256"
	},
	{
		"displayText": "TOCSummary",
		"type": "struct",
		"description": "cd.device TOC summary structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E4.html#line248"
	},
	{
		"displayText": "Tool",
		"type": "struct",
		"description": "datatypes.library Tool structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F7.html#line144"
	},
	{
		"displayText": "ToolNode",
		"type": "struct",
		"description": "datatypes.library Tool list item structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F7.html#line190"
	},
	{
		"displayText": "TP_AmigaXIP",
		"type": "struct",
		"description": "card.resource tuple for Amiga execute-in-place software.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E2.html#line163"
	},
	{
		"displayText": "tPoint",
		"type": "struct",
		"description": "graphics.library point structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05DC.html"
	},
	{
		"displayText": "TTextAttr",
		"type": "struct",
		"description": "graphics.library Text attributes structure with tags.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05EC.html#line71"
	},
	{
		"displayText": "UCopList",
		"type": "struct",
		"description": "User copper list structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05F3.html#line88"
	},
	{
		"displayText": "Unit",
		"type": "struct",
		"description": "Device unit structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FB.html#line30"
	},
	{
		"displayText": "UtilityBase",
		"type": "struct",
		"description": "utility.library base structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node064E.html#line30"
	},
	{
		"displayText": "VecInfo",
		"type": "struct",
		"description": "graphics.library private VecInfo structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05FF.html#line176"
	},
	{
		"displayText": "View",
		"type": "struct",
		"description": "View structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05ED.html#line63"
	},
	{
		"displayText": "ViewExtra",
		"type": "struct",
		"description": "Extended View structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05ED.html#line75"
	},
	{
		"displayText": "ViewPort",
		"type": "struct",
		"description": "ViewPort structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05ED.html#line46"
	},
	{
		"displayText": "ViewPortExtra",
		"type": "struct",
		"description": "Extended ViewPort structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05ED.html#line85"
	},
	{
		"displayText": "VoiceHeader",
		"type": "struct",
		"description": "sound.datatype Voice header structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node064F.html#line111"
	},
	{
		"displayText": "VSprite",
		"type": "struct",
		"description": "Amiga GELs VSprite structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D4.html#line71"
	},
	{
		"displayText": "WBArg",
		"type": "struct",
		"description": "Workbench application argument structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0650.html#line33"
	},
	{
		"displayText": "WBPatternPrefs",
		"type": "struct",
		"description": "WBPattern preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0651.html#line25"
	},
	{
		"displayText": "WBStartup",
		"type": "struct",
		"description": "Exec message structure for WorkBench applications.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0650.html#line24"
	},
	{
		"displayText": "Window",
		"type": "struct",
		"description": "Intuition Window structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E0.html#line908"
	},
	{
		"displayText": "wmHandle",
		"type": "struct",
		"description": "window.class WM_HANDLEINPUT method message structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0652.html#line246"
	},
	{
		"displayText": "WorkbenchHiddenDevicePrefs",
		"type": "struct",
		"description": "Workbench preferences structure for hidden devices.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0653.html#line40"
	},
	{
		"displayText": "WorkbenchPrefs",
		"type": "struct",
		"description": "Workbench preferences structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node0653.html#line24"
	},
	{
		"displayText": "XRef",
		"type": "struct",
		"description": "amigaguide.library cross reference structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05D2.html#line147"
	},
	{
		"displayText": "_Object",
		"type": "struct",
		"description": "Private BOOPSI structure.",
		"descriptionMoreURL": "http://amigadev.elowar.com/read/ADCD_2.1/Includes_and_Autodocs_3._guide/node05E6.html#line78"
	}
